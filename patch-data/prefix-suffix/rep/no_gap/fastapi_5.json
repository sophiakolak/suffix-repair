{"candidate": "            f = create_cloned_field(f)\n            use_type.__fields__[f.name] = f\n", "entropy": 9.40955726859284}
{"candidate": "            original_field = f\n            new_field = create_cloned_field(f)\n            setattr(use_type, f.name, new_field)\n            for validator in original_field.validators:\n                use_type.__fields__[f.name].validators.append(validator)\n", "entropy": 29.793654657533093}
{"candidate": "            setattr(use_type.Config, f.name, f.default)\n", "entropy": 19.085141565188298}
{"candidate": "            # create the field with original_type instead of use_type, so it will have the original validators\n            new_field = create_cloned_field(f)\n            use_type.__fields__[f.alias] = new_field\n", "entropy": 54.59731496441901}
{"candidate": "            use_type.add_field(create_cloned_field(f))\n\n        use_types = get_use_types(original_type)\n        if use_types is not None:\n            use_type.__use_types__ = use_types  # type:ignore\n        if hasattr(original_type, \"__validators__\"):\n    ", "entropy": 41.092171100417715}
{"candidate": "            use_type.__fields__[f.name] = create_cloned_field(f)\n", "entropy": 10.6427187949743}
{"candidate": "            if f.field_info.default is MISSING:\n                f.field_info.default = None\n                f.default = None\n                f.required = False\n        use_type.__fields__ = original_type.__fields__\n", "entropy": 29.561399206455004}
{"candidate": "            new_field = create_cloned_field(f)\n            new_field.model_config = use_type.__config__\n            new_field.model = use_type\n            f.model_config = use_type.__config__\n            f.model = use_type\n            setattr(use_type, new_field.name, new_field)\n", "entropy": 27.026981079167403}
{"candidate": "            f_clone = create_cloned_field(f)\n            setattr(use_type, f.name, f_clone)\n", "entropy": 12.189089253265399}
{"candidate": "            use_type.add_field(\n                create_cloned_field(\n                    ModelField.infer(\n                        name=f.name,\n                        value=f.default,\n                        field=f,\n                        config=original_type.__config__,\n                        is_root=False,\n                    )\n                )\n            )\n", "entropy": 26.026958930694377}
{"candidate": "            new_f = create_cloned_field(f)\n            set_field(use_type, new_f.name, new_f)\n", "entropy": 14.3431391943954}
{"candidate": "            if f.class_validators or f.required or f.default or f.validators:\n                f = f.copy()\n                f.class_validators = {}\n                f.required = False\n                f.default = None\n                f.validators = []\n            use_type.__fields__[f.name] = f\n", "entropy": 40.096817218515405}
{"candidate": "            use_type.add_field(\n                name=f.name,\n                field=create_cloned_field(f),\n                default=f.default,\n                required=f.required,\n            )\n", "entropy": 20.393581280252437}
{"candidate": "            new_field = create_cloned_field(f)\n            use_type.__fields__[f.name] = new_field\n", "entropy": 10.230134581819}
{"candidate": "            use_type.__fields__[f.name] = create_cloned_field(f)\n", "entropy": 18.2785650501023}
{"candidate": "            use_type.add_field(create_cloned_field(f))\n", "entropy": 12.608264499532302}
{"candidate": "            if PYDANTIC_1:\n                model_field = create_cloned_field(f)\n            else:\n                model_field = create_cloned_field(f)  # type: ignore\n            setattr(use_type, model_field.name, model_field)\n        use_type.__root__ = original_type.__root__\n        use_type.__config__ = original_type.__", "entropy": 24.365196042924744}
{"candidate": "            setattr(use_type, f.name, f.default)\n        use_type.__root_validators__ = original_type.__root_validators__\n        use_type.__validators__ = original_type.__validators__\n    if PYDANTIC_1:\n        cloned_field = ModelField(\n            name=field.name,\n            type_=use_type,\n            class_", "entropy": 27.087920778187506}
{"candidate": "            use_type.add_field(create_cloned_field(f))\n        use_type.__validators__ = original_type.__validators__\n    if lenient_issubclass(original_type, List):\n        original_type = cast(Type[List], original_type)\n        use_type = List[original_type.__args__[0]]\n        if isinstance(use_type.__args", "entropy": 23.904206098459206}
{"candidate": "            f_clone = create_cloned_field(f)\n            use_type.__fields__[f.name] = f_clone\n        use_type.__validators__ = original_type.__validators__\n    elif lenient_issubclass(original_type, Field):\n        original_type = cast(Type[Field], original_type)\n        use_type = create_model(\n            original_type", "entropy": 17.1429849937281}
