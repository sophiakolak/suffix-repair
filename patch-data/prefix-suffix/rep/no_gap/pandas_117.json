{"candidate": "    elif isinstance(obj, (ABCSeries, np.ndarray, ABCIndexClass)):\n", "entropy": 6.518967434381}
{"candidate": "    elif isinstance(\n        obj,\n        (\n            ABCSeries,\n            np.ndarray,\n            ABCIndexClass,\n            ABCExtensionArray,\n            ABCDatetimeArray,\n            ABCTimedeltaArray,\n        ),\n    ):\n", "entropy": 3.5309721539450996}
{"candidate": "    elif isinstance(obj, (ABCSeries, np.ndarray, ABCIndexClass)):\n", "entropy": 10.231203149939999}
{"candidate": "    elif is_extension_array_dtype(obj):\n        return obj.isna()\n    elif isinstance(obj, ABCSparseArray):\n        return obj._isnan\n    elif isinstance(obj, ABCIndexClass):\n", "entropy": 25.531919169086}
{"candidate": "    elif isinstance(obj, ABCIndexClass):\n        return np.asarray(obj)._isna\n    elif isinstance(obj, (ABCSeries, ABCDataFrame)):\n", "entropy": 19.612291434044998}
{"candidate": "    elif isinstance(\n        obj,\n        (\n            ABCSeries,\n            np.ndarray,\n            ABCIndexClass,\n            ABCExtensionArray,\n            ABCDatetimeArray,\n            ABCTimedeltaArray,\n        ),\n    ):\n", "entropy": 4.7546806745063}
{"candidate": "    elif isinstance(\n        obj,\n        (\n            ABCSeries,\n            np.ndarray,\n            ABCIndexClass,\n            ABCExtensionArray,\n            ABCDatetimeArray,\n            ABCTimedeltaArray,\n        ),\n    ):\n", "entropy": 5.3161517529952}
{"candidate": "    elif isinstance(\n        obj,\n        (\n            ABCSeries,\n            np.ndarray,\n            ABCIndexClass,\n            ABCExtensionArray,\n            ABCDatetimeArray,\n            ABCTimedeltaArray,\n        ),\n    ):\n", "entropy": 5.7433124789517}
{"candidate": "    elif isinstance(\n        obj,\n        (\n            ABCSeries,\n            np.ndarray,\n            ABCIndexClass,\n            ABCExtensionArray,\n            ABCDatetimeArray,\n            ABCTimedeltaArray,\n        ),\n    ):\n", "entropy": 4.8838081239451}
{"candidate": "    elif _is_sparse(obj):\n        raise NotImplementedError(\"isna is not defined for sparse objects\")\n    elif isinstance(\n        obj,\n        (\n            ABCSeries,\n            np.ndarray,\n            ABCIndexClass,\n            ABCExtensionArray,\n            ABCDatetimeArray,\n            ABCTimedeltaArray,\n        ),\n    ):\n", "entropy": 13.885859706954724}
{"candidate": "    elif isinstance(\n        obj,\n        (\n            ABCSeries,\n            np.ndarray,\n            ABCIndexClass,\n            ABCExtensionArray,\n            ABCCategorical,\n            ABCDatetimeArray,\n            ABCTimedeltaArray,\n        ),\n    ):\n", "entropy": 11.117319020757902}
{"candidate": "    elif isinstance(obj, ABCSeries):\n        return obj._isna\n    elif isinstance(\n        obj, (ABCIndexClass, ABCExtensionArray, ABCDatetimeArray, ABCTimedeltaArray)\n    ):\n        return obj._isna\n    elif isinstance(obj, np.ndarray):\n", "entropy": 16.09361154738637}
{"candidate": "    elif isinstance(\n        obj, (ABCSeries, np.ndarray, ABCIndex, ABCExtensionArray)\n    ):\n", "entropy": 24.3592424583515}
{"candidate": "    elif isinstance(\n        obj,\n        (ABCSeries, ABCIndexClass, ABCExtensionArray, ABCDatetimeArray, ABCTimedeltaArray),\n    ):\n        return obj._isna\n    elif isinstance(obj, ABCCategorical):\n        return obj.isna()\n    elif isinstance(obj, np.ndarray):\n", "entropy": 27.4825164452723}
{"candidate": "    elif isinstance(obj, (ABCSeries, np.ndarray, ABDatetimeArray, ABCTimedeltaArray)):\n        return _isna_ndarraylike_old(obj)\n    elif isinstance(obj, collections.abc.Iterator):\n        # generator, list, iterator\n", "entropy": 44.24908083775518}
{"candidate": "    elif isinstance(obj, (ABCSeries, ABCIndexClass)):\n        return obj.isna()\n    elif isinstance(\n        obj,\n        (\n            np.ndarray,\n            ABCExtensionArray,\n            ABCDatetimeArray,\n            ABCTimedeltaArray,\n        ),\n    ):\n", "entropy": 10.774806956264797}
{"candidate": "    elif isinstance(obj, np.ndarray):\n        return _isna_ndarraylike_old(obj)\n    elif isinstance(obj, (ABCSeries, ABCIndexClass, ABCExtensionArray)):\n", "entropy": 10.043923353223041}
{"candidate": "    elif isinstance(obj, (ABCSeries, np.ndarray, ABCIndexClass, ABCExtensionArray)):\n", "entropy": 7.574495801560599}
{"candidate": "    elif isinstance(\n        obj,\n        (\n            ABCSeries,\n            np.ndarray,\n            ABCIndex,\n            ABCExtensionArray,\n            ABCDatetimeArray,\n            ABCTimedeltaArray,\n        ),\n    ):\n        # GH#13107 this object-dtype check should be done in\n        # _isna_ndarraylike_old\n        if obj.dtype == np.object_", "entropy": 44.74559913201352}
{"candidate": "    elif isinstance(obj, ABCSparseArray):\n        from pandas.core.sparse.api import isna as sparsea_isna\n\n        return sparsea_isna(obj)\n    elif isinstance(obj, ABCCategorical):\n        return _isna_ndarraylike(obj.codes, check_dtype=True)\n    elif isinstance(obj, (ABCSeries, np.ndarray)", "entropy": 39.58562714153026}
