{"candidate": "                    head = int(head) - 1\n                except ValueError:\n                    continue\n                if not use_morphology:\n                    morph = None\n                token = {\n                    \"id\": id_,\n                    \"form\": unescape(word),\n                    \"lemma\": unescape(lemma),\n                    \"upos\": pos,\n                    \"xpos\": tag,\n                    \"feats\": morph,\n                    \"head\": head,\n", "entropy": 23.261256677708}
{"candidate": "                    head = (int(head) - 1) if head != \"_\" else -1\n                except ValueError:\n                    raise ValueError(\n                        \"Non-integer value in conllx id field: {}\\n{}\".format(\n                            id_, line\n                        )\n                    )\n                if is_ner(tag):\n                    ner = iob\n                else:\n                    ner = \"_\"\n                if use_morphology:", "entropy": 28.32004089567701}
{"candidate": "                    head = (int(head) - 1) if head != \"_\" else None\n                    token = {\n                        \"word\": word,\n                        \"lemma\": lemma,\n                        \"ud_pos\": pos,\n                        \"ud_tag\": tag,\n                        \"is_ner\": is_ner(iob),\n                        \"head\": head,\n                        \"dep\": dep,\n                    }\n                    if use_morphology:\n                        token", "entropy": 29.335281605168003}
{"candidate": "                except ValueError:\n                    continue\n                try:\n                    head = (int(head)-1)\n                except ValueError:\n                    continue\n                tokens.append((id_, word, lemma, pos, tag, head, dep, iob))\n            if not tokens:\n                continue\n            yield tokens\n            i += 1\n            if i == n:\n                break\n\n\ndef read_conllu(input_data, use", "entropy": 32.982410421707}
{"candidate": "                    head = (int(head) - 1) if head != \"_\" else None\n                except ValueError:\n                    continue\n\n                if is_ner(iob):\n                    iob = iob\n                else:\n                    iob = None\n\n                tag = tag if tag != \"_\" else None\n                feats = morph if use_morphology and morph != \"_\" else None\n\n                token = Token(id_=id_,\n                              form", "entropy": 34.725330939319}
{"candidate": "                    head = (int(head) - 1) if head != \"_\" else None\n                except ValueError:\n                    raise ValueError(\n                        \"Non-integer in CoNLL-X file, incorrect format?\"\n                    )\n\n                if n != 0 and i % n == 0:\n                    if tokens:\n                        yield tokens\n                        tokens = []\n                if not is_ner(iob):\n                    iob = None\n                if use_", "entropy": 40.219827523156006}
{"candidate": "                    head = (int(head) - 1) if head != \"_\" else None\n                    iob = iob[2:] if iob[:2] == \"B-\" else \"O\"\n                    ner = iob if is_ner(iob) else None\n                except ValueError:\n                    logger.warning(\"Could not read CoNLL-X data:\\n{}\".format(sent))\n                    continue\n\n                token = {\n                   ", "entropy": 40.26674848243099}
{"candidate": "                    head = (int(head) - 1) if head != \"0\" else id_\n                except ValueError:\n                    continue\n\n                if is_ner(tag):\n                    tag, iob = tag.split(\"-\")\n                else:\n                    tag = \"O\"\n\n                tokens.append((int(id_),\n                               {\n                                   \"orth\": word,\n                                   \"dep\": dep,\n                                   \"head\":", "entropy": 41.00811452792399}
{"candidate": "                except ValueError:\n                    pass\n                try:\n                    head = (int(head) - 1) if head != \"_\" else None\n                except ValueError:\n                    pass\n                try:\n                    if len(parts) == 10:\n                        iob = parts[9]\n                    else:\n                        iob = None\n                except ValueError:\n                    pass\n\n                if word == \"''\" and id_ > 0:\n                    word", "entropy": 42.19154738535201}
{"candidate": "                except ValueError:\n                    continue\n                if not is_ner(iob):\n                    iob = \"O\"\n                head = int(head) - 1\n                head = head if head > 0 else 0\n                if use_morphology:\n                    if isinstance(morph, str):\n                        morphology = [morph]\n                    else:\n                        morphology = morph.split(\"|\")\n                else:\n                    morphology = []\n                tokens", "entropy": 43.91599416529899}
{"candidate": "                except ValueError:\n                    print(parts)\n                    raise\n                if id_ == 0 and not iob:\n                    iob = \"O\"\n                iob_match = re.match(\"([BI])-([A-Z_]+)\", iob)\n                if iob_match:\n                    ner_type = iob_match.group(2)\n                else:\n                    ner_type = None\n                if use_", "entropy": 44.361609731959405}
{"candidate": "                except ValueError:\n                    return []\n                try:\n                    head = (int(head) - 1) if head != \"_\" else id_\n                except ValueError:\n                    head = id_\n                if use_morphology:\n                    token = Features(id_, word, lemma, morph, pos, tag, head,\n                                     dep, is_ner(tag))\n                else:\n                    token = Features(id_,", "entropy": 45.58911689710599}
{"candidate": "                except ValueError:\n                    pass\n                try:\n                    head = int(head) - 1\n                except ValueError:\n                    head = None\n                if use_morphology:\n                    token = MorphToken(\n                        iob,\n                        lemma,\n                        pos,\n                        head,\n                        dep,\n                        input_data,\n                        id_,\n                        word,\n                        morph,\n                        tag,\n                    )\n                else", "entropy": 45.95751356631701}
{"candidate": "                    head = (int(head) - 1)\n                except IndexError:\n                    print(parts)\n                    continue\n                try:\n                    if len(parts) > 9:\n                        iob = parts[9]\n                        if iob == \"_\":\n                            iob = \"O\"\n                except IndexError:\n                    print(parts)\n                    continue\n                token = CoNLLToken(id_=id_,\n                                  ", "entropy": 48.64897406611999}
{"candidate": "                    head = (int(head) - 1) if head != '0' else id_\n                except ValueError:\n                    # id = '_'\n                    continue\n                if use_morphology:\n                    morph = morph.split(\"|\")[0]\n                    token = (\n                        id_,\n                        {\n                            TEXT: word,\n                            LEMMA: lemma,\n                            TAG: tag,\n                            MOR", "entropy": 48.696472004351996}
{"candidate": "                    head = (int(head) - 1) if head != \"0\" else head\n                except ValueError:\n                    raise ValueError(\"conllx data format error.\")\n                if iob not in (\"O\", \"B-NP\", \"I-NP\", \"B-VP\", \"I-VP\"):\n                    raise ValueError(\n                        \"Unsupported IOB tag: {0}\".format(iob))\n                token = Token(", "entropy": 50.00679648797001}
{"candidate": "                except ValueError:\n                    print(id_)\n                head = int(head) - 1\n                dep_cnt = n + len(tokens)\n                if not is_ner(iob):\n                    iob = None\n                if use_morphology:\n                    token = Token(id_, word, lemma, pos, tag, morph, head, dep, dep_cnt, iob=iob)\n               ", "entropy": 51.03653391964599}
{"candidate": "                except ValueError:\n                    continue\n                if id_ != len(tokens):\n                    raise IndexError\n\n                if iob.startswith(\"B-\"):\n                    entity_type = iob[2:]\n                    if is_ner(entity_type):\n                        continue\n                    head = int(head) - 1 if head != \"0\" else id_\n                    dep = \"root\" if dep == \"ROOT\" else dep\n\n", "entropy": 56.01148474351401}
{"candidate": "                except ValueError:\n                    pass\n                if lemma == \"_\":\n                    lemma = word\n                if iob == \"_\":\n                    iob = \"O\"\n\n                has_ner = is_ner(iob)\n                if use_morphology:\n                    if re.match(\"x\", tag):\n                        tokens.append((word, pos, tag, id_, head, dep))\n                    else:\n                        tokens.append((", "entropy": 60.873589764826}
{"candidate": "                except ValueError:\n                    print(parts)\n                    continue\n                head = int(head) - 1\n                # TODO: Handle Feats\n                feats = None\n                if use_morphology:\n                    morph = morph.split(\"|\")\n                else:\n                    morph = None\n                tag = id_to_tag.get(tag, tag)\n                ner = \"O\" if iob == \"-\" else iob\n               ", "entropy": 62.386791262282}
