{"candidate": "            for url in sitemap_urls_from_robots(response.text):\n                yield Request(url, self._parse_sitemap)\n        else:\n            body = self._get_sitemap_body(response)\n            if body is None:\n                self.logger.warning(\"Ignoring invalid sitemap: %(response)s\",\n                                    {'response': response}, extra={'spider':", "entropy": 3.3542817015426007}
{"candidate": "            for url in sitemap_urls_from_robots(response.text):\n                yield Request(url, self._parse_sitemap)\n        else:\n            body = self._get_sitemap_body(response)\n            if body is None:\n                self.logger.warning(\"Ignoring invalid sitemap: %(response)s\",\n                                    {'response': response}, extra={'spider':", "entropy": 3.382167392493599}
{"candidate": "            for url in sitemap_urls_from_robots(response.text):\n                yield Request(url, self._parse_sitemap)\n        else:\n            body = self._get_sitemap_body(response)\n            if body is None:\n                self.logger.warning(\"Ignoring invalid sitemap: %(response)s\",\n                                    {'response': response}, extra={'spider':", "entropy": 3.4370831690587984}
{"candidate": "            for url in sitemap_urls_from_robots(response.text):\n                yield Request(url, self._parse_sitemap)\n        else:\n            body = self._get_sitemap_body(response)\n            if body is None:\n                logger.warning(\"Ignoring invalid sitemap: %(response)s\",\n                               {'response': response}, extra={'spider': self})\n", "entropy": 3.9601314383617985}
{"candidate": "            for url in sitemap_urls_from_robots(response.text):\n                yield Request(url, self._parse_sitemap)\n        else:\n            body = self._get_sitemap_body(response)\n            if body is None:\n                logger.warning(\"Ignoring invalid sitemap: %(response)s\",\n                               {'response': response}, extra={'spider': self})\n", "entropy": 3.973327656942502}
{"candidate": "            for url in sitemap_urls_from_robots(response.text):\n                yield Request(url, self._parse_sitemap)\n        else:\n            body = self._get_sitemap_body(response)\n            if body is None:\n                logger.debug(\"Ignoring invalid sitemap: %(response)s\",\n                             {'response': response}, extra={'spider': self})\n", "entropy": 5.2501862876372964}
{"candidate": "            for url in sitemap_urls_from_robots(response.text):\n                yield Request(url, self._parse_sitemap)\n        else:\n            body = self._get_sitemap_body(response)\n            if body is None:\n                logger.warning(\"Invalid sitemap: %(response)s\",\n                               {'response': response}, extra={'spider': self})\n                return", "entropy": 5.478392651885899}
{"candidate": "            for url in sitemap_urls_from_robots(response.text):\n                yield self.make_requests_from_url(url)\n        else:\n            body = self._get_sitemap_body(response)\n            s = Sitemap(body)\n            if s.type == 'sitemapindex':\n                for loc in iterloc(s, self.sitemap_alternate_links", "entropy": 5.5063539393153995}
{"candidate": "            for url in sitemap_urls_from_robots(response.text):\n                yield self.make_requests_from_url(url)\n        else:\n            body = self._get_sitemap_body(response)\n            if body:\n                s = Sitemap(body, self.sitemap_alternate_links)\n                if s.type == 'sitemapindex':\n                    for loc", "entropy": 6.179924347205299}
{"candidate": "            for url in sitemap_urls_from_robots(response.text):\n                yield self.make_requests_from_url(url)\n        else:\n            body = self._get_sitemap_body(response)\n            if body:\n                s = Sitemap(body, self.sitemap_alternate_links)\n                if s.type == 'sitemapindex':\n                    for loc", "entropy": 6.261200133453899}
{"candidate": "            for url in sitemap_urls_from_robots(response.text):\n                yield Request(url, self._parse_sitemap)\n        else:\n            body = self._get_sitemap_body(response)\n            if body is not None:\n                s = Sitemap(body, self.sitemap_alternate_links)\n                if s.type == 'sitemapindex':\n                   ", "entropy": 6.409790252318502}
{"candidate": "            for url in sitemap_urls_from_robots(response.text):\n                yield Request(url, self._parse_sitemap)\n        else:\n            body = self._get_sitemap_body(response)\n            if body is None:\n                self.logger.warning('Ignoring invalid sitemap: %s', response.url)\n                return\n            s = Sitemap(body, self", "entropy": 7.2243219021846015}
{"candidate": "            for url in sitemap_urls_from_robots(response.text):\n                yield Request(url, self._parse_sitemap)\n        else:\n            body = self._get_sitemap_body(response)\n            s = Sitemap(body, self.sitemap_alternate_links)\n            if s.type == 'unknown':\n                logger.warning(\"Unknown sitemap type: %", "entropy": 7.284175746883298}
{"candidate": "            for url in sitemap_urls_from_robots(response.text):\n                yield self.make_requests_from_url(url)\n        else:\n            body = self._get_sitemap_body(response)\n            if body is None:\n                logger.error(\"Invalid sitemap: %(response)s\",\n                             {'response': response}, extra={'spider': self})\n               ", "entropy": 7.845031630427001}
{"candidate": "            for url in sitemap_urls_from_robots(response.text):\n                yield self.make_requests_from_url(url)\n        else:\n            body = self._get_sitemap_body(response)\n            if body is None:\n                self.logger.warning(\"Sitemap body is None: %(response)s\",\n                                    {'response': response}, extra={'spider", "entropy": 8.601921146476895}
{"candidate": "            for url in sitemap_urls_from_robots(response.text):\n                yield self.make_requests_from_url(url)\n        elif response.headers.get('Content-Type', '').startswith('text/xml'):\n            body = self._get_sitemap_body(response)\n            s = Sitemap(body)\n            if s.type == 'sitemapindex", "entropy": 8.873264906359699}
{"candidate": "            for url in sitemap_urls_from_robots(response.text):\n                yield self.make_requests_from_url(url)\n        else:\n            body = self._get_sitemap_body(response)\n            if body is None:\n                self.logger.info('Ignoring invalid sitemap: %s', response.url)\n            else:\n                s = Sitemap(body", "entropy": 9.123556099495998}
{"candidate": "            for url in sitemap_urls_from_robots(response.text):\n                yield Request(url, self._parse_sitemap)\n            return\n\n        if response.url.endswith('.xml') or response.headers.get('Content-Type', '').startswith('text/xml'):\n            body = self._get_sitemap_body(response)\n            s = Sitemap(body", "entropy": 10.922177998820601}
{"candidate": "            for url in sitemap_urls_from_robots(response.text):\n                yield Request(urljoin(response.url, url), self._parse_sitemap)\n            return\n        if response.headers.get('Content-Type', '').endswith('xml'):\n            body = self._get_sitemap_body(response)\n            s = Sitemap(body)\n            if s.type", "entropy": 12.294076811959}
{"candidate": "            for url in sitemap_urls_from_robots(response.body):\n                yield self.make_requests_from_url(url)\n            return\n\n        if 'content-encoding' in response.headers and response.headers.get('content-encoding') == 'gzip':\n            body = gunzip(response.body)\n        else:\n            body = response.body\n\n        if response.url.end", "entropy": 22.880305483370904}
