{"candidate": "                value = received_body.get(field.alias)\n            if value is None:\n                if field.required:\n                    errors.append(\n                        ErrorWrapper(  # type: ignore\n                            MissingError(),\n                            loc=(field_info.in_.value, field.alias),\n                            config=BaseConfig,\n                        )\n                    )\n                else:  # pragma: nocover\n                    values[field.", "entropy": 8.402146018378}
{"candidate": "                if field.alias in received_body:\n                    value = received_body[field.alias]\n            if value is not None:\n                v_, errors_ = field.validate(\n                    value, values, loc=(field_info.in_.value, field.alias)\n                )\n                if isinstance(errors_, ErrorWrapper):\n                    errors.append(errors_)\n                elif isinstance(errors_, list", "entropy": 9.364818100631}
{"candidate": "                value = received_body.get(field.alias)\n            if value is None:\n                if field.required and field.default is None:\n                    errors.append(\n                        ErrorWrapper(\n                            MissingError(),\n                            loc=(field_info.in_.value, field.alias),\n                            config=BaseConfig,\n                        )\n                    )\n                else:\n                    values[field.name] = deepcopy(field", "entropy": 12.446982884228001}
{"candidate": "                value = get_value_from_nested_dict(\n                    received_body, field.name.split(\".\")\n                )\n            if value is None:\n                if field.required:\n                    errors.append(\n                        ErrorWrapper(\n                            MissingError(),\n                            loc=(field_info.in_.value, field.alias),\n                            config=BaseConfig,\n                        )\n                    )\n                else:  #", "entropy": 22.14765975195901}
{"candidate": "                value = received_body.get(field.alias)\n            values, errors_ = await _parse_field(\n                field=field, field_info=field_info, value=value, values=values\n            )\n            if isinstance(errors_, ErrorWrapper):\n                errors.append(errors_)\n            elif isinstance(errors_, list):\n                errors.extend(errors_)\n    return values,", "entropy": 22.42486729418501}
{"candidate": "                loc = (field_info.in_.value, field.alias)\n                if field_info.in_.value == PARAM_IN_PATH:\n                    value = received_body.get(field.alias)\n                elif field_info.in_.value == PARAM_IN_QUERY:\n                    value = received_body.get(field.alias)\n                elif field_info.in_.value == PARAM_IN_", "entropy": 23.101246273073997}
{"candidate": "                if isinstance(received_body, FormData):\n                    received_body_ = received_body.dict(\n                        skip_missing=True, by_alias=True\n                    )\n                else:\n                    received_body_ = received_body\n                if field.alias in received_body_:\n                    value = received_body_[field.alias]\n                elif field.name in received_body_:\n                    value = received_", "entropy": 25.904630814713}
{"candidate": "                value = received_body.get(field.alias, None)\n            if field.validators:\n                value, errors_ = run_validators(value, field.validators, loc=(field_info.in_.value, field.alias))\n                if isinstance(errors_, ErrorWrapper):\n                    errors.append(errors_)\n                elif isinstance(errors_, list):\n                    errors.extend(errors_", "entropy": 26.746868838842005}
{"candidate": "                field_info = get_field_info(field)\n                location = field_info.in_.value\n                if location == In.FORM:\n                    value = received_body.get(field.alias)\n                elif location == In.BODY:\n                    value = received_body.get(field.alias) or received_body\n                elif location == In.HEADER:\n                    value = received_body.get(field.", "entropy": 27.667156084044002}
{"candidate": "                if field_info.in_.value == Query:\n                    value = received_body.get(field.alias)\n                elif field_info.in_.value == Path:\n                    value = field.get_path_value(received_body)\n                elif field_info.in_.value == Body:\n                    value = field.get_body_value(received_body)\n                else:  # pragma: nocover\n", "entropy": 29.278559559424504}
{"candidate": "                try:\n                    value = received_body[field.alias]\n                except (KeyError, IndexError, TypeError):\n                    pass\n            if value is None:\n                if field.default is not MISSING:\n                    values[field.name] = deepcopy(field.default)\n                elif field.required:\n                    if field_info.in_.value == In.BODY.value:\n                        errors.append(\n                ", "entropy": 30.316351555503996}
{"candidate": "                if field_info.in_.value == Body:\n                    for key in received_body:\n                        if key.lower() == field.alias.lower():\n                            value = received_body[key]\n                elif field_info.in_.value == Form:  # pragma: nocover\n                    raise NotImplementedError  # pragma: nocover\n                elif field_info.in_.value == Header: ", "entropy": 33.01934779529568}
{"candidate": "                if field_info.in_.value == InStrategy.HEADER:\n                    value = received_body.get(field.alias, None)\n                elif field_info.in_.value == InStrategy.QUERY:\n                    if field_info.style.value == StyleStrategy.SIMPLE:\n                        value = received_body.get(field.alias, None)\n                    elif field_info.style.value == Style", "entropy": 33.657965235276}
{"candidate": "                in_ = field_info.in_.value\n                if in_ == \"formData\" and isinstance(received_body, FormData):\n                    value = received_body.getlist(field.alias)\n                    if len(value) == 1:\n                        value = value[0]\n                elif in_ == \"body\" and (\n                    isinstance(received_body, dict) or\n                    isinstance(received_body, Form", "entropy": 34.329429904343}
{"candidate": "                value = received_body.get(field.alias)\n            field_info = get_field_info(field)\n            embed = getattr(field_info, \"embed\", None)\n            if embed:\n                if not isinstance(value, list):\n                    errors.append(\n                        ErrorWrapper(\n                            ValueError(\n                                f\"Expected `{field.name}` to be a list, but found `", "entropy": 35.60468179598401}
{"candidate": "                if field_info.in_.value == \"body\":\n                    value = received_body\n                else:\n                    value = received_body.get(field.alias)\n            if value is None:\n                if not field.required:\n                    continue\n                if field_info.field_type.required:\n                    errors.append(\n                        ErrorWrapper(\n                            ValueError(f\"field required: {field.alias}\"),\n", "entropy": 36.308896736531}
{"candidate": "                value = received_body.get(field.alias)\n            field_info = get_field_info(field)\n            if field_info.location == BaseFieldInfo.BODY:\n                if field.required and not hasattr(field, \"default\"):\n                    if value is None:\n                        errors.append(\n                            ErrorWrapper(  # type: ignore\n                                RequiredError(),\n                                loc=(field_info", "entropy": 36.78103616970101}
{"candidate": "                value = received_body\n                if isinstance(received_body, dict):\n                    value = received_body.get(field.alias)\n            if value is None:\n                if field.is_required:\n                    errors.append(\n                        ErrorWrapper(\n                            MissingError(\n                                f\"Field '{field.alias}' is required\",\n                            ),\n                            loc=(FieldInfo.Body.name, field", "entropy": 44.19079914941702}
{"candidate": "                value = received_body.get(field.name)\n                if field.name != field.alias:\n                    if value is None:\n                        value = received_body.get(field.alias)\n                    elif field.alias in received_body:\n                        if field_info.in_.value == Body:\n                            errors.append(\n                                ErrorWrapper(\n                                    error=ParamsDuplicatedError(field_info", "entropy": 45.686831943594996}
{"candidate": "                value = received_body.get(field.alias)\n                if isinstance(value, ModelField):\n                    value = getattr(value, \"default\", value)\n            if value is None and field.required:\n                if isinstance(field, FormFileField):\n                    errors.append(\n                        ErrorWrapper(\n                            ValidationError(\"Missing File\"),\n                            loc=(field_info.in_.value, field.alias", "entropy": 45.98578401491997}
