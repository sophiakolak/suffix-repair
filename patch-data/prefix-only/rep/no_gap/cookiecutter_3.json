{"candidate": "        prompt,\n        type=click.Choice(choices),\n        default=default\n    )\n\n    return choice_map[user_choice]\n\n\ndef read_repo_name(question):\n    \"\"\"Prompt the user to enter a repository name\n\n    :param str question: Question to the user\n    \"\"\"\n    # Please see http://click.pocoo.org/4/api/#click.prompt\n    return click.", "entropy": 14.282387795024004}
{"candidate": "        prompt, type=click.Choice(choices), default=default, show_choices=False)\n    return choice_map[user_choice]\n\n\ndef read_user_choice_multi(var_name, options):\n    \"\"\"Prompt the user to choose from several options for the given variable.\n\n    The first item will be returned if no input happens.\n\n    :param str var_name: Variable as specified in the context\n    :", "entropy": 17.317706917959793}
{"candidate": "        prompt,\n        default=default,\n        # Please see http://click.pocoo.org/4/api/#click.Choice\n        type=click.Choice(choices)\n    )\n\n    return choice_map[user_choice]\n\n\ndef read_user_email():\n    \"\"\"Prompt the user to enter their email address\"\"\"\n    # Please see http://click.pocoo.org/4/api/#click.", "entropy": 22.853531139189013}
{"candidate": "        prompt,\n        default=default,\n        type=click.Choice(choices),\n        show_choices=False\n    )\n\n    return choice_map[user_choice]", "entropy": 13.163195380628402}
{"candidate": "        prompt, type=click.Choice(choices), default=default\n    )\n    return choice_map[user_choice]\n\n\ndef read_user_input(var_name, default=None):\n    \"\"\"Prompt the user to enter a value for the given variable.\n\n    :param str var_name: Variable as specified in the context\n    :param str default: Default value to be pre-filled if none is given\n    :return", "entropy": 29.623869187102997}
{"candidate": "        prompt,\n        type=click.Choice(choices),\n        default=default,\n        show_choices=False\n    )\n\n    return choice_map[user_choice]\n\n\ndef read_user_yes_no(question, default=None):\n    \"\"\"Ask the user a yes/no question and return their response as True or False.\n\n    :param str question: Question to the user\n    :param bool default: Answer the", "entropy": 30.40293780225639}
{"candidate": "        prompt,\n        default=default,\n        type=click.Choice(choices),\n        show_choices=False\n    )\n\n    return choice_map[user_choice]\n\n\ndef setup_logging(log_file=None, log_level=None):\n    \"\"\"Setup logging\n\n    :param str log_file: Path to log file\n    :param str log_level: Log level\n    \"\"\"\n    if log_", "entropy": 30.474024248644405}
{"candidate": "        prompt, default=default, type=click.Choice(choices)\n    )\n    return choice_map[user_choice]\n\n\ndef read_user_path(var_name, default=None):\n    \"\"\"Prompt the user to enter a path.\n\n    If a default value is provided it will be suggested to the user.\n\n    :param str var_name: Variable as specified in the context\n    :param str default: Default value", "entropy": 32.34142560094901}
{"candidate": "        prompt=prompt,\n        type=click.Choice(choices),\n        default=default,\n        show_default=False\n    )\n\n    return choice_map[user_choice]\n\n\ndef read_user_email():\n    \"\"\"Prompt the user to enter an email address\n\n    :return: Email address that has been entered by the user\n    \"\"\"\n    # See https://github.com/kvesteri/validators", "entropy": 33.000929978234}
{"candidate": "        prompt,\n        default=default,\n        type=click.Choice(choices)\n    )\n\n    return choice_map[user_choice]\n\n\ndef read_user_choice_multiple(var_name, options):\n    \"\"\"Prompt the user to select multiple options from the available ones.\n\n    If the user inputs an empty line, the first item will be returned.\n\n    :param str var_name: Variable as specified in the context", "entropy": 35.106877856644005}
{"candidate": "        prompt,\n        type=click.Choice(choices),\n        default=default\n    )\n    return choice_map[user_choice]", "entropy": 14.226272030609}
{"candidate": "        prompt=prompt, default=default, type=click.Choice(choices)\n    )\n\n    return choice_map[user_choice]\n\n\ndef read_user_vectra_username():\n    \"\"\"Prompt the user to enter a username for the Vectra instance\n\n    :return: Username for the Vectra instance\n    \"\"\"\n    # Please see http://click.pocoo.org/4/api/#click.", "entropy": 43.650628182646}
{"candidate": "        prompt,\n        type=click.Choice(choices),\n        default=default\n    )\n    return choice_map[user_choice]\n\n\ndef read_user_info():\n    \"\"\"Interactive wrapper around ``read_user_input``\"\"\"\n    user_info = {\n        'full_name': read_user_input('User full name'),\n        'email': read_user_input('User email'),\n        'username", "entropy": 47.25959813831899}
{"candidate": "        prompt,\n        default=default,\n        type=click.Choice(choices, case_sensitive=False)\n    )\n\n    return choice_map[user_choice]\n\n\ndef read_boolean(var_name, default_value=True, autofill=False):\n    \"\"\"Prompt for a binary choice.\n\n    :param str var_name: Variable name\n    :param bool default_value: Default value that will be", "entropy": 49.65873766885199}
{"candidate": "        prompt, default=default, type=click.Choice(choices)\n    )\n\n    return choice_map[user_choice]\n\n\ndef read_user_answer(var_name, description, question, options=None,\n                     default=None):\n    \"\"\"Prompt the user to answer a question and use that value to set\n    a variable in the context.\n\n    :param str var_name: Variable as specified in the context\n   ", "entropy": 54.68453701900101}
{"candidate": "        prompt,\n        default=default,\n        type=click.Choice(choices)\n    )\n    return choice_map[user_choice]\n\n\ndef _get_param_from_ctx(ctx, param_name):\n    \"\"\"Get a value from the given context\n\n    :raises KeyError: If the value is not present\n    \"\"\"\n    value = ctx.obj[param_name]\n    if not value:\n", "entropy": 55.13194702287502}
{"candidate": "        prompt,\n        type=click.Choice(choices, case_sensitive=False),\n        default=default,\n    )\n\n    return choice_map[user_choice]\n\n\ndef read_user_input(var_name, default=None, cli_args=None,\n                    allow_empty=False):\n    \"\"\"Read the value for the var_name from the user.\n\n    If a default is given and the user enters nothing", "entropy": 55.493935135818006}
{"candidate": "        prompt=prompt, type=click.Choice(choices), default=default\n    ).strip()\n\n    return choice_map[user_choice]\n\n\ndef is_yes(value_string):\n    \"\"\"Check if the given value is affirmative\n\n    :param str value_string: Value that should be checked\n    :return bool: ``True`` if the value is affirmative\n    \"\"\"\n    return value_string.lower() in ['yes',", "entropy": 56.02470171906998}
{"candidate": "        prompt,\n        type=click.Choice(choices),\n        default=default,\n        show_choices=False,\n    )\n\n    return choice_map[user_choice]\n\n\ndef check_repo(repo, depth=1):\n    \"\"\"Ensure that the given repo has been checked out and is up to date\n\n    :param Repository repo: Repository object to check\n    :param int depth: ``git clone", "entropy": 63.3518977364744}
{"candidate": "        prompt, type=click.Choice(choices), default=default\n    )\n\n    return choice_map[user_choice]\n\n\ndef read_mapping_choice(\n    ctx, param, value, default_var_name, default_value,\n    default_mapping_var_name, default_mapping_value,\n    question_text, interactive_question\n):\n    \"\"\"Prompt the user to choose if they want", "entropy": 79.72299130667606}
