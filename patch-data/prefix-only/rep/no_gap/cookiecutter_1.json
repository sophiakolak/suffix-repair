{"candidate": "        with codecs.open(context_file, 'r', 'utf-8') as fh:\n            context.update(json.load(fh, object_pairs_hook=OrderedDict))\n    except (IOError, ValueError):\n        context.update(default_context or {})\n\n    if extra_context:\n        apply_overwrites_to_context(context, extra_context)\n\n    if '", "entropy": 24.294579227285798}
{"candidate": "        if os.path.isfile(context_file):\n            with io.open(context_file, encoding='utf-8') as fh:\n                context = json.loads(fh.read(), object_pairs_hook=OrderedDict)\n    except ValueError:\n        raise NonTemplatedInputDirException(\n            \"Context file {0} is not a valid JSON file.\".format(context_file)\n", "entropy": 25.758951789057203}
{"candidate": "        with open(context_file, 'r') as f:\n            context[context_file] = json.loads(f.read(), object_pairs_hook=OrderedDict)\n    except IOError:\n        pass\n    except ValueError as e:\n        raise exceptions.InvalidContext(e)\n\n    if default_context:\n        if isinstance(default_context, dict):\n            context['default'] = default_context", "entropy": 30.57088593800991}
{"candidate": "        with open(context_file) as f:\n            context.update(json.load(f, object_pairs_hook=OrderedDict))\n    except IOError:\n        if context_file == 'cookiecutter.json':\n            raise IOError(\n                \"cookiecutter.json was not found in the current directory.\"\n            )\n        else:\n            raise\n\n    # Update context with defaults\n    if default_", "entropy": 31.59809606692489}
{"candidate": "        with open(context_file, 'r', encoding='utf-8') as fp:\n            context.update(json.load(fp))\n    except FileNotFoundError as e:\n        raise FileNotFoundError(\n            \"Couldn't find '{}' in current directory\".format(e.filename)\n        )\n\n    if default_context is not None:\n        context.update(default_context)\n\n    # Update", "entropy": 34.56753445508101}
{"candidate": "        context.update(get_user_config())\n    except (IOError, OSError):\n        logger.info(\n            'User configuration file ({}) not found.'.format(\n                USER_CONFIG_PATH\n            )\n        )\n\n    try:\n        context.update(get_user_config(False))\n    except (IOError, OSError):\n        logger.info(\n            'User configuration", "entropy": 35.5067772586999}
{"candidate": "        with open(context_file) as f:\n            context.update(json.load(f))\n    except IOError:\n        logger.warning('Could not load context file \"{}\".'.format(context_file))\n    if default_context:\n        context.update(default_context)\n    if not isinstance(context, OrderedDict):\n        context = OrderedDict(context)\n    if extra_context:", "entropy": 36.99063822885399}
{"candidate": "        with open(context_file) as f:\n            context.update(json.load(f))\n    except (IOError, OSError) as e:\n        if e.errno == errno.ENOENT:\n            # The file doesn't exist\n            if context_file == 'cookiecutter.json':\n                raise IOError(\"couldn't find '{0}'\".format(context_file))\n       ", "entropy": 39.10466151098201}
{"candidate": "        with open(context_file, 'r') as fp:\n            context.update(json.load(fp))\n    except IOError:\n        logger.debug(\"Context file '{0}' not found\".format(context_file))\n\n    if default_context:\n        context.update(default_context)\n\n    if extra_context:\n        context.update(extra_context)\n\n    _parent_dir = dirname(", "entropy": 40.215744533074016}
{"candidate": "        with open(context_file, 'r', encoding='utf-8') as fh:\n            loaded_context = json.load(fh)\n    except (IOError, OSError):\n        loaded_context = {}\n\n    for key in sorted(list(loaded_context.keys())):\n        context[key] = loaded_context[key]\n\n    for key in defaults.DEFAULT_CONTEXT_KEYS:\n", "entropy": 41.4017721598355}
{"candidate": "        context.update(read_user_config())\n    except (OSError, IOError):\n        pass\n\n    if default_context:\n        context.update(default_context)\n\n    if extra_context:\n        context.update(extra_context)\n\n    if context_file:\n        file_path = Path(context_file)\n        if file_path.is_file():\n            context_file = str(file_path", "entropy": 41.82317612803}
{"candidate": "        file_path = expanduser(context_file)\n        with codecs.open(file_path, encoding='utf-8') as fh:\n            context = json.load(fh, object_pairs_hook=OrderedDict)\n    except IOError as e:\n        logger.error(\n            \"Couldn't open {} - {}\".format(file_path, e)\n        )\n    except ValueError as", "entropy": 42.693267658334406}
{"candidate": "        config_data_file = io.open(context_file, encoding='utf-8')\n    except IOError:\n        logger.info(\n            'Context file {} not found'.format(\n                style.variable(context_file),\n            )\n        )\n        context.update(default_context or {})\n        return context\n\n    try:\n        config_data = json.loads(config_data_file.read())\n", "entropy": 47.74848007654703}
{"candidate": "        with io.open(context_file, encoding='utf-8') as fp:\n            context = json.load(fp, object_pairs_hook=OrderedDict)\n    except ValueError:\n        click.secho(\n            'WARNING: Failed to load {0} as JSON'.format(context_file),\n            fg='red')\n        raise\n\n    # Update default context if needed\n    if default_context", "entropy": 49.27705120113179}
{"candidate": "        with open(context_file, 'r') as context_file:\n            context.update(json.load(context_file))\n    except IOError:\n        context.update(default_context)\n    except ValueError:\n        log.error(\n            \"Unable to load json file: {0}\".format(context_file)\n        )\n\n    # Allow users to overwrite values via the command line.\n    if extra_", "entropy": 59.528067184973}
{"candidate": "        with open(context_file) as f:\n            context_data = json.load(f, object_pairs_hook=OrderedDict)\n    except (IOError, ValueError):\n        context_data = {}\n\n    # MAIN_CONTEXT_MARKER\n    # Default to a blank context if the file doesn't exist.\n    if default_context is None:\n        default_context = {}\n    context.", "entropy": 65.81731581671099}
{"candidate": "        with open(context_file) as f:\n            context = json.load(f)\n    except ValueError as e:\n        raise ContextDecodingException(\n            'There was an error decoding/parsing {0}: {1}'.format(\n                context_file, e\n            )\n        )\n\n    # If there is default context, we want to update the loaded context to\n    # include if it's not already there\n", "entropy": 68.2364726834345}
{"candidate": "        with open(context_file) as f:\n            context.update(json.load(f))\n    except ValueError as e:\n        msg = (\n            \"Unable to load JSON as a Python object. \"\n            \"Please ensure it's a valid JSON file.\"\n        )\n        raise InvalidZipRepository(msg, reason=e)\n\n    # Update context with extra_context, which takes precedence\n    if extra_context:", "entropy": 68.889408944234}
{"candidate": "        context = load_context(context_file)\n    except IOError as e:\n        log.debug(\"Context file {} not found; skipping.\".format(context_file))\n        log.debug(str(e))\n\n    # update the context with config file options\n    if default_context is not None:\n        context.update(default_context)\n\n    user_input = load_user_config()\n\n    if user_input is", "entropy": 70.564048198395}
{"candidate": "        with io.open(context_file) as f:\n            context = json.load(f)\n            # Insert the default context if provided\n            if default_context is not None:\n                context.update(default_context)\n    except (IOError, ValueError):\n        # File doesn't exist or isn't valid json\n        # This is expected, but not necessary.\n        context = OrderedDict([])\n\n    if is", "entropy": 82.90296873426752}
