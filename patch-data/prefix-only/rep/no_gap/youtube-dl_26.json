{"candidate": "        [-+]?(?:[0-9]*\\.[0-9]+|[0-9]+)(?:[eE][-+]?[0-9]+)?|\n        \\{|\\}|\\[|\\]|:|true|false|null\n    ''', fix_kv, code)\n\n\ndef json_loads(data):\n    return json.loads(js_to_json(strip_jsonp", "entropy": 20.854792205400003}
{"candidate": "        0[xX][0-9a-fA-F]+|\n        0+[0-7]*|\n        [-+]?(?:(?:\\.\\d+|\\d+(?:\\.\\d*)?)(?:[eE][-+]?\\d+)?|NaN|Infinity)\n        ''', fix_kv, code)\n\n\ndef js_minify(code, mangle=False", "entropy": 24.571693864661}
{"candidate": "        \\b(?:0(?:[xX][0-9a-fA-F]+|[0-7]+)|\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)\\b\n    ''', fix_kv, code)\n\n\ndef json_to_python(code):\n    return code.replace('null', 'None')\n\n\ndef python_to_json(code", "entropy": 26.255483957091002}
{"candidate": "        [-+]?\\d+(?:\\.\\d+)?(?:[eE][-+]?\\d+)?|\n        \\s+\n        ''', fix_kv, code)\n\n\ndef downgrade(json):\n    def fix_kv(m):\n        v = m.group(0)\n        if v in ('true', 'false', 'null'):\n            return v\n        elif v.startsw", "entropy": 28.108671416376}
{"candidate": "        \\b(?:true|false|null)\\b|\n        -?(?:0|[1-9][0-9]*)(?:\\.[0-9]+)?(?:[eE][+-]?[0-9]+)?\n    ''', fix_kv, code)\n\n\ndef parse_json(code):\n    return json.loads(js_to_json(code))\n\n\ndef squeeze_whitespace", "entropy": 29.75309850159501}
{"candidate": "        \\b(?:0[xX][0-9a-fA-F]+|0+[0-7]*|\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\b|\n        .\n    ''', fix_kv, code)\n\n\ndef get_content(url):\n    for i in range(RETRY):\n        try:\n            return requests.", "entropy": 30.225776801331005}
{"candidate": "        \\b(?:0[xX][0-9a-fA-F]+|(?:0+[0-7]*)|\\d+(?:\\.\\d+)?)\\b\n    ''', fix_kv, code)\n\n\ndef get_json(code):\n    code = js_to_json(strip_jsonp(code))\n    json_obj = json.loads(code)\n    return json_obj", "entropy": 30.764884231313005}
{"candidate": "        [-+]?(?:(?:0|[1-9][0-9]*)(?:[eE][-+]?[0-9]+)?|0[xX][0-9a-fA-F]+|0+[0-7]+)\n    ''', fix_kv, code)\n\n\ndef parse_json(json_code, **kw):\n    return simplejson.loads(strip_jsonp(", "entropy": 32.528961801711006}
{"candidate": "        [-+]?(?:0[xX][0-9a-fA-F]+|0+[0-7]*|\\d+(?:\\.\\d*)?(?:[eE][-+]?\\d+)?)\n    ''', fix_kv, code)\n\n\ndef _get_by_path(obj, path):\n    if not path:\n        return obj\n\n    head, tail = path[0", "entropy": 32.751778048788985}
{"candidate": "        \\b(?:0[xX][0-9a-fA-F]+|0+[0-7]*|\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)\\b|\n        \\s+\n    ''', fix_kv, code)\n\n\ndef js_to_xml(code):\n    def dump_attrs(attrs):\n        return '", "entropy": 32.86761236404699}
{"candidate": "        0[xX][0-9a-fA-F]+|\n        0+[0-7]+|\n        \\d+|\n        true|false|null\n    ''', fix_kv, code)\n\n\ndef json_loads(code):\n    return js_to_json(strip_jsonp(code))\n\n\ndef main():\n    import json\n    print json.loads(json_loads(sys.std", "entropy": 33.968529159879}
{"candidate": "        \\s+\n    ''', fix_kv, code)\n\n\ndef json_minify(code):\n    code = strip_jsonp(code)\n    code = js_to_json(code)\n    code = re.sub(r'[ \\t\\n\\r]+', '', code)\n    code = re.sub(r'([\\[,]) +', r'\\1', code)\n    code =", "entropy": 38.41984182571199}
{"candidate": "        [-+]?[0-9]+(?:[.][0-9]+)?(?:[eE][-+]?[0-9]+)?\n    ''', fix_kv, code)\n\n\ndef get_url_content(url):\n    \"\"\"get url content by urllib2\n    \"\"\"\n    request = urllib2.Request(url)\n    request.add_header('User-Agent', 'Moz", "entropy": 39.39164498856999}
{"candidate": "        \\b(?:0[xX][0-9a-fA-F]+|0+[0-7]*|\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\b\n    ''', fix_kv, code)\n\n\ndef get_access_token(email, password, client_id, client_secret, keyring=None):\n    \"\"\"Returns an O", "entropy": 41.75330976172501}
{"candidate": "        \\b(?:true|false|null)\\b|\n        \\d+(?:[.]\\d*)?(?:[eE][+\\-]?\\d+)?\n    ''', fix_kv, code)\n\n\ndef get_urls_from_js(code):\n    urls = []\n    for m in re.finditer(r'''(?x)\n        (?:(?:new\\s+)?Image", "entropy": 44.73220230045099}
{"candidate": "        \\b(?:0(?:x[0-9a-fA-F]+|[0-7]*)|\\d+)\n        (?:(?=[.]\\d)|(?=[.]?[eE]))|\n        [\\[\\]{},:=]|true|false|null\n        ''', fix_kv, code)\n\n\ndef make_zip(src, dst):\n    os.chdir(", "entropy": 53.333045103934005}
{"candidate": "        \\b(?:0(?:x[0-9a-fA-F]+|[0-7]*)|\\d+)\\b''', fix_kv, code)\n\n\ndef main(argv):\n    try:\n        mod, js_name, py_name = argv[1:]\n    except ValueError:\n        print(\"Arguments: <mod> <js_name> <py_name>\", file", "entropy": 53.86557536653303}
{"candidate": "        [-+]?(?:\\.\\d+|\\d+(?:\\.\\d*)?)|\n        \\{\\s*\\}|\\[\\s*\\]\n    ''', fix_kv, re.sub(r'//.*?(?:(?=\\n)|$)', '', code))\n\n\ndef get_url(url, headers, proxies, verify=True):\n    return requests.get(url,", "entropy": 58.055145794618994}
{"candidate": "        0[xX][0-9a-fA-F]+|0+[0-7]+|\n        \\d+|\n        \\s+|\n        (?=[\\[{(\"'])|(?<=[}\\])\"'])|\n        .\n    ''', fix_kv, code)", "entropy": 46.49001788574601}
{"candidate": "        [-+]?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][-+]?\\d+)?|\n        \\s+\n        ''', fix_kv, code)\n\n\ndef find_schema(filename):\n    # search in the file\n    data = open(filename, 'rb').read()\n\n    schema = None\n    m = re.search(r", "entropy": 62.833700374502996}
