{"candidate": "        diff_contents = difflib.unified_diff(\n            src_contents.splitlines(keepends=True),\n            dst_contents.splitlines(keepends=True),\n            fromfile=src,\n            tofile=src + \".formatted\",\n            n=len(src_contents.splitlines()),\n        )\n        sys.stdout.write(\"\".join(diff_contents))\n   ", "entropy": 23.96469739493502}
{"candidate": "        dst_contents = (\n            difflib.unified_diff(\n                src_contents.splitlines(keepends=True),\n                dst_contents.splitlines(keepends=True),\n                fromfile=str(src),\n                tofile=str(src),\n                n=1,\n            )\n        )\n        for line in dst_contents:\n            print(line, end=\"\")\n    return", "entropy": 23.981635367448}
{"candidate": "        with tokenize.open(src) as src_buffer:\n            diff = unified_diff(\n                src_contents.splitlines(),\n                dst_contents.splitlines(),\n                fromfile=str(src),\n                tofile=str(src),\n            )\n            sys.stdout.writelines(diff)\n    elif write_back == write_back.CACHED:\n        if lock is not None:", "entropy": 24.290391640332004}
{"candidate": "        from lib2to3.pgen2 import token\n\n        src_tokens = list(tokenize.generate_tokens(io.StringIO(src_contents).readline))\n        src_lines = list(tokenize.untokenize(src_tokens).splitlines(keepends=True))\n        dst_tokens = list(tokenize.generate_tokens(io.StringIO(", "entropy": 24.646528582994115}
{"candidate": "        with open(src, \"w\", encoding=src_buffer.encoding) as f:\n            f.write(dst_contents)\n        _diff_file(src, src_contents, dst_contents)\n\n    return True\n\n\ndef format_file_contents(\n    src_contents: str, line_length: int, fast: bool\n) -> str:\n    \"\"\"Format contents of a Python file.", "entropy": 28.15507500464401}
{"candidate": "        import difflib\n\n        print(src)\n        for line in difflib.unified_diff(\n            src_contents.splitlines(), dst_contents.splitlines(), fromfile=src, tofile=src\n        ):\n            print(line)\n\n    return True\n\n\ndef format_file_contents(\n    contents: str, line_length: int, fast: bool\n) -> str:\n    \"\"\"Format the provided", "entropy": 28.989136514734}
{"candidate": "        sys.stdout.writelines(difflib.unified_diff(src_contents.splitlines(), dst_contents.splitlines(), src, src))\n\n    return True\n\n\ndef main(argv: Optional[Sequence[str]] = None) -> int:\n    if argv is None:\n        argv = sys.argv[1:]\n\n    args = parse_args(argv)\n\n    if args.list", "entropy": 30.383190471017}
{"candidate": "        print_diff(src, src_contents, dst_contents)\n    return True\n\n\ndef format_dir(\n    src: Path,\n    recursive: bool,\n    extensions: List[str],\n    line_length: int,\n    fast: bool,\n    write_back: WriteBack,\n    exclude: List[str],\n    cache: Cache,\n    report: Report,\n) -> None:\n    \"\"\"", "entropy": 30.576653319944008}
{"candidate": "        with open(src, \"rb\") as f:\n            src_contents = f.read()\n        if src_contents != dst_contents:\n            write_diff(src, src_contents, dst_contents)\n            return True\n        return False\n    elif write_back == write_back.CACHED:\n        assert lock is not None\n        with lock:\n            with open(src, \"rb", "entropy": 31.68728743149099}
{"candidate": "        if lock:\n            lock.acquire()\n        print_diff(src_contents, dst_contents)\n        if lock:\n            lock.release()\n    return True\n\n\ndef print_diff(src: str, dst: str):\n    \"\"\"Prints diff between `src` and `dst` strings.\"\"\"\n\n    src_lines = src.splitlines(True)\n    dst_lines = dst.splitlines(", "entropy": 33.428020373519004}
{"candidate": "        if lock is None:\n            raise RuntimeError(\n                \"Lock must be provided when write_back is set to DIFF\"\n            )\n        with lock:\n            sys.stdout.flush()\n            unified_diff(\n                src_contents.splitlines(keepends=True),\n                dst_contents.splitlines(keepends=True),\n                src.as_posix(),\n                src.as_posix", "entropy": 34.32195719843999}
{"candidate": "        print(diff_texts(src_contents, dst_contents, fromfile=str(src), tofile=str(src)))\n    else:\n        assert write_back == write_back.NO\n\n    if lock:\n        with lock:\n            sys.stdout.write(\"Reformatted {!r}\\n\".format(src))\n            sys.stdout.flush()\n    return True\n\n\nclass FormatReport:", "entropy": 36.36048047175601}
{"candidate": "        with tempfile.NamedTemporaryFile(mode=\"w\", prefix=\"black-\", delete=False) as f:\n            f.write(dst_contents)\n        cmd = [\n            \"diff\",\n            \"-c\",\n            \"-U2\",\n            \"--label\",\n            f\"{src}-black\",\n            f.name,\n            \"--label\",\n            f\"{src}-orig\",\n", "entropy": 41.39077312697177}
{"candidate": "        sys.stdout.write(dst_contents)\n        return True\n\n    if lock is not None:\n        lock.acquire()\n    if (\n        src_contents == dst_contents\n        or not os.access(src, os.W_OK)\n        or os.path.getmtime(src) != src_buffer.last_modified\n        or os.path.getsize(src) != src", "entropy": 44.20866998125041}
{"candidate": "        with click.make_default_short_help_printer() as echo:\n            echo(\n                \"--- {}\\n\"\n                \"+++ {}\\n{}\".format(\n                    src,\n                    src,\n                    \"\".join(difflib.unified_diff(src_contents.splitlines(), dst_contents.splitlines())),\n                )\n            )\n    else:\n        assert write_back == Write", "entropy": 44.864393172144894}
{"candidate": "        if lock is not None:\n            with lock:\n                # https://github.com/google/yapf/issues/60\n                # https://github.com/google/yapf/issues/73\n                print(difflib.unified_diff(src_contents.splitlines(True), dst_contents.splitlines(True), fromfile=src, tofile=src), end=\"\")\n        else:\n           ", "entropy": 46.179471773462986}
{"candidate": "        from .diff import diff\n\n        sys.stdout.write(diff(src_contents, dst_contents))\n    # elif write_back:\n    #     raise NotImplementedError(write_back)\n    elif src.stat().st_size == len(dst_contents):\n        try:\n            with open(src, \"rb\") as f:\n                if f.read() == dst_cont", "entropy": 49.360276269909015}
{"candidate": "        subprocess.check_call(\n            [\"diff\", \"-u\", str(src)],\n            stdin=subprocess.PIPE,\n            encoding=src_buffer.encoding,\n        )\n        sys.stdout.buffer.write(dst_contents)\n        sys.stdout.buffer.write(b\"\\n+\\n\")\n    return True\n\n\nclass IsPythonFile(abc.ABC):\n", "entropy": 50.74524753994051}
{"candidate": "        from .diff import diff_contents\n\n        msg = diff_contents(src, src_contents, dst_contents)\n        if not msg and lock is not None:\n            with lock:\n                print(src)\n        return msg\n    return True\n\n\n@lru_cache(maxsize=max_cache_size)\ndef format_file_contents(src_contents: str, *, line_length:", "entropy": 53.34633787763801}
{"candidate": "        # TODO: Fix me!\n        from . import diff_texts\n\n        diff = diff_texts(src_contents, dst_contents)\n        print(\"{}:\".format(src), diff, sep=\"\\n\")\n    return True\n\n\ndef format_file(\n    src: Path,\n    dst: Path = None,\n    line_length: int = DEFAULT_LINE_LENGTH,\n    fast:", "entropy": 56.36491588444498}
