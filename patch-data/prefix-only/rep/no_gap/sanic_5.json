{"candidate": "        'root': {'level': 'WARN', 'handlers': ['console']},\n    },\n    handlers={\n        'console': {\n            'class': 'logging.StreamHandler',\n            'formatter': 'generic',\n        }\n    },\n    formatters={\n        'generic': {\n            'format': '%(asctime)s %(levelname)-5.5s [%(name)s][", "entropy": 15.403965765899006}
{"candidate": "        '': {  # root logger\n            'handlers': ['console'],\n            'level': 'INFO'\n        },\n        '__main__': {  # if __name__ == '__main__'\n            'level': 'INFO'\n        },\n    },\n    handlers={\n        'console': {\n            'class': 'logging.StreamHandler',\n            'formatter': 'generic',\n            'stream':", "entropy": 15.92254792800799}
{"candidate": "        '': {  # root logger\n            'handlers': ['console'],\n            'level': 'INFO'\n        },\n        'sanic.error': {\n            'level': 'INFO',\n            'handlers': ['error_console'],\n            'propagate': True,\n            'qualname': 'sanic.error',\n        },\n        'sanic.access': {\n            'level': 'INFO',\n", "entropy": 16.115313736387005}
{"candidate": "        '': {  # root logger\n            'level': 'INFO',\n            'handlers': ['console']\n        },\n        'django': {  # django logger\n            'level': 'INFO',\n            'handlers': ['console'],\n            'propagate': False\n        },\n        'django.request': {  # django request logger\n            'level': 'ERROR',\n            'handlers': ['console", "entropy": 16.208742085139995}
{"candidate": "        '': {  # root logger\n            'level': 'DEBUG',\n            'handlers': ['console'],\n        },\n        'sanic.access': {  # access logger\n            'level': 'INFO',\n            'handlers': ['access'],\n            'propagate': False,\n        },\n        'sanic.error': {  # error logger\n            'level': 'INFO',\n            'handlers': ['", "entropy": 16.849353095422998}
{"candidate": "        \"root\": {\n            \"level\": \"INFO\",\n            \"handlers\": [\"console\"],\n        },\n    },\n    handlers={\n        \"console\": {\n            \"class\": \"logging.StreamHandler\",\n            \"formatter\": \"generic\",\n            \"stream\": sys.stdout,\n        },\n    },\n    formatters={\n        \"generic\": {\n            \"format\": \"%(asctime)s |", "entropy": 16.901813692604996}
{"candidate": "        \"\": {  # root logger\n            \"level\": \"INFO\",\n            \"handlers\": [\"console\"]\n        },\n        \"bot\": {\n            \"level\": \"INFO\",\n            \"handlers\": [\"console\"],\n            \"propagate\": False\n        }\n    },\n    handlers={\n        \"console\": {\n            \"class\": \"logging.StreamHandler\",\n            \"level\": \"DEBUG\",\n            \"formatter", "entropy": 18.297126103870003}
{"candidate": "        \"\": {  # root logger\n            \"handlers\": [\"console\"],\n            \"level\": \"INFO\",\n        },\n        \"__main__\": {  # if __name__ == \"__main__\"\n            \"handlers\": [\"console\"],\n            \"level\": \"INFO\",\n            \"propagate\": False\n        },\n        # \"someLibrary\": {\n        #     \"handlers\": [\"console\"],\n        #     \"", "entropy": 20.328662531294004}
{"candidate": "        'django.db.backends': {'level': 'ERROR', 'handlers': ['console'], 'propagate': False},\n        'raven': {\n            'level': 'ERROR',\n            'handlers': ['console'],\n            'propagate': False,\n        },\n        'sentry.errors': {\n            'level': 'ERROR',\n            'handlers': ['console'],\n            'propagate", "entropy": 20.404675171069}
{"candidate": "        'root': {\n            'handlers': ['console'],\n            'level': 'INFO',\n            'propagate': True,\n        },\n        'alembic': {\n            'handlers': [],\n            'level': 'INFO',\n            'propagate': False,\n        },\n    },\n    handlers={\n        'console': {\n            'class': 'logging.StreamHandler',\n            'stream':", "entropy": 22.92692596192999}
{"candidate": "        \"baseplate\": {\n            \"level\": \"DEBUG\",\n            \"handlers\": [\"console\"],\n            \"propagate\": False,\n        },\n        \"sqlalchemy\": {\n            \"level\": \"INFO\",\n            \"handlers\": [\"console\"],\n            \"propagate\": False,\n        },\n    },\n    handlers={\n        \"console\": {\n            \"class\": \"logging.StreamHandler\",\n            \"stream", "entropy": 23.06445598946}
{"candidate": "        \"\": {\n            \"level\": \"DEBUG\",\n            \"handlers\": [\"console\"],\n        }\n    },\n    handlers={\n        \"console\": {\n            \"class\": \"logging.StreamHandler\",\n            \"stream\": sys.stderr,\n            \"formatter\": \"colored\",\n            \"filters\": []\n        }\n    },\n    formatters={\n        \"colored\": {\n            \"()\": \"", "entropy": 24.883056926079995}
{"candidate": "        '': {\n            'level': 'INFO',\n            'handlers': ['console']\n        },\n        'aurora': {\n            'level': 'INFO',\n            'handlers': ['console']\n        }\n    },\n    handlers={\n        'console': {\n            'level': 'DEBUG',\n            'class': 'logging.StreamHandler',\n            'formatter': 'simple',\n            'stream': sys", "entropy": 25.237159071790007}
{"candidate": "        '': {\n            'level': 'WARNING',\n            'handlers': ['default']\n        },\n        'veil': {\n            'level': 'INFO',\n            'propagate': False,\n            'handlers': ['veil'],\n        },\n        'veil.frontend.cli': {\n            'level': 'INFO',\n            'propagate': False,\n            'handlers': ['console'],", "entropy": 32.470196040926005}
{"candidate": "        \"\": {\n            \"level\": logging.WARNING,\n            \"handlers\": [\"console\"],\n        }\n    },\n    handlers={\n        \"console\": {\n            \"class\": \"logging.StreamHandler\",\n            \"stream\": sys.stderr,\n        },\n    },\n)\n\n\ndef setup_logging(logging_config=None):\n\n    logging_config = logging_config or LOGGING_CON", "entropy": 32.58818038044701}
{"candidate": "        '': {  # root logger\n            'handlers': ['console'], 'level': 'DEBUG', 'propagate': False\n        },\n        'werkzeug': {\n            'level': 'INFO', 'handlers': ['console'], 'propagate': False\n        },\n        # Boto is the Amazon Web Services library we use. Set at INFO to suppress unhelpful DEBUG messages.\n        'boto': {\n           ", "entropy": 33.886611189987995}
{"candidate": "        'network-server': {\n            'level': 'DEBUG',\n            'handlers': ['console']\n        },\n        'application-server': {\n            'level': 'DEBUG',\n            'handlers': ['console']\n        },\n        'gateway-server': {\n            'level': 'DEBUG',\n            'handlers': ['console']\n        },\n        'worker': {\n            'level': 'DEBUG',\n", "entropy": 35.769602413370016}
{"candidate": "        'e3.log': {'level': 'INFO'},\n        'e3.collection': {'level': 'WARNING'},\n        'e3.environment': {'level': 'WARNING'},\n        'e3.os.process': {'level': 'WARNING'},\n        'e3.testsuite': {'level': 'WARNING'},\n        'e3.yaml': {'level': 'WARNING'", "entropy": 37.563794078459985}
{"candidate": "        'SQUAD_HELPER': {\n            'level': 'INFO',\n            'handlers': ['console'],\n            'propagate': False,\n        },\n    },\n    handlers={\n        'console': {\n            'class': 'logging.StreamHandler',\n            'level': 'DEBUG',\n            'formatter': 'default',\n            'stream': 'ext://sys.stdout',\n        },\n", "entropy": 37.705820859855}
{"candidate": "        \"requests\": {\n            \"level\": \"WARNING\",\n        },\n    }\n)\n\nlogging.config.dictConfig(LOGGING_CONFIG_DEFAULTS)\n\nLOG = logging.getLogger(__name__)\n\n\ndef read_config_file(config_file):\n    \"\"\"Read config file.\"\"\"\n    try:\n        with open(config_file) as f:\n            config = y", "entropy": 44.05580236595498}
