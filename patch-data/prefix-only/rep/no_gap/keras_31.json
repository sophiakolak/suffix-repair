{"candidate": "    label_length = tf.to_int32(tf.squeeze(label_length, axis=-1))\n    input_length = tf.to_int32(tf.squeeze(input_length, axis=-1))\n    sparse_labels = tf.to_int32(K.ctc_label_dense_to_sparse(y_true, label_length))\n\n    y_pred = tf.log", "entropy": 2.555027768232039}
{"candidate": "    label_length = tf.to_int32(tf.squeeze(label_length, axis=-1))\n    input_length = tf.to_int32(tf.squeeze(input_length, axis=-1))\n    sparse_labels = get_sparse_tensor(y_true, label_length)\n\n    y_pred = tf.log(tf.transpose(y_pred, perm=[1,", "entropy": 2.82991885827984}
{"candidate": "    label_length = tf.to_int32(tf.squeeze(label_length, axis=-1))\n    input_length = tf.to_int32(tf.squeeze(input_length, axis=-1))\n    sparse_labels = get_sparse_tensor(y_true, label_length)\n\n    y_pred = tf.log(tf.transpose(y_pred, perm=[1,", "entropy": 2.8543329189928404}
{"candidate": "    label_length = tf.to_int32(tf.squeeze(label_length, axis=-1))\n    input_length = tf.to_int32(tf.squeeze(input_length, axis=-1))\n    sparse_labels = _get_sparse_labels(y_true, label_length)\n\n    y_pred = tf.log(tf.transpose(y_pred, perm=[1", "entropy": 3.03466389455684}
{"candidate": "    label_length = tf.to_int32(tf.squeeze(label_length, axis=-1))\n    input_length = tf.to_int32(tf.squeeze(input_length, axis=-1))\n    sparse_labels = _get_sparse_labels(y_true, label_length)\n\n    y_pred = tf.log(tf.transpose(y_pred, perm=[1", "entropy": 3.0376575246888393}
{"candidate": "\n    label_length = tf.to_int32(tf.squeeze(label_length, axis=-1))\n    input_length = tf.to_int32(tf.squeeze(input_length, axis=-1))\n    sparse_labels = _get_sparse_labels(y_true, label_length)\n\n    y_pred = tf.log(tf.transpose(y_pred, perm=[1", "entropy": 5.242670598510139}
{"candidate": "    label_length = tf.to_int32(tf.squeeze(label_length, axis=-1))\n    input_length = tf.to_int32(tf.squeeze(input_length, axis=-1))\n    sparse_labels = _sparse_labels(y_true, label_length)\n\n    y_pred = tf.log(tf.transpose(y_pred, perm=[1, 0", "entropy": 3.2350508419324404}
{"candidate": "    label_length = tf.to_int32(tf.squeeze(label_length, axis=-1))\n    input_length = tf.to_int32(tf.squeeze(input_length, axis=-1))\n    sparse_labels = _sparse_labels(y_true, label_length)\n\n    y_pred = tf.log(tf.transpose(y_pred, perm=[1, 0", "entropy": 3.2350538248824403}
{"candidate": "    label_length = tf.to_int32(tf.squeeze(label_length, axis=-1))\n    input_length = tf.to_int32(tf.squeeze(input_length, axis=-1))\n    sparse_labels = _sparse_labels_to_sparse_tensor(y_true)\n\n    y_pred = tf.log(tf.transpose(y_pred, perm", "entropy": 3.816905912417439}
{"candidate": "    label_length = tf.to_int32(tf.squeeze(label_length, axis=-1))\n    input_length = tf.to_int32(tf.squeeze(input_length, axis=-1))\n    sparse_labels = _to_sparse(y_true)\n\n    y_pred = tf.log(tf.transpose(y_pred, perm=[1, 0, 2]) + K", "entropy": 4.39304169819984}
{"candidate": "    label_length = tf.to_int32(tf.squeeze(label_length, axis=-1))\n    input_length = tf.to_int32(tf.squeeze(input_length, axis=-1))\n    sparse_labels = _dense_to_sparse(y_true, label_length)\n\n    y_pred = tf.log(tf.transpose(y_pred, perm=[1", "entropy": 4.778259411689341}
{"candidate": "    label_length = tf.to_int32(tf.squeeze(label_length, axis=-1))\n    input_length = tf.to_int32(tf.squeeze(input_length, axis=-1))\n    sparse_labels = dense_to_sparse(y_true)\n\n    y_pred = tf.log(tf.transpose(y_pred, perm=[1, 0, 2]) +", "entropy": 4.793424953442842}
{"candidate": "    label_length = tf.to_int32(tf.squeeze(label_length, axis=-1))\n    input_length = tf.to_int32(tf.squeeze(input_length, axis=-1))\n    sparse_labels = _sparse_labels_to_sparse_tensor(y_true, label_length)\n\n    y_pred = tf.log(tf.transpose(y", "entropy": 4.93653117740564}
{"candidate": "    label_length = tf.to_int32(tf.squeeze(label_length, axis=-1))\n    input_length = tf.to_int32(tf.squeeze(input_length, axis=-1))\n    sparse_labels = get_sparse_tensor(y_true, label_length)\n    y_pred = tf.log(tf.transpose(y_pred, perm=[1,", "entropy": 5.43603194560764}
{"candidate": "\n    label_length = tf.to_int32(tf.squeeze(label_length, axis=-1))\n    input_length = tf.to_int32(tf.squeeze(input_length, axis=-1))\n    sparse_labels = _get_sparse_labels(y_true, label_length, input_length)\n\n    y_pred = tf.log(tf.transpose(y_pred", "entropy": 7.534169245137141}
{"candidate": "    label_length = tf.to_int32(tf.squeeze(label_length, axis=-1))\n    input_length = tf.to_int32(tf.squeeze(input_length, axis=-1))\n    sparse_labels = _get_sparse_labels(y_true, label_length)\n\n    ctc_loss = tf.nn.ctc_loss(labels=sparse_", "entropy": 6.120783980894238}
{"candidate": "    label_length = tf.to_int32(tf.squeeze(label_length, axis=-1))\n    input_length = tf.to_int32(tf.squeeze(input_length, axis=-1))\n    sparse_labels = _get_sparse_labels(y_true, label_length)\n\n    ctc_loss = tf.nn.ctc_loss(labels=sparse_", "entropy": 6.13952065569624}
{"candidate": "    label_length = tf.to_int32(tf.squeeze(label_length, axis=-1))\n    input_length = tf.to_int32(tf.squeeze(input_length, axis=-1))\n    sparse_labels = to_sparse(y_true)\n\n    y_pred = tf.log(tf.transpose(y_pred, perm=[1, 0, 2]) + tf.", "entropy": 7.615170427869141}
{"candidate": "    label_length = tf.to_int32(tf.squeeze(label_length, axis=-1))\n    input_length = tf.to_int32(tf.squeeze(input_length, axis=-1))\n    sparse_labels = _sparse_labels_to_sparse_tensor(y_true)\n\n    ctc_loss = tf.nn.ctc_loss(labels=s", "entropy": 7.751726302537641}
{"candidate": "    label_length = tf.to_int32(tf.squeeze(label_length, axis=-1))\n    input_length = tf.to_int32(tf.squeeze(input_length, axis=-1))\n    sparse_labels = _sparse_labels_from_sequences(y_true, label_length)\n\n    y_pred = tf.log(tf.nn.softmax(y_", "entropy": 9.042663260993638}
