{"project": "matplotlib", "bug": 3, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/markers.py", "buggy_commit_id": "5e046f72ae82788788c7e9b9354b87b131891cd8", "fixed_commit_id": "2a3707d9c3472b1a010492322b6946388d4989ae", "lines_deleted": {"234": "        self._filled = True\n"}, "lines_added": {"234": "        # Initial guess: Assume the marker is filled unless the fillstyle is\n", "235": "        # set to 'none'. The marker function will override this for unfilled\n", "236": "        # markers.\n", "237": "        self._filled = self._fillstyle != 'none'\n"}}
{"project": "matplotlib", "bug": 5, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/axes/_axes.py", "buggy_commit_id": "49593b73854e10ace8f3c05343220328def6a328", "fixed_commit_id": "66289c4f1895b8c65ca92a03d92f6b1cfa552267", "lines_deleted": {"4494": "            linewidths = rcParams['lines.linewidth']\n"}, "lines_added": {"4494": "            if linewidths is None:\n", "4495": "                linewidths = rcParams['lines.linewidth']\n", "4496": "            elif np.iterable(linewidths):\n", "4497": "                linewidths = [\n", "4498": "                    lw if lw is not None else rcParams['lines.linewidth']\n", "4499": "                    for lw in linewidths]\n"}}
{"project": "matplotlib", "bug": 6, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/axes/_axes.py", "buggy_commit_id": "fb9e72309aeefb51d1a56ecbdb1e7399d105ff06", "fixed_commit_id": "d84f4a7ac8d43d1288cb8ce11ab60ae557306b7e", "lines_deleted": {"4285": "                if c.size == xsize:\n"}, "lines_added": {"4283": "                # handle the documented special case of a 2D array with 1\n", "4284": "                # row which as RGB(A) to broadcast.\n", "4285": "                if c.shape == (1, 4) or c.shape == (1, 3):\n", "4286": "                    c_is_mapped = False\n", "4287": "                    if c.size != xsize:\n", "4288": "                        valid_shape = False\n", "4291": "                elif c.size == xsize:\n"}}
{"project": "matplotlib", "bug": 7, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/colors.py", "buggy_commit_id": "969513e2a5227331a2eb9e4bc4ba8448a0f9831d", "fixed_commit_id": "ac400b51bb31b91920ee9aae02a0606a67983a8f", "lines_deleted": {"1938": "        if hasattr(intensity, 'mask'):\n"}, "lines_added": {"1938": "        if np.ma.is_masked(intensity):\n"}}
{"project": "matplotlib", "bug": 9, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/projections/polar.py", "buggy_commit_id": "8673167d4c44dc2ede02fedd718dadf7f88e102d", "fixed_commit_id": "c01f9d3eff9b6239446c1bb2d205eccd69054aeb", "lines_deleted": {}, "lines_added": {"951": "        self._unstale_viewLim()\n"}}
{"project": "matplotlib", "bug": 10, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/axis.py", "buggy_commit_id": "b31d64ce3910e8d297d8300690e459587f77181f", "fixed_commit_id": "1986da3968ee76c6bce8f4c04aed80e23bd4ecfa", "lines_deleted": {"826": "            # special-case label color to also apply to the offset text\n"}, "lines_added": {"826": "            # labelOn and labelcolor also apply to the offset text.\n", "827": "            if 'label1On' in kwtrans or 'label2On' in kwtrans:\n", "828": "                self.offsetText.set_visible(\n", "829": "                    self._major_tick_kw.get('label1On', False)\n", "830": "                    or self._major_tick_kw.get('label2On', False))\n"}}
{"project": "matplotlib", "bug": 14, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/text.py", "buggy_commit_id": "dbc35a9d625e162445f864b9f463c9961888e901", "fixed_commit_id": "c986a12b6d0d0d44f5a87f7cd4408f38040e2537", "lines_deleted": {"176": "        # Update bbox last, as it depends on font properties.\n"}, "lines_added": {"177": "        # Update fontproperties first, as it has lowest priority.\n", "178": "        fontproperties = kwargs.pop(\"fontproperties\", sentinel)\n", "179": "        if fontproperties is not sentinel:\n", "180": "            self.set_fontproperties(fontproperties)\n", "181": "        # Update bbox last, as it depends on font properties.\n"}}
{"project": "matplotlib", "bug": 16, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/transforms.py", "buggy_commit_id": "89ff308306bafac22647c050a42141f040210216", "fixed_commit_id": "5d99e151be80bcb0b3b6d081fd3038330f573d94", "lines_deleted": {}, "lines_added": {"2814": "    # Expand vmin, vmax to float: if they were integer types, they can wrap\n", "2815": "    # around in abs (abs(np.int8(-128)) == -128) and vmax - vmin can overflow.\n", "2816": "    vmin, vmax = map(float, [vmin, vmax])\n", "2817": "\n"}}
{"project": "matplotlib", "bug": 17, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/transforms.py", "buggy_commit_id": "58c66982d98851c56b045137ced803fd62c6c5e8", "fixed_commit_id": "05a5db0fec2eced55076736f0b9520641b279ad6", "lines_deleted": {}, "lines_added": {"2793": "    # Expand vmin, vmax to float: if they were integer types, they can wrap\n", "2794": "    # around in abs (abs(np.int8(-128)) == -128) and vmax - vmin can overflow.\n", "2795": "    vmin, vmax = map(float, [vmin, vmax])\n", "2796": "\n"}}
{"project": "matplotlib", "bug": 22, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/axes/_axes.py", "buggy_commit_id": "a87cd8a4c43688137155accdc57ed64fb95e2d40", "fixed_commit_id": "2349d826a170a10510d1ee8be02eaff51f7ee89f", "lines_deleted": {}, "lines_added": {"6575": "        if not cbook.is_scalar_or_string(bins):\n", "6576": "            bins = self.convert_xunits(bins)\n", "6577": "\n"}}
{"project": "matplotlib", "bug": 23, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/axes/_base.py", "buggy_commit_id": "bb6a4af984778dbac55c8391ae29fa2b5b201361", "fixed_commit_id": "418a1adf597b4d7759dcd64b864bd64cc1b507f4", "lines_deleted": {"1509": "        x0, x1 = map(x_trf.inverted().transform, dL.intervalx)\n", "1510": "        y0, y1 = map(y_trf.inverted().transform, dL.intervaly)\n"}, "lines_added": {"1509": "        x0, x1 = map(x_trf.transform, dL.intervalx)\n", "1510": "        y0, y1 = map(y_trf.transform, dL.intervaly)\n"}}
{"project": "matplotlib", "bug": 24, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/axis.py", "buggy_commit_id": "9a5473dbac05f3d6773b42c8e16d58a7dc3159b8", "fixed_commit_id": "407a9fe71a4c0a8ba4914b8f54f21d32d6dd2d74", "lines_deleted": {"1894": "                setter(self, max(vmin, vmax, oldmax), min(vmin, vmax, oldmin),\n"}, "lines_added": {"1894": "                setter(self, max(vmin, vmax, oldmin), min(vmin, vmax, oldmax),\n"}}
{"project": "matplotlib", "bug": 25, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/collections.py", "buggy_commit_id": "9a5473dbac05f3d6773b42c8e16d58a7dc3159b8", "fixed_commit_id": "184225bc5639fbd2f29c1253602806a8b6462d9f", "lines_deleted": {"1472": "\n", "1475": "        if positions is None or len(positions) == 0:\n", "1477": "        elif hasattr(positions, 'ndim') and positions.ndim > 1:\n"}, "lines_added": {"1472": "        if positions is None:\n", "1473": "            raise ValueError('positions must be an array-like object')\n", "1474": "        # Force a copy of positions\n", "1475": "        positions = np.array(positions, copy=True)\n", "1478": "        if positions.size == 0:\n", "1480": "        elif positions.ndim > 1:\n"}}
{"project": "matplotlib", "bug": 26, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/axis.py", "buggy_commit_id": "04d9d28b820af0b4df230a3c67314ed5b0af8fdd", "fixed_commit_id": "557375ff91f64c1b827f6014da2d369513a69316", "lines_deleted": {"1908": "                setter(self, max(vmin, vmax, oldmax), min(vmin, vmax, oldmin),\n"}, "lines_added": {"1908": "                setter(self, max(vmin, vmax, oldmin), min(vmin, vmax, oldmax),\n"}}
{"project": "matplotlib", "bug": 27, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/colorbar.py", "buggy_commit_id": "11269123d516cda369764a081ddfb8c1a10ddc53", "fixed_commit_id": "02f25d60139b160fd9b321802b4a2f6c6f3f8672", "lines_deleted": {"726": "        self._label = str(label)\n"}, "lines_added": {"726": "        self._label = label\n"}}
{"project": "matplotlib", "bug": 28, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/axes/_base.py", "buggy_commit_id": "896fb8140a600341ebb5eaa4191584f23df2d2a0", "fixed_commit_id": "94ac78a47cfaed9a09e5fd8295b88e8248b67f55", "lines_deleted": {"3251": "        if self.get_xscale() == 'log':\n"}, "lines_added": {"3251": "        if self.get_xscale() == 'log' and (left <= 0 or right <= 0):\n", "3252": "            # Axes init calls set_xlim(0, 1) before get_xlim() can be called,\n", "3253": "            # so only grab the limits if we really need them.\n", "3254": "            old_left, old_right = self.get_xlim()\n"}}
{"project": "matplotlib", "bug": 30, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/colors.py", "buggy_commit_id": "3b26ee6f6b31bc0cca4be0407dbb40f44756030d", "fixed_commit_id": "d4de838fe7b38abb02f061540fd93962cc063fc4", "lines_deleted": {"379": "    x = x * (N - 1)\n", "380": "    xind = (N - 1) * np.linspace(0, 1, N) ** gamma\n", "381": "    ind = np.searchsorted(x, xind)[1:-1]\n", "382": "\n", "383": "    distance = (xind[1:-1] - x[ind - 1]) / (x[ind] - x[ind - 1])\n", "384": "    lut = np.concatenate([\n", "385": "        [y1[0]],\n", "386": "        distance * (y0[ind] - y1[ind - 1]) + y1[ind - 1],\n", "387": "        [y0[-1]],\n", "388": "    ])\n"}, "lines_added": {"379": "    if N == 1:\n", "380": "        # convention: use the y = f(x=1) value for a 1-element lookup table\n", "381": "        lut = np.array(y0[-1])\n", "382": "    else:\n", "383": "        x = x * (N - 1)\n", "384": "        xind = (N - 1) * np.linspace(0, 1, N) ** gamma\n", "385": "        ind = np.searchsorted(x, xind)[1:-1]\n", "386": "\n", "387": "        distance = (xind[1:-1] - x[ind - 1]) / (x[ind] - x[ind - 1])\n", "388": "        lut = np.concatenate([\n", "389": "            [y1[0]],\n", "390": "            distance * (y0[ind] - y1[ind - 1]) + y1[ind - 1],\n", "391": "            [y0[-1]],\n", "392": "        ])\n"}}
{"project": "matplotlib", "bug": 3, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/markers.py", "buggy_commit_id": "5e046f72ae82788788c7e9b9354b87b131891cd8", "fixed_commit_id": "2a3707d9c3472b1a010492322b6946388d4989ae", "lines_deleted": {"234": "        self._filled = True\n"}, "lines_added": {"234": "        # Initial guess: Assume the marker is filled unless the fillstyle is\n", "235": "        # set to 'none'. The marker function will override this for unfilled\n", "236": "        # markers.\n", "237": "        self._filled = self._fillstyle != 'none'\n"}}
{"project": "matplotlib", "bug": 5, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/axes/_axes.py", "buggy_commit_id": "49593b73854e10ace8f3c05343220328def6a328", "fixed_commit_id": "66289c4f1895b8c65ca92a03d92f6b1cfa552267", "lines_deleted": {"4494": "            linewidths = rcParams['lines.linewidth']\n"}, "lines_added": {"4494": "            if linewidths is None:\n", "4495": "                linewidths = rcParams['lines.linewidth']\n", "4496": "            elif np.iterable(linewidths):\n", "4497": "                linewidths = [\n", "4498": "                    lw if lw is not None else rcParams['lines.linewidth']\n", "4499": "                    for lw in linewidths]\n"}}
{"project": "matplotlib", "bug": 6, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/axes/_axes.py", "buggy_commit_id": "fb9e72309aeefb51d1a56ecbdb1e7399d105ff06", "fixed_commit_id": "d84f4a7ac8d43d1288cb8ce11ab60ae557306b7e", "lines_deleted": {"4285": "                if c.size == xsize:\n"}, "lines_added": {"4283": "                # handle the documented special case of a 2D array with 1\n", "4284": "                # row which as RGB(A) to broadcast.\n", "4285": "                if c.shape == (1, 4) or c.shape == (1, 3):\n", "4286": "                    c_is_mapped = False\n", "4287": "                    if c.size != xsize:\n", "4288": "                        valid_shape = False\n", "4291": "                elif c.size == xsize:\n"}}
{"project": "matplotlib", "bug": 7, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/colors.py", "buggy_commit_id": "969513e2a5227331a2eb9e4bc4ba8448a0f9831d", "fixed_commit_id": "ac400b51bb31b91920ee9aae02a0606a67983a8f", "lines_deleted": {"1938": "        if hasattr(intensity, 'mask'):\n"}, "lines_added": {"1938": "        if np.ma.is_masked(intensity):\n"}}
{"project": "matplotlib", "bug": 9, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/projections/polar.py", "buggy_commit_id": "8673167d4c44dc2ede02fedd718dadf7f88e102d", "fixed_commit_id": "c01f9d3eff9b6239446c1bb2d205eccd69054aeb", "lines_deleted": {}, "lines_added": {"951": "        self._unstale_viewLim()\n"}}
{"project": "matplotlib", "bug": 10, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/axis.py", "buggy_commit_id": "b31d64ce3910e8d297d8300690e459587f77181f", "fixed_commit_id": "1986da3968ee76c6bce8f4c04aed80e23bd4ecfa", "lines_deleted": {"826": "            # special-case label color to also apply to the offset text\n"}, "lines_added": {"826": "            # labelOn and labelcolor also apply to the offset text.\n", "827": "            if 'label1On' in kwtrans or 'label2On' in kwtrans:\n", "828": "                self.offsetText.set_visible(\n", "829": "                    self._major_tick_kw.get('label1On', False)\n", "830": "                    or self._major_tick_kw.get('label2On', False))\n"}}
{"project": "matplotlib", "bug": 14, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/text.py", "buggy_commit_id": "dbc35a9d625e162445f864b9f463c9961888e901", "fixed_commit_id": "c986a12b6d0d0d44f5a87f7cd4408f38040e2537", "lines_deleted": {"176": "        # Update bbox last, as it depends on font properties.\n"}, "lines_added": {"177": "        # Update fontproperties first, as it has lowest priority.\n", "178": "        fontproperties = kwargs.pop(\"fontproperties\", sentinel)\n", "179": "        if fontproperties is not sentinel:\n", "180": "            self.set_fontproperties(fontproperties)\n", "181": "        # Update bbox last, as it depends on font properties.\n"}}
{"project": "matplotlib", "bug": 16, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/transforms.py", "buggy_commit_id": "89ff308306bafac22647c050a42141f040210216", "fixed_commit_id": "5d99e151be80bcb0b3b6d081fd3038330f573d94", "lines_deleted": {}, "lines_added": {"2814": "    # Expand vmin, vmax to float: if they were integer types, they can wrap\n", "2815": "    # around in abs (abs(np.int8(-128)) == -128) and vmax - vmin can overflow.\n", "2816": "    vmin, vmax = map(float, [vmin, vmax])\n", "2817": "\n"}}
{"project": "matplotlib", "bug": 17, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/transforms.py", "buggy_commit_id": "58c66982d98851c56b045137ced803fd62c6c5e8", "fixed_commit_id": "05a5db0fec2eced55076736f0b9520641b279ad6", "lines_deleted": {}, "lines_added": {"2793": "    # Expand vmin, vmax to float: if they were integer types, they can wrap\n", "2794": "    # around in abs (abs(np.int8(-128)) == -128) and vmax - vmin can overflow.\n", "2795": "    vmin, vmax = map(float, [vmin, vmax])\n", "2796": "\n"}}
{"project": "matplotlib", "bug": 22, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/axes/_axes.py", "buggy_commit_id": "a87cd8a4c43688137155accdc57ed64fb95e2d40", "fixed_commit_id": "2349d826a170a10510d1ee8be02eaff51f7ee89f", "lines_deleted": {}, "lines_added": {"6575": "        if not cbook.is_scalar_or_string(bins):\n", "6576": "            bins = self.convert_xunits(bins)\n", "6577": "\n"}}
{"project": "matplotlib", "bug": 23, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/axes/_base.py", "buggy_commit_id": "bb6a4af984778dbac55c8391ae29fa2b5b201361", "fixed_commit_id": "418a1adf597b4d7759dcd64b864bd64cc1b507f4", "lines_deleted": {"1509": "        x0, x1 = map(x_trf.inverted().transform, dL.intervalx)\n", "1510": "        y0, y1 = map(y_trf.inverted().transform, dL.intervaly)\n"}, "lines_added": {"1509": "        x0, x1 = map(x_trf.transform, dL.intervalx)\n", "1510": "        y0, y1 = map(y_trf.transform, dL.intervaly)\n"}}
{"project": "matplotlib", "bug": 24, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/axis.py", "buggy_commit_id": "9a5473dbac05f3d6773b42c8e16d58a7dc3159b8", "fixed_commit_id": "407a9fe71a4c0a8ba4914b8f54f21d32d6dd2d74", "lines_deleted": {"1894": "                setter(self, max(vmin, vmax, oldmax), min(vmin, vmax, oldmin),\n"}, "lines_added": {"1894": "                setter(self, max(vmin, vmax, oldmin), min(vmin, vmax, oldmax),\n"}}
{"project": "matplotlib", "bug": 25, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/collections.py", "buggy_commit_id": "9a5473dbac05f3d6773b42c8e16d58a7dc3159b8", "fixed_commit_id": "184225bc5639fbd2f29c1253602806a8b6462d9f", "lines_deleted": {"1472": "\n", "1475": "        if positions is None or len(positions) == 0:\n", "1477": "        elif hasattr(positions, 'ndim') and positions.ndim > 1:\n"}, "lines_added": {"1472": "        if positions is None:\n", "1473": "            raise ValueError('positions must be an array-like object')\n", "1474": "        # Force a copy of positions\n", "1475": "        positions = np.array(positions, copy=True)\n", "1478": "        if positions.size == 0:\n", "1480": "        elif positions.ndim > 1:\n"}}
{"project": "matplotlib", "bug": 26, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/axis.py", "buggy_commit_id": "04d9d28b820af0b4df230a3c67314ed5b0af8fdd", "fixed_commit_id": "557375ff91f64c1b827f6014da2d369513a69316", "lines_deleted": {"1908": "                setter(self, max(vmin, vmax, oldmax), min(vmin, vmax, oldmin),\n"}, "lines_added": {"1908": "                setter(self, max(vmin, vmax, oldmin), min(vmin, vmax, oldmax),\n"}}
{"project": "matplotlib", "bug": 27, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/colorbar.py", "buggy_commit_id": "11269123d516cda369764a081ddfb8c1a10ddc53", "fixed_commit_id": "02f25d60139b160fd9b321802b4a2f6c6f3f8672", "lines_deleted": {"726": "        self._label = str(label)\n"}, "lines_added": {"726": "        self._label = label\n"}}
{"project": "matplotlib", "bug": 28, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/axes/_base.py", "buggy_commit_id": "896fb8140a600341ebb5eaa4191584f23df2d2a0", "fixed_commit_id": "94ac78a47cfaed9a09e5fd8295b88e8248b67f55", "lines_deleted": {"3251": "        if self.get_xscale() == 'log':\n"}, "lines_added": {"3251": "        if self.get_xscale() == 'log' and (left <= 0 or right <= 0):\n", "3252": "            # Axes init calls set_xlim(0, 1) before get_xlim() can be called,\n", "3253": "            # so only grab the limits if we really need them.\n", "3254": "            old_left, old_right = self.get_xlim()\n"}}
{"project": "matplotlib", "bug": 30, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/colors.py", "buggy_commit_id": "3b26ee6f6b31bc0cca4be0407dbb40f44756030d", "fixed_commit_id": "d4de838fe7b38abb02f061540fd93962cc063fc4", "lines_deleted": {"379": "    x = x * (N - 1)\n", "380": "    xind = (N - 1) * np.linspace(0, 1, N) ** gamma\n", "381": "    ind = np.searchsorted(x, xind)[1:-1]\n", "382": "\n", "383": "    distance = (xind[1:-1] - x[ind - 1]) / (x[ind] - x[ind - 1])\n", "384": "    lut = np.concatenate([\n", "385": "        [y1[0]],\n", "386": "        distance * (y0[ind] - y1[ind - 1]) + y1[ind - 1],\n", "387": "        [y0[-1]],\n", "388": "    ])\n"}, "lines_added": {"379": "    if N == 1:\n", "380": "        # convention: use the y = f(x=1) value for a 1-element lookup table\n", "381": "        lut = np.array(y0[-1])\n", "382": "    else:\n", "383": "        x = x * (N - 1)\n", "384": "        xind = (N - 1) * np.linspace(0, 1, N) ** gamma\n", "385": "        ind = np.searchsorted(x, xind)[1:-1]\n", "386": "\n", "387": "        distance = (xind[1:-1] - x[ind - 1]) / (x[ind] - x[ind - 1])\n", "388": "        lut = np.concatenate([\n", "389": "            [y1[0]],\n", "390": "            distance * (y0[ind] - y1[ind - 1]) + y1[ind - 1],\n", "391": "            [y0[-1]],\n", "392": "        ])\n"}}
{"project": "matplotlib", "bug": 3, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/markers.py", "buggy_commit_id": "5e046f72ae82788788c7e9b9354b87b131891cd8", "fixed_commit_id": "2a3707d9c3472b1a010492322b6946388d4989ae", "lines_deleted": {"234": "        self._filled = True\n"}, "lines_added": {"234": "        # Initial guess: Assume the marker is filled unless the fillstyle is\n", "235": "        # set to 'none'. The marker function will override this for unfilled\n", "236": "        # markers.\n", "237": "        self._filled = self._fillstyle != 'none'\n"}}
{"project": "matplotlib", "bug": 5, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/axes/_axes.py", "buggy_commit_id": "49593b73854e10ace8f3c05343220328def6a328", "fixed_commit_id": "66289c4f1895b8c65ca92a03d92f6b1cfa552267", "lines_deleted": {"4494": "            linewidths = rcParams['lines.linewidth']\n"}, "lines_added": {"4494": "            if linewidths is None:\n", "4495": "                linewidths = rcParams['lines.linewidth']\n", "4496": "            elif np.iterable(linewidths):\n", "4497": "                linewidths = [\n", "4498": "                    lw if lw is not None else rcParams['lines.linewidth']\n", "4499": "                    for lw in linewidths]\n"}}
{"project": "matplotlib", "bug": 6, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/axes/_axes.py", "buggy_commit_id": "fb9e72309aeefb51d1a56ecbdb1e7399d105ff06", "fixed_commit_id": "d84f4a7ac8d43d1288cb8ce11ab60ae557306b7e", "lines_deleted": {"4285": "                if c.size == xsize:\n"}, "lines_added": {"4283": "                # handle the documented special case of a 2D array with 1\n", "4284": "                # row which as RGB(A) to broadcast.\n", "4285": "                if c.shape == (1, 4) or c.shape == (1, 3):\n", "4286": "                    c_is_mapped = False\n", "4287": "                    if c.size != xsize:\n", "4288": "                        valid_shape = False\n", "4291": "                elif c.size == xsize:\n"}}
{"project": "matplotlib", "bug": 7, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/colors.py", "buggy_commit_id": "969513e2a5227331a2eb9e4bc4ba8448a0f9831d", "fixed_commit_id": "ac400b51bb31b91920ee9aae02a0606a67983a8f", "lines_deleted": {"1938": "        if hasattr(intensity, 'mask'):\n"}, "lines_added": {"1938": "        if np.ma.is_masked(intensity):\n"}}
{"project": "matplotlib", "bug": 9, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/projections/polar.py", "buggy_commit_id": "8673167d4c44dc2ede02fedd718dadf7f88e102d", "fixed_commit_id": "c01f9d3eff9b6239446c1bb2d205eccd69054aeb", "lines_deleted": {}, "lines_added": {"951": "        self._unstale_viewLim()\n"}}
{"project": "matplotlib", "bug": 10, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/axis.py", "buggy_commit_id": "b31d64ce3910e8d297d8300690e459587f77181f", "fixed_commit_id": "1986da3968ee76c6bce8f4c04aed80e23bd4ecfa", "lines_deleted": {"826": "            # special-case label color to also apply to the offset text\n"}, "lines_added": {"826": "            # labelOn and labelcolor also apply to the offset text.\n", "827": "            if 'label1On' in kwtrans or 'label2On' in kwtrans:\n", "828": "                self.offsetText.set_visible(\n", "829": "                    self._major_tick_kw.get('label1On', False)\n", "830": "                    or self._major_tick_kw.get('label2On', False))\n"}}
{"project": "matplotlib", "bug": 14, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/text.py", "buggy_commit_id": "dbc35a9d625e162445f864b9f463c9961888e901", "fixed_commit_id": "c986a12b6d0d0d44f5a87f7cd4408f38040e2537", "lines_deleted": {"176": "        # Update bbox last, as it depends on font properties.\n"}, "lines_added": {"177": "        # Update fontproperties first, as it has lowest priority.\n", "178": "        fontproperties = kwargs.pop(\"fontproperties\", sentinel)\n", "179": "        if fontproperties is not sentinel:\n", "180": "            self.set_fontproperties(fontproperties)\n", "181": "        # Update bbox last, as it depends on font properties.\n"}}
{"project": "matplotlib", "bug": 16, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/transforms.py", "buggy_commit_id": "89ff308306bafac22647c050a42141f040210216", "fixed_commit_id": "5d99e151be80bcb0b3b6d081fd3038330f573d94", "lines_deleted": {}, "lines_added": {"2814": "    # Expand vmin, vmax to float: if they were integer types, they can wrap\n", "2815": "    # around in abs (abs(np.int8(-128)) == -128) and vmax - vmin can overflow.\n", "2816": "    vmin, vmax = map(float, [vmin, vmax])\n", "2817": "\n"}}
{"project": "matplotlib", "bug": 17, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/transforms.py", "buggy_commit_id": "58c66982d98851c56b045137ced803fd62c6c5e8", "fixed_commit_id": "05a5db0fec2eced55076736f0b9520641b279ad6", "lines_deleted": {}, "lines_added": {"2793": "    # Expand vmin, vmax to float: if they were integer types, they can wrap\n", "2794": "    # around in abs (abs(np.int8(-128)) == -128) and vmax - vmin can overflow.\n", "2795": "    vmin, vmax = map(float, [vmin, vmax])\n", "2796": "\n"}}
{"project": "matplotlib", "bug": 22, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/axes/_axes.py", "buggy_commit_id": "a87cd8a4c43688137155accdc57ed64fb95e2d40", "fixed_commit_id": "2349d826a170a10510d1ee8be02eaff51f7ee89f", "lines_deleted": {}, "lines_added": {"6575": "        if not cbook.is_scalar_or_string(bins):\n", "6576": "            bins = self.convert_xunits(bins)\n", "6577": "\n"}}
{"project": "matplotlib", "bug": 23, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/axes/_base.py", "buggy_commit_id": "bb6a4af984778dbac55c8391ae29fa2b5b201361", "fixed_commit_id": "418a1adf597b4d7759dcd64b864bd64cc1b507f4", "lines_deleted": {"1509": "        x0, x1 = map(x_trf.inverted().transform, dL.intervalx)\n", "1510": "        y0, y1 = map(y_trf.inverted().transform, dL.intervaly)\n"}, "lines_added": {"1509": "        x0, x1 = map(x_trf.transform, dL.intervalx)\n", "1510": "        y0, y1 = map(y_trf.transform, dL.intervaly)\n"}}
{"project": "matplotlib", "bug": 24, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/axis.py", "buggy_commit_id": "9a5473dbac05f3d6773b42c8e16d58a7dc3159b8", "fixed_commit_id": "407a9fe71a4c0a8ba4914b8f54f21d32d6dd2d74", "lines_deleted": {"1894": "                setter(self, max(vmin, vmax, oldmax), min(vmin, vmax, oldmin),\n"}, "lines_added": {"1894": "                setter(self, max(vmin, vmax, oldmin), min(vmin, vmax, oldmax),\n"}}
{"project": "matplotlib", "bug": 25, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/collections.py", "buggy_commit_id": "9a5473dbac05f3d6773b42c8e16d58a7dc3159b8", "fixed_commit_id": "184225bc5639fbd2f29c1253602806a8b6462d9f", "lines_deleted": {"1472": "\n", "1475": "        if positions is None or len(positions) == 0:\n", "1477": "        elif hasattr(positions, 'ndim') and positions.ndim > 1:\n"}, "lines_added": {"1472": "        if positions is None:\n", "1473": "            raise ValueError('positions must be an array-like object')\n", "1474": "        # Force a copy of positions\n", "1475": "        positions = np.array(positions, copy=True)\n", "1478": "        if positions.size == 0:\n", "1480": "        elif positions.ndim > 1:\n"}}
{"project": "matplotlib", "bug": 26, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/axis.py", "buggy_commit_id": "04d9d28b820af0b4df230a3c67314ed5b0af8fdd", "fixed_commit_id": "557375ff91f64c1b827f6014da2d369513a69316", "lines_deleted": {"1908": "                setter(self, max(vmin, vmax, oldmax), min(vmin, vmax, oldmin),\n"}, "lines_added": {"1908": "                setter(self, max(vmin, vmax, oldmin), min(vmin, vmax, oldmax),\n"}}
{"project": "matplotlib", "bug": 27, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/colorbar.py", "buggy_commit_id": "11269123d516cda369764a081ddfb8c1a10ddc53", "fixed_commit_id": "02f25d60139b160fd9b321802b4a2f6c6f3f8672", "lines_deleted": {"726": "        self._label = str(label)\n"}, "lines_added": {"726": "        self._label = label\n"}}
{"project": "matplotlib", "bug": 28, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/axes/_base.py", "buggy_commit_id": "896fb8140a600341ebb5eaa4191584f23df2d2a0", "fixed_commit_id": "94ac78a47cfaed9a09e5fd8295b88e8248b67f55", "lines_deleted": {"3251": "        if self.get_xscale() == 'log':\n"}, "lines_added": {"3251": "        if self.get_xscale() == 'log' and (left <= 0 or right <= 0):\n", "3252": "            # Axes init calls set_xlim(0, 1) before get_xlim() can be called,\n", "3253": "            # so only grab the limits if we really need them.\n", "3254": "            old_left, old_right = self.get_xlim()\n"}}
{"project": "matplotlib", "bug": 30, "project_url": "https://github.com/matplotlib/matplotlib", "file_changed": "lib/matplotlib/colors.py", "buggy_commit_id": "3b26ee6f6b31bc0cca4be0407dbb40f44756030d", "fixed_commit_id": "d4de838fe7b38abb02f061540fd93962cc063fc4", "lines_deleted": {"379": "    x = x * (N - 1)\n", "380": "    xind = (N - 1) * np.linspace(0, 1, N) ** gamma\n", "381": "    ind = np.searchsorted(x, xind)[1:-1]\n", "382": "\n", "383": "    distance = (xind[1:-1] - x[ind - 1]) / (x[ind] - x[ind - 1])\n", "384": "    lut = np.concatenate([\n", "385": "        [y1[0]],\n", "386": "        distance * (y0[ind] - y1[ind - 1]) + y1[ind - 1],\n", "387": "        [y0[-1]],\n", "388": "    ])\n"}, "lines_added": {"379": "    if N == 1:\n", "380": "        # convention: use the y = f(x=1) value for a 1-element lookup table\n", "381": "        lut = np.array(y0[-1])\n", "382": "    else:\n", "383": "        x = x * (N - 1)\n", "384": "        xind = (N - 1) * np.linspace(0, 1, N) ** gamma\n", "385": "        ind = np.searchsorted(x, xind)[1:-1]\n", "386": "\n", "387": "        distance = (xind[1:-1] - x[ind - 1]) / (x[ind] - x[ind - 1])\n", "388": "        lut = np.concatenate([\n", "389": "            [y1[0]],\n", "390": "            distance * (y0[ind] - y1[ind - 1]) + y1[ind - 1],\n", "391": "            [y0[-1]],\n", "392": "        ])\n"}}
