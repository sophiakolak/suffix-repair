{"project": "pandas", "bug": 1, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/dtypes/common.py", "buggy_commit_id": "3fd150c", "fixed_commit_id": "e41ee47a90bb1d8a1fa28fcefcd45ed8ef5cb946", "lines_deleted": {"601": "        is_excluded_checks = (is_period_dtype, is_interval_dtype)\n"}, "lines_added": {"601": "        is_excluded_checks = (is_period_dtype, is_interval_dtype, is_categorical_dtype)\n"}}
{"project": "pandas", "bug": 4, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/base.py", "buggy_commit_id": "cca710b", "fixed_commit_id": "2250ddfaff92abaff20a5bcd78315f5d4bd44981", "lines_deleted": {"3530": "            return multi_join_idx, lidx, ridx\n"}, "lines_added": {"3530": "            if return_indexers:\n", "3531": "                return multi_join_idx, lidx, ridx\n", "3532": "            else:\n", "3533": "                return multi_join_idx\n"}}
{"project": "pandas", "bug": 6, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/grouper.py", "buggy_commit_id": "21a10d1", "fixed_commit_id": "8cd8ed3657e52ad9f67e17b7f5c20f7340ab6a2c", "lines_deleted": {"756": "        except (KeyError, IndexError):\n"}, "lines_added": {"756": "        except (KeyError, IndexError, ValueError):\n", "757": "            # TODO: ValueError: Given date string not likely a datetime.\n", "758": "            # should be KeyError?\n"}}
{"project": "pandas", "bug": 7, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/base.py", "buggy_commit_id": "27f365d", "fixed_commit_id": "64336ff8414f8977ff94adb9a5bc000a3a4ef454", "lines_deleted": {"3075": "        target = np.asarray(target)\n", "3076": "        left_distances = abs(self.values[left_indexer] - target)\n", "3077": "        right_distances = abs(self.values[right_indexer] - target)\n"}, "lines_added": {"3075": "        left_distances = np.abs(self[left_indexer] - target)\n", "3076": "        right_distances = np.abs(self[right_indexer] - target)\n"}}
{"project": "pandas", "bug": 8, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/internals/blocks.py", "buggy_commit_id": "ddbeca6", "fixed_commit_id": "d09f20e29bdfa82f5efc071986e2633001d552f6", "lines_deleted": {"730": "        if not mask.any():\n", "731": "            if inplace:\n", "732": "                return [self]\n", "733": "            return [self.copy()]\n", "734": "\n"}, "lines_added": {}}
{"project": "pandas", "bug": 10, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/internals/blocks.py", "buggy_commit_id": "de8ca78", "fixed_commit_id": "e1ee2b0679e5999c993a787606d30e75faaba7a2", "lines_deleted": {"1601": "        if isinstance(new, np.ndarray) and len(new) == len(mask):\n"}, "lines_added": {"1601": "        if isinstance(new, (np.ndarray, ExtensionArray)) and len(new) == len(mask):\n"}}
{"project": "pandas", "bug": 11, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/reshape/concat.py", "buggy_commit_id": "1c88e6a", "fixed_commit_id": "b7f061c3d24df943e16918ad3932e767f5639a38", "lines_deleted": {"621": "                try:\n", "622": "                    i = level.get_loc(key)\n", "623": "                except KeyError as err:\n", "624": "                    raise ValueError(f\"Key {key} not in level {level}\") from err\n"}, "lines_added": {"621": "                mask = level == key\n", "622": "                if not mask.any():\n", "623": "                    raise ValueError(f\"Key {key} not in level {level}\")\n", "624": "                i = np.nonzero(level == key)[0][0]\n"}}
{"project": "pandas", "bug": 19, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexing.py", "buggy_commit_id": "17dc6b0", "fixed_commit_id": "c6a1638bcd99df677a8f76f036c0b30027eb243c", "lines_deleted": {"1084": "            # convert various list-like indexers\n", "1085": "            # to a list of keys\n", "1086": "            # we will use the *values* of the object\n", "1087": "            # and NOT the index if its a PandasObject\n", "1088": "            if isinstance(labels, ABCMultiIndex):\n", "1089": "\n", "1090": "                if isinstance(key, (ABCSeries, np.ndarray)) and key.ndim <= 1:\n", "1091": "                    # Series, or 0,1 ndim ndarray\n", "1092": "                    # GH 14730\n", "1093": "                    key = list(key)\n", "1094": "                elif isinstance(key, ABCDataFrame):\n", "1095": "                    # GH 15438\n", "1096": "                    raise NotImplementedError(\n", "1097": "                        \"Indexing a MultiIndex with a \"\n", "1098": "                        \"DataFrame key is not \"\n", "1099": "                        \"implemented\"\n", "1100": "                    )\n", "1101": "                elif hasattr(key, \"ndim\") and key.ndim > 1:\n", "1102": "                    raise NotImplementedError(\n", "1103": "                        \"Indexing a MultiIndex with a \"\n", "1104": "                        \"multidimensional key is not \"\n", "1105": "                        \"implemented\"\n", "1106": "                    )\n", "1107": "\n", "1108": "                if (\n", "1109": "                    not isinstance(key, tuple)\n", "1110": "                    and len(key)\n", "1111": "                    and not isinstance(key[0], tuple)\n", "1112": "                ):\n", "1113": "                    key = tuple([key])\n", "1114": "\n"}, "lines_added": {}}
{"project": "pandas", "bug": 21, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/series.py", "buggy_commit_id": "4071c3b", "fixed_commit_id": "56d0934092b8296c90f940c56fce3b731e0de81b", "lines_deleted": {"951": "        if isinstance(key, list):\n", "952": "            # handle the dup indexing case GH#4246\n", "953": "            return self.loc[key]\n", "954": "\n", "955": "        return self.reindex(key)\n"}, "lines_added": {"951": "        # handle the dup indexing case GH#4246\n", "952": "        return self.loc[key]\n"}}
{"project": "pandas", "bug": 25, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/arrays/datetimes.py", "buggy_commit_id": "ecc3b2e", "fixed_commit_id": "73d614403759831814ef7ab83ef1e4aaa645b33a", "lines_deleted": {"1279": "        sarray = fields.build_isocalendar_sarray(self.asi8)\n"}, "lines_added": {"1279": "        if self.tz is not None and not timezones.is_utc(self.tz):\n", "1280": "            values = self._local_timestamps()\n", "1281": "        else:\n", "1282": "            values = self.asi8\n", "1283": "        sarray = fields.build_isocalendar_sarray(values)\n"}}
{"project": "pandas", "bug": 28, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/strings.py", "buggy_commit_id": "40fd73a", "fixed_commit_id": "ef9b9387c88cf12b20dd8656dfedfc236e0f3352", "lines_deleted": {"2299": "            return [Series(others._values, index=others)]\n"}, "lines_added": {"2299": "            return [Series(others._values, index=idx)]\n"}}
{"project": "pandas", "bug": 29, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/arrays/interval.py", "buggy_commit_id": "6e3537d", "fixed_commit_id": "4334482c348c3adc69683c8332295e22092c1b57", "lines_deleted": {"548": "        if needs_float_conversion:\n", "549": "            left = left.astype(\"float\")\n", "550": "        left.values[key] = value_left\n", "554": "        if needs_float_conversion:\n", "555": "            right = right.astype(\"float\")\n", "556": "        right.values[key] = value_right\n"}, "lines_added": {"544": "        if needs_float_conversion:\n", "545": "            raise ValueError(\"Cannot set float NaN to integer-backed IntervalArray\")\n", "546": "\n", "548": "\n", "552": "        left._values[key] = value_left\n", "556": "        right._values[key] = value_right\n"}}
{"project": "pandas", "bug": 30, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/io/json/_json.py", "buggy_commit_id": "60d6f28", "fixed_commit_id": "d857cd12b3ae11be788ba96015383a5b7464ecc9", "lines_deleted": {"984": "            except (ValueError, OverflowError):\n"}, "lines_added": {"984": "            except (ValueError, OverflowError, TypeError):\n"}}
{"project": "pandas", "bug": 33, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/arrays/integer.py", "buggy_commit_id": "03dacc1", "fixed_commit_id": "89d8aba76a2bb930e520590d145e3d67b2046e39", "lines_deleted": {"501": "        data[self._mask] = data.min() - 1\n"}, "lines_added": {"501": "        if self._mask.any():\n", "502": "            data[self._mask] = data.min() - 1\n"}}
{"project": "pandas", "bug": 34, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/resample.py", "buggy_commit_id": "02a134b", "fixed_commit_id": "cf9ec7854ecb80709804178e769425f02ddf8c64", "lines_deleted": {"1430": "            ambiguous=\"infer\",\n"}, "lines_added": {"1424": "        # GH 25758: If DST lands at midnight (e.g. 'America/Havana'), user feedback\n", "1425": "        # has noted that ambiguous=True provides the most sensible result\n", "1432": "            ambiguous=True,\n"}}
{"project": "pandas", "bug": 35, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/period.py", "buggy_commit_id": "a7dd3ea", "fixed_commit_id": "f10ec595eccaf86a9f52fe9683e1181a51ba675b", "lines_deleted": {"326": "        # To avoid a reference cycle, pass a weakref of self to _engine_type.\n", "327": "        period = weakref.ref(self)\n"}, "lines_added": {"326": "        # To avoid a reference cycle, pass a weakref of self._values to _engine_type.\n", "327": "        period = weakref.ref(self._values)\n"}}
{"project": "pandas", "bug": 39, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/ops/methods.py", "buggy_commit_id": "8a5f291", "fixed_commit_id": "a3097b5bd172e76dd3524eb5dbe18b6b4c22df50", "lines_deleted": {"95": "\n"}, "lines_added": {"95": "            # Delete cacher\n", "96": "            self._reset_cacher()\n"}}
{"project": "pandas", "bug": 48, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/generic.py", "buggy_commit_id": "9bc3ee0", "fixed_commit_id": "9e7cb7c102655d0ba92d2561c178da9254d5cef5", "lines_deleted": {"1085": "                    except ValueError:\n"}, "lines_added": {"1085": "                    except (ValueError, TypeError):\n"}}
{"project": "pandas", "bug": 49, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/strings.py", "buggy_commit_id": "113c255", "fixed_commit_id": "37659d47a685ecc5f5117aa56526ece0106c6d0f", "lines_deleted": {}, "lines_added": {"777": "            if x is libmissing.NA:\n", "778": "                return x\n"}}
{"project": "pandas", "bug": 50, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/arrays/categorical.py", "buggy_commit_id": "ebf9668", "fixed_commit_id": "821aa25c9039e72da9a7b236cf2f9e7d549cbb7b", "lines_deleted": {"105": "                ret[mask] = False\n"}, "lines_added": {"105": "                if opname == \"__ne__\":\n", "106": "                    ret[(self._codes == -1) & (other_codes == -1)] = True\n", "107": "                else:\n", "108": "                    ret[mask] = False\n"}}
{"project": "pandas", "bug": 52, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/generic.py", "buggy_commit_id": "20a84a5", "fixed_commit_id": "7017599821e02ba95282848c12f7d3b5f2ce670a", "lines_deleted": {"593": "        # GH 27951\n", "594": "        # temporary fix while we wait for NumPy bug 12629 to be fixed\n", "595": "        val[isna(val)] = np.datetime64(\"NaT\")\n", "596": "\n", "597": "        try:\n", "598": "            sorter = np.lexsort((val, ids))\n", "599": "        except TypeError:  # catches object dtypes\n", "600": "            msg = f\"val.dtype must be object, got {val.dtype}\"\n", "601": "            assert val.dtype == object, msg\n", "602": "            val, _ = algorithms.factorize(val, sort=False)\n", "603": "            sorter = np.lexsort((val, ids))\n", "604": "            _isna = lambda a: a == -1\n", "605": "        else:\n", "606": "            _isna = isna\n", "607": "\n", "608": "        ids, val = ids[sorter], val[sorter]\n", "613": "        inc = np.r_[1, val[1:] != val[:-1]]\n", "616": "        mask = _isna(val)\n"}, "lines_added": {"593": "        codes, _ = algorithms.factorize(val, sort=False)\n", "594": "        sorter = np.lexsort((codes, ids))\n", "595": "        codes = codes[sorter]\n", "596": "        ids = ids[sorter]\n", "601": "        inc = np.r_[1, codes[1:] != codes[:-1]]\n", "604": "        mask = codes == -1\n"}}
{"project": "pandas", "bug": 56, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/frame.py", "buggy_commit_id": "9e69040", "fixed_commit_id": "dafec63f2e138d0451dae5b37edea2e83f9adc8a", "lines_deleted": {"2624": "            series = self._iget_item_cache(col)\n", "2625": "            return com.maybe_box_datetimelike(series._values[index])\n"}, "lines_added": {"2624": "            series = self._ixs(col, axis=1)\n", "2625": "            return series._values[index]\n"}}
{"project": "pandas", "bug": 58, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/arrays/categorical.py", "buggy_commit_id": "634a41f", "fixed_commit_id": "16684f2affaf901b42a12e50f9c29e7c034ad7ea", "lines_deleted": {"646": "        codes = np.asarray(codes)  # #21767\n"}, "lines_added": {"646": "        if is_extension_array_dtype(codes) and is_integer_dtype(codes):\n", "647": "            # Avoid the implicit conversion of Int to object\n", "648": "            if isna(codes).any():\n", "649": "                raise ValueError(\"codes cannot contain NA values\")\n", "650": "            codes = codes.to_numpy(dtype=np.int64)\n", "651": "        else:\n", "652": "            codes = np.asarray(codes)\n"}}
{"project": "pandas", "bug": 59, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/window/rolling.py", "buggy_commit_id": "292a993", "fixed_commit_id": "8dd9fabd2ad9104e747084437b9ad436d5be087a", "lines_deleted": {"1784": "        window = self._get_window(other)\n"}, "lines_added": {"1784": "        window = self._get_window(other) if not self.is_freq_type else self.win_freq\n"}}
{"project": "pandas", "bug": 60, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/window/rolling.py", "buggy_commit_id": "6bc2dca", "fixed_commit_id": "fcf7258c19b0a6a712f33fb0bcefdae426be7e7f", "lines_deleted": {"1298": "        # name=func for WindowGroupByMixin._apply\n"}, "lines_added": {"1298": "        # name=func & raw=raw for WindowGroupByMixin._apply\n", "1305": "            raw=raw,\n"}}
{"project": "pandas", "bug": 61, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/series.py", "buggy_commit_id": "74dad82", "fixed_commit_id": "f7e2b74f1bcc1d1cbebbc42481e33f0abb2843dc", "lines_deleted": {"921": "                return self._get_values(key)\n"}, "lines_added": {"921": "                return self.iloc[key]\n"}}
{"project": "pandas", "bug": 63, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexing.py", "buggy_commit_id": "e5c65bf", "fixed_commit_id": "e1ca66bae38b8026079dfcbe0edad5f278546608", "lines_deleted": {"2089": "        for ax, i in zip(self.obj.axes, key):\n", "2090": "            if ax.is_integer():\n", "2091": "                if not is_integer(i):\n", "2092": "                    raise ValueError(\n", "2093": "                        \"At based indexing on an integer index \"\n", "2094": "                        \"can only have integer indexers\"\n", "2095": "                    )\n", "2096": "            else:\n", "2097": "                if is_integer(i) and not (ax.holds_integer() or ax.is_floating()):\n", "2098": "                    raise ValueError(\n", "2099": "                        \"At based indexing on an non-integer \"\n", "2100": "                        \"index can only have non-integer \"\n", "2101": "                        \"indexers\"\n", "2102": "                    )\n", "2103": "        return key\n"}, "lines_added": {"2089": "        lkey = list(key)\n", "2090": "        for n, (ax, i) in enumerate(zip(self.obj.axes, key)):\n", "2091": "            lkey[n] = ax._convert_scalar_indexer(i, kind=\"loc\")\n", "2092": "\n", "2093": "        return tuple(lkey)\n"}}
{"project": "pandas", "bug": 64, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/io/formats/excel.py", "buggy_commit_id": "31c1856", "fixed_commit_id": "d0c84ce57d23a409169daf7232ec7681e42363fe", "lines_deleted": {"405": "            self.df = df\n"}, "lines_added": {"405": "            self.df = df.reindex(columns=cols)\n"}}
{"project": "pandas", "bug": 69, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexing.py", "buggy_commit_id": "426d445", "fixed_commit_id": "948f95756c79543bb089a94a85e73011a3730b2d", "lines_deleted": {"2126": "                if is_integer(i) and not ax.holds_integer():\n"}, "lines_added": {"2126": "                if is_integer(i) and not (ax.holds_integer() or ax.is_floating()):\n"}}
{"project": "pandas", "bug": 74, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/timedeltas.py", "buggy_commit_id": "9a211aa", "fixed_commit_id": "839e7f1416148caff518a5b75327a2480a2bbbb4", "lines_deleted": {"165": "        if isinstance(data, TimedeltaArray):\n"}, "lines_added": {"165": "        if isinstance(data, TimedeltaArray) and freq is None:\n"}}
{"project": "pandas", "bug": 76, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/io/json/_json.py", "buggy_commit_id": "4da554f", "fixed_commit_id": "47922d3b00edfc264f73b1484589734bbd077c11", "lines_deleted": {"944": "            except (TypeError, ValueError):\n"}, "lines_added": {"944": "            except (TypeError, ValueError, OverflowError):\n"}}
{"project": "pandas", "bug": 78, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/frame.py", "buggy_commit_id": "f5aa542", "fixed_commit_id": "bd6b395a1e8fb7d099fa17a0e24f8fe3b628822c", "lines_deleted": {"8015": "            result = Series(result, index=labels)\n"}, "lines_added": {"8015": "            result = self._constructor_sliced(result, index=labels)\n"}}
{"project": "pandas", "bug": 82, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/internals/concat.py", "buggy_commit_id": "6f395ad", "fixed_commit_id": "e83a6bddac8c89b144dfe0783594dd332c5b3030", "lines_deleted": {"352": "        return np.dtype(\"M8[ns]\"), tslibs.iNaT\n"}, "lines_added": {"352": "        return np.dtype(\"M8[ns]\"), np.datetime64(\"NaT\", \"ns\")\n"}}
{"project": "pandas", "bug": 85, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/multi.py", "buggy_commit_id": "f1aaf62", "fixed_commit_id": "29edd119d31a9ee7d4f89e8c1dc8af96f0c19dce", "lines_deleted": {}, "lines_added": {"1258": "        else:\n", "1259": "            # break references back to us so that setting the name\n", "1260": "            # on the output of a groupby doesn't reflect back here.\n", "1261": "            level_index = level_index.copy()\n"}}
{"project": "pandas", "bug": 86, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/reshape/pivot.py", "buggy_commit_id": "55cfabb", "fixed_commit_id": "f792d8c50ee456aa8aa2ae406d8e6b8843f45614", "lines_deleted": {}, "lines_added": {"431": "    if columns is None:\n", "432": "        raise TypeError(\"pivot() missing 1 required argument: 'columns'\")\n", "433": "\n"}}
{"project": "pandas", "bug": 88, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/reshape/pivot.py", "buggy_commit_id": "698920f", "fixed_commit_id": "586bcb16023ae870b0ad7769f6d9077903705486", "lines_deleted": {"119": "    if table.index.nlevels > 1:\n"}, "lines_added": {"117": "\n", "120": "    # GH17038, this check should only happen if index is defined (not None)\n", "121": "    if table.index.nlevels > 1 and index:\n"}}
{"project": "pandas", "bug": 89, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/reshape/reshape.py", "buggy_commit_id": "0dc317f", "fixed_commit_id": "feaa5033b7810f7775fd4806c27b2f9f1e9b5051", "lines_deleted": {"360": "                result = result.unstack(val)\n"}, "lines_added": {"360": "                result = result.unstack(val, fill_value=fill_value)\n"}}
{"project": "pandas", "bug": 91, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/timedeltas.py", "buggy_commit_id": "5c12d4f", "fixed_commit_id": "cb9a1c7d0319c34a97247973ca96af53ead8033a", "lines_deleted": {"359": "            value = np.array(value, dtype=_TD_DTYPE, copy=False)\n", "360": "        else:\n", "361": "            value = Timedelta(value).asm8.view(_TD_DTYPE)\n", "363": "        return self.values.searchsorted(value, side=side, sorter=sorter)\n"}, "lines_added": {"359": "            if not type(self._data)._is_recognized_dtype(value):\n", "360": "                raise TypeError(\n", "361": "                    \"searchsorted requires compatible dtype or scalar, \"\n", "362": "                    f\"not {type(value).__name__}\"\n", "363": "                )\n", "364": "            value = type(self._data)(value)\n", "365": "            self._data._check_compatible_with(value)\n", "366": "\n", "367": "        elif isinstance(value, self._data._recognized_scalars):\n", "368": "            self._data._check_compatible_with(value)\n", "369": "            value = self._data._scalar_type(value)\n", "370": "\n", "371": "        elif not isinstance(value, TimedeltaArray):\n", "372": "            raise TypeError(\n", "373": "                \"searchsorted requires compatible dtype or scalar, \"\n", "374": "                f\"not {type(value).__name__}\"\n", "375": "            )\n", "377": "        return self._data.searchsorted(value, side=side, sorter=sorter)\n"}}
{"project": "pandas", "bug": 96, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/tseries/offsets.py", "buggy_commit_id": "5e488a0", "fixed_commit_id": "6d67cf9f02dd22cc870fd407f569197512700203", "lines_deleted": {"898": "                skip_bd = BusinessDay(n=bd)\n"}, "lines_added": {"898": "                if isinstance(self, _CustomMixin):  # GH 30593\n", "899": "                    skip_bd = CustomBusinessDay(\n", "900": "                        n=bd,\n", "901": "                        weekmask=self.weekmask,\n", "902": "                        holidays=self.holidays,\n", "903": "                        calendar=self.calendar,\n", "904": "                    )\n", "905": "                else:\n", "906": "                    skip_bd = BusinessDay(n=bd)\n"}}
{"project": "pandas", "bug": 100, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/generic.py", "buggy_commit_id": "8806ed7", "fixed_commit_id": "2b1b3da4c68fdaf9637d12706c5ba3de1a9b20de", "lines_deleted": {"9859": "        rs = rs.loc[~rs.index.duplicated()]\n", "9860": "        rs = rs.reindex_like(data)\n", "9861": "        if freq is None:\n", "9862": "            mask = isna(com.values_from_object(data))\n", "9863": "            np.putmask(rs.values, mask, np.nan)\n"}, "lines_added": {"9859": "        if freq is not None:\n", "9860": "            # Shift method is implemented differently when freq is not None\n", "9861": "            # We want to restore the original index\n", "9862": "            rs = rs.loc[~rs.index.duplicated()]\n", "9863": "            rs = rs.reindex_like(data)\n"}}
{"project": "pandas", "bug": 102, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/internals/construction.py", "buggy_commit_id": "efaadd5", "fixed_commit_id": "765d8db7eef1befef33f4c99d3e206d26e8444c8", "lines_deleted": {"155": "            columns = [0]\n", "156": "        return arrays_to_mgr([values], columns, index, columns, dtype=dtype)\n"}, "lines_added": {"154": "\n", "155": "        if isinstance(values, np.ndarray) and values.ndim > 1:\n", "156": "            # GH#12513 a EA dtype passed with a 2D array, split into\n", "157": "            #  multiple EAs that view the values\n", "158": "            values = [values[:, n] for n in range(values.shape[1])]\n", "159": "        else:\n", "160": "            values = [values]\n", "161": "\n", "163": "            columns = list(range(len(values)))\n", "164": "        return arrays_to_mgr(values, columns, index, columns, dtype=dtype)\n"}}
{"project": "pandas", "bug": 104, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/groupby.py", "buggy_commit_id": "f738581", "fixed_commit_id": "8e9b3eee812b70197341c26c40200d8a1a77ed9c", "lines_deleted": {"1939": "            order = np.roll(list(range(result.index.nlevels)), -1)\n", "1940": "            result = result.reorder_levels(order)\n", "1941": "            result = result.reindex(q, level=-1)\n", "1943": "            # fix order.\n", "1944": "            hi = len(q) * self.ngroups\n", "1945": "            arr = np.arange(0, hi, self.ngroups)\n", "1946": "            arrays = []\n", "1948": "            for i in range(self.ngroups):\n", "1949": "                arr2 = arr + i\n", "1950": "                arrays.append(arr2)\n", "1952": "            indices = np.concatenate(arrays)\n", "1953": "            assert len(indices) == len(result)\n"}, "lines_added": {"1939": "            order = list(range(1, result.index.nlevels)) + [0]\n", "1940": "\n", "1941": "            # temporarily saves the index names\n", "1942": "            index_names = np.array(result.index.names)\n", "1944": "            # set index names to positions to avoid confusion\n", "1945": "            result.index.names = np.arange(len(index_names))\n", "1946": "\n", "1947": "            # place quantiles on the inside\n", "1948": "            result = result.reorder_levels(order)\n", "1950": "            # restore the index names in order\n", "1951": "            result.index.names = index_names[order]\n", "1953": "            # reorder rows to keep things sorted\n", "1954": "            indices = np.arange(len(result)).reshape([len(q), self.ngroups]).T.flatten()\n"}}
{"project": "pandas", "bug": 106, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/base.py", "buggy_commit_id": "114d552", "fixed_commit_id": "e46026ff4669a30192b91e362ce8cdcbc9693870", "lines_deleted": {"4553": "        elif self.is_all_dates:\n"}, "lines_added": {"4553": "        elif self.is_all_dates and target.is_all_dates:  # GH 30399\n"}}
{"project": "pandas", "bug": 107, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/frame.py", "buggy_commit_id": "47ac4b3", "fixed_commit_id": "fa4949f27ccfbc255bb8dbcd5ec5464b8663f1d2", "lines_deleted": {"6759": "            if other.name is None:\n", "6760": "                index = None\n", "6761": "            else:\n", "6762": "                # other must have the same index name as self, otherwise\n", "6763": "                # index name will be reset\n", "6764": "                index = Index([other.name], name=self.index.name)\n", "6765": "\n", "6771": "            other = other.reindex(combined_columns, copy=False)\n", "6772": "            other = DataFrame(\n", "6773": "                other.values.reshape((1, len(other))),\n", "6774": "                index=index,\n", "6775": "                columns=combined_columns,\n", "6777": "            other = other._convert(datetime=True, timedelta=True)\n"}, "lines_added": {"6759": "            index = Index([other.name], name=self.index.name)\n", "6765": "            other = (\n", "6766": "                other.reindex(combined_columns, copy=False)\n", "6767": "                .to_frame()\n", "6768": "                .T.infer_objects()\n", "6769": "                .rename_axis(index.names, copy=False)\n"}}
{"project": "pandas", "bug": 115, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/missing.py", "buggy_commit_id": "ed20822", "fixed_commit_id": "386494d0dc851be9e86b1576f30fa8705df4d47b", "lines_deleted": {"279": "        result[invalid] = np.interp(inds[invalid], inds[valid], yvalues[valid])\n"}, "lines_added": {"279": "        # np.interp requires sorted X values, #21037\n", "280": "        indexer = np.argsort(inds[valid])\n", "281": "        result[invalid] = np.interp(\n", "282": "            inds[invalid], inds[valid][indexer], yvalues[valid][indexer]\n", "283": "        )\n"}}
{"project": "pandas", "bug": 116, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/reshape/merge.py", "buggy_commit_id": "9333e3d", "fixed_commit_id": "c4fa6a52f7737aecda08f6b0f2d6c27476298ae1", "lines_deleted": {"1029": "                left_keys = [self.left.index.values]\n"}, "lines_added": {"1029": "                left_keys = [self.left.index._values]\n"}}
{"project": "pandas", "bug": 117, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/dtypes/missing.py", "buggy_commit_id": "fc100fe", "fixed_commit_id": "f98d2b6587b74c9a640b062d94911b199d962119", "lines_deleted": {"178": "    elif isinstance(obj, (ABCSeries, np.ndarray, ABCIndexClass)):\n"}, "lines_added": {"178": "    elif isinstance(obj, (ABCSeries, np.ndarray, ABCIndexClass, ABCExtensionArray)):\n"}}
{"project": "pandas", "bug": 119, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/reshape/pivot.py", "buggy_commit_id": "3f69d62", "fixed_commit_id": "e0bd4d5dd07cc481cb52de3cf3c7bf199cb2df07", "lines_deleted": {"265": "            margin_dummy[cols] = margin_dummy[cols].astype(dtype)\n"}, "lines_added": {"263": "        # check the result column and leave floats\n", "266": "            margin_dummy[cols] = margin_dummy[cols].apply(\n", "267": "                maybe_downcast_to_dtype, args=(dtype,)\n", "268": "            )\n"}}
{"project": "pandas", "bug": 122, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/internals/managers.py", "buggy_commit_id": "07e6b9d", "fixed_commit_id": "30059081e946a2020d08d49bf4fa7b771d10089a", "lines_deleted": {"1396": "        # canonicalize block order, using a tuple combining the type\n", "1397": "        # name and then mgr_locs because there might be unconsolidated\n", "1401": "            return (block.dtype.name, block.mgr_locs.as_array.tolist())\n"}, "lines_added": {"1396": "        # canonicalize block order, using a tuple combining the mgr_locs\n", "1397": "        # then type name because there might be unconsolidated\n", "1401": "            return (block.mgr_locs.as_array.tolist(), block.dtype.name)\n"}}
{"project": "pandas", "bug": 124, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/strings.py", "buggy_commit_id": "deceebe", "fixed_commit_id": "5a0f7e9e03976020ba52a7473f90cb1c8a4354c0", "lines_deleted": {}, "lines_added": {"3403": "    # force _noarg_wrapper return type with dtype=bool (GH 29624)\n", "3409": "        dtype=bool,\n", "3416": "        dtype=bool,\n", "3423": "        dtype=bool,\n", "3430": "        dtype=bool,\n", "3437": "        dtype=bool,\n", "3444": "        dtype=bool,\n", "3451": "        dtype=bool,\n", "3458": "        dtype=bool,\n", "3465": "        dtype=bool,\n"}}
{"project": "pandas", "bug": 126, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/frame.py", "buggy_commit_id": "29be383", "fixed_commit_id": "e639af2afd18b90ab9063df9c1927ae1f357a418", "lines_deleted": {"6945": "        elif isinstance(other, list) and not isinstance(other[0], DataFrame):\n", "6946": "            other = DataFrame(other)\n", "6947": "            if (self.columns.get_indexer(other.columns) >= 0).all():\n", "6948": "                other = other.reindex(columns=self.columns)\n"}, "lines_added": {"6945": "        elif isinstance(other, list):\n", "6946": "            if not other:\n", "6947": "                pass\n", "6948": "            elif not isinstance(other[0], DataFrame):\n", "6949": "                other = DataFrame(other)\n", "6950": "                if (self.columns.get_indexer(other.columns) >= 0).all():\n", "6951": "                    other = other.reindex(columns=self.columns)\n"}}
{"project": "pandas", "bug": 127, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/generic.py", "buggy_commit_id": "f7d6b58", "fixed_commit_id": "710d82c0d393c9031e469ec0371660d8187b7dc3", "lines_deleted": {}, "lines_added": {"10445": "        rs = rs.loc[~rs.index.duplicated()]\n"}}
{"project": "pandas", "bug": 128, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/io/json/_json.py", "buggy_commit_id": "794a1c2", "fixed_commit_id": "112e6b8d054f9adc1303138533ed6506975f94db", "lines_deleted": {}, "lines_added": {"579": "    if encoding is None:\n", "580": "        encoding = \"utf-8\"\n"}}
{"project": "pandas", "bug": 129, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/arrays/datetimelike.py", "buggy_commit_id": "5b580fb", "fixed_commit_id": "82c9547ddcaf2fd70e00f1368731f14a03bbac88", "lines_deleted": {}, "lines_added": {"1305": "            if lib.is_scalar(other):\n", "1306": "                # i.e. np.datetime64 object\n", "1307": "                return Timestamp(other) - self\n"}}
{"project": "pandas", "bug": 130, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/ops.py", "buggy_commit_id": "7adc14a", "fixed_commit_id": "8efc717e4652e1e4bfbc4455da1d40eb676eed91", "lines_deleted": {}, "lines_added": {"769": "    @cache_readonly\n", "770": "    def recons_codes(self):\n", "771": "        # get unique result indices, and prepend 0 as groupby starts from the first\n", "772": "        return [np.r_[0, np.flatnonzero(self.bins[1:] != self.bins[:-1]) + 1]]\n", "773": "\n"}}
{"project": "pandas", "bug": 133, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/generic.py", "buggy_commit_id": "343544d", "fixed_commit_id": "c983d52e3a3a8a191359814417f375b1dc8b04c1", "lines_deleted": {"7056": "        else:\n", "7057": "            _maybe_transposed_self = self\n"}, "lines_added": {"7050": "        axis = self._get_axis_number(axis)\n", "7051": "\n", "7058": "\n"}}
{"project": "pandas", "bug": 135, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/ops.py", "buggy_commit_id": "0df22b6", "fixed_commit_id": "f41219179de69fed5c2a4b7df821394af1aa6559", "lines_deleted": {"674": "            return self._aggregate_series_pure_python(obj, func)\n"}, "lines_added": {"674": "        except TypeError as err:\n", "675": "            if \"ndarray\" in str(err):\n", "676": "                # raised in libreduction if obj's values is no ndarray\n", "677": "                pass\n", "678": "            else:\n", "679": "                raise\n", "680": "        return self._aggregate_series_pure_python(obj, func)\n"}}
{"project": "pandas", "bug": 139, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/grouper.py", "buggy_commit_id": "7705cd2", "fixed_commit_id": "0ffdbe36f0df732f2700cda4a84be758084ff901", "lines_deleted": {"332": "                    )\n"}, "lines_added": {"332": "                    ),\n", "333": "                    name=self.name,\n"}}
{"project": "pandas", "bug": 140, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/generic.py", "buggy_commit_id": "3b19e1d", "fixed_commit_id": "4375daffeed16531bae3fdaf85324b590d1dcb59", "lines_deleted": {"1915": "        idx for idx in range(len(result.columns)) if is_object_dtype(result.dtypes[idx])\n"}, "lines_added": {"1915": "        idx\n", "1916": "        for idx in range(len(result.columns))\n", "1917": "        if is_object_dtype(result.dtypes.iloc[idx])\n"}}
{"project": "pandas", "bug": 141, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/range.py", "buggy_commit_id": "b298696", "fixed_commit_id": "411dd249e755d7e281603fe3e0ab9e0e48383df9", "lines_deleted": {"390": "            # Work on reversed range for simplicity:\n", "391": "            start, stop, step = (self.stop - self.step, self.start + 1, -self.step)\n"}, "lines_added": {"390": "            # GH 28678: work on reversed range for simplicity\n", "391": "            reverse = self._range[::-1]\n", "392": "            start, stop, step = reverse.start, reverse.stop, reverse.step\n"}}
{"project": "pandas", "bug": 143, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/range.py", "buggy_commit_id": "c13c13b", "fixed_commit_id": "df918becf698741861da0e9b7e810d477b0eb194", "lines_deleted": {"382": "        if not (method is None and tolerance is None and is_list_like(target)):\n", "383": "            return super().get_indexer(target, method=method, tolerance=tolerance)\n"}, "lines_added": {"382": "        if com.any_not_none(method, tolerance, limit) or not is_list_like(target):\n", "383": "            return super().get_indexer(\n", "384": "                target, method=method, tolerance=tolerance, limit=limit\n", "385": "            )\n"}}
{"project": "pandas", "bug": 144, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/plotting/_matplotlib/core.py", "buggy_commit_id": "b106108", "fixed_commit_id": "ffe6cfdbf82d663c3f77567bde11f1666de1df38", "lines_deleted": {"1437": "        ax.set_xticks(self.tick_pos)\n", "1438": "        ax.set_xticklabels(ticklabels)\n"}, "lines_added": {"1437": "\n", "1438": "        if self.xticks is not None:\n", "1439": "            ax.set_xticks(np.array(self.xticks))\n", "1440": "        else:\n", "1441": "            ax.set_xticks(self.tick_pos)\n", "1442": "            ax.set_xticklabels(ticklabels)\n", "1443": "\n"}}
{"project": "pandas", "bug": 145, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/ops/__init__.py", "buggy_commit_id": "3bd222d", "fixed_commit_id": "f08a1e62e31fc11e7e5bd7bec72b7e6d86473423", "lines_deleted": {"500": "        def column_op(a, b):\n", "501": "            return {i: func(a.iloc[:, i], b.iloc[i]) for i in range(len(a.columns))}\n"}, "lines_added": {"500": "        if right.dtype == \"timedelta64[ns]\":\n", "501": "            # ensure we treat NaT values as the correct dtype\n", "502": "            # Note: we do not do this unconditionally as it may be lossy or\n", "503": "            #  expensive for EA dtypes.\n", "504": "            right = np.asarray(right)\n", "505": "\n", "506": "            def column_op(a, b):\n", "507": "                return {i: func(a.iloc[:, i], b[i]) for i in range(len(a.columns))}\n", "508": "\n", "509": "        else:\n", "510": "\n", "511": "            def column_op(a, b):\n", "512": "                return {i: func(a.iloc[:, i], b.iloc[i]) for i in range(len(a.columns))}\n"}}
{"project": "pandas", "bug": 148, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/apply.py", "buggy_commit_id": "4ac7f9d", "fixed_commit_id": "95edcf1cbee630e42daca0404c44d8128ea156fb", "lines_deleted": {"204": "\n", "207": "            EMPTY_SERIES = Series([])\n", "209": "                r = self.f(EMPTY_SERIES, *self.args, **self.kwds)\n", "216": "            return self.obj._constructor_sliced(np.nan, index=self.agg_axis)\n"}, "lines_added": {"207": "                r = self.f(Series([]))\n", "214": "            if len(self.agg_axis):\n", "215": "                r = self.f(Series([]))\n", "216": "            else:\n", "217": "                r = np.nan\n", "218": "\n", "219": "            return self.obj._constructor_sliced(r, index=self.agg_axis)\n"}}
{"project": "pandas", "bug": 150, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/dtypes/missing.py", "buggy_commit_id": "54e9b75", "fixed_commit_id": "d38627b5889db3f663cad339fe8f995af823b76b", "lines_deleted": {"447": "                if left_value != right_value:\n"}, "lines_added": {"447": "                if np.any(left_value != right_value):\n"}}
{"project": "pandas", "bug": 151, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/arrays/numpy_.py", "buggy_commit_id": "6110608", "fixed_commit_id": "5a227a410c520ceec2d94369a44e2ab774a40dc3", "lines_deleted": {"237": "        values = self._ndarray\n", "238": "        t = np.result_type(value, values)\n", "239": "        if t != self._ndarray.dtype:\n", "240": "            values = values.astype(t, casting=\"safe\")\n", "241": "            values[key] = value\n", "242": "            self._dtype = PandasDtype(t)\n", "243": "            self._ndarray = values\n", "244": "        else:\n", "245": "            self._ndarray[key] = value\n"}, "lines_added": {"237": "        value = np.asarray(value, dtype=self._ndarray.dtype)\n", "238": "        self._ndarray[key] = value\n"}}
{"project": "pandas", "bug": 152, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/series.py", "buggy_commit_id": "eb8cce0", "fixed_commit_id": "f61deb962ac0853595a43ad024c482b018d1792b", "lines_deleted": {"2732": "            to_concat = [self] + to_append\n"}, "lines_added": {"2732": "            to_concat = [self]\n", "2733": "            to_concat.extend(to_append)\n"}}
{"project": "pandas", "bug": 155, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/window/rolling.py", "buggy_commit_id": "4252ab7", "fixed_commit_id": "0bde7cedf46209a9fd4fa8c7f9fbce8b49aa78cd", "lines_deleted": {"1655": "            return self.obj.index\n"}, "lines_added": {"1655": "            if self.axis == 0:\n", "1656": "                return self.obj.index\n", "1657": "            elif self.axis == 1:\n", "1658": "                return self.obj.columns\n"}}
{"project": "pandas", "bug": 158, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/series.py", "buggy_commit_id": "a76df79", "fixed_commit_id": "b1c871ce4b5e76b3cffe1ebd4216d36379872352", "lines_deleted": {"4167": "        non_mapping = is_scalar(index) or (\n", "4168": "            is_list_like(index) and not is_dict_like(index)\n", "4169": "        )\n", "4170": "        if non_mapping:\n", "4172": "        return super().rename(index=index, **kwargs)\n"}, "lines_added": {"4167": "        if callable(index) or is_dict_like(index):\n", "4168": "            return super().rename(index=index, **kwargs)\n", "4169": "        else:\n"}}
{"project": "pandas", "bug": 160, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/computation/expressions.py", "buggy_commit_id": "489d1ff", "fixed_commit_id": "fb62fcf91c874e9c24fa83693c4e6e613f35f864", "lines_deleted": {"78": "\n", "82": "                if hasattr(o, \"dtypes\"):\n", "87": "                elif isinstance(o, np.ndarray):\n"}, "lines_added": {"81": "                # Series implements dtypes, check for dimension count as well\n", "82": "                if hasattr(o, \"dtypes\") and o.ndim > 1:\n", "87": "                # ndarray and Series Case\n", "88": "                elif hasattr(o, \"dtype\"):\n"}}
{"project": "pandas", "bug": 161, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/arrays/categorical.py", "buggy_commit_id": "a818281", "fixed_commit_id": "ca5198a6daa7757e398112a17ccadc9e7d078d96", "lines_deleted": {"1842": "                indexer = np.where(values_codes != -1)\n", "1843": "                codes[indexer] = values_codes[values_codes != -1]\n"}, "lines_added": {"1842": "                indexer = np.where(codes == -1)\n", "1843": "                codes[indexer] = values_codes[indexer]\n"}}
{"project": "pandas", "bug": 163, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/window.py", "buggy_commit_id": "61819ab", "fixed_commit_id": "f669f94a186ea444cc771985a915e90eecf218a9", "lines_deleted": {"248": "        # Always convert inf to nan\n", "249": "        values[np.isinf(values)] = np.NaN\n"}, "lines_added": {"248": "        # Convert inf to nan for C funcs\n", "249": "        inf = np.isinf(values)\n", "250": "        if inf.any():\n", "251": "            values = np.where(inf, np.nan, values)\n"}}
{"project": "pandas", "bug": 164, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/tools/datetimes.py", "buggy_commit_id": "ac69333", "fixed_commit_id": "61819aba14dd7b3996336aaed84d07cd936d92b5", "lines_deleted": {}, "lines_added": {"336": "        elif tz:\n", "337": "            # DatetimeArray, DatetimeIndex\n", "338": "            return arg.tz_localize(tz)\n"}}
{"project": "pandas", "bug": 166, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/frame.py", "buggy_commit_id": "4056ded", "fixed_commit_id": "d44fb07063e9a8bd8a209ddce35b40d8a56c8d02", "lines_deleted": {"7212": "                    res = concat(frames, axis=1, join=\"outer\", verify_integrity=True)\n", "7215": "                    return concat(frames, axis=1, join=how, verify_integrity=True)\n"}, "lines_added": {"7212": "                    res = concat(\n", "7213": "                        frames, axis=1, join=\"outer\", verify_integrity=True, sort=sort\n", "7214": "                    )\n", "7217": "                    return concat(\n", "7218": "                        frames, axis=1, join=how, verify_integrity=True, sort=sort\n", "7219": "                    )\n"}}
{"project": "pandas", "bug": 168, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/grouper.py", "buggy_commit_id": "2de4fbb", "fixed_commit_id": "1fa1ad91b29c5474cbb86cbcbcdcd50537cad0ae", "lines_deleted": {"608": "                    obj._check_label_or_level_ambiguity(gpr)\n", "611": "            elif obj._is_level_reference(gpr):\n"}, "lines_added": {"608": "                    obj._check_label_or_level_ambiguity(gpr, axis=axis)\n", "611": "            elif obj._is_level_reference(gpr, axis=axis):\n"}}
{"project": "pandas", "bug": 169, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/frame.py", "buggy_commit_id": "4d9016e", "fixed_commit_id": "01babb590cb15ef5c6e9ad890ea580a5112e6999", "lines_deleted": {}, "lines_added": {"8217": "        if len(data.columns) == 0:\n", "8218": "            # GH#23925 _get_numeric_data may have dropped all columns\n", "8219": "            cols = Index([], name=self.columns.name)\n", "8220": "            if is_list_like(q):\n", "8221": "                return self._constructor([], index=q, columns=cols)\n", "8222": "            return self._constructor_sliced([], index=cols, name=q)\n", "8223": "\n"}}
{"project": "pandas", "bug": 1, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/dtypes/common.py", "buggy_commit_id": "3fd150c", "fixed_commit_id": "e41ee47a90bb1d8a1fa28fcefcd45ed8ef5cb946", "lines_deleted": {"601": "        is_excluded_checks = (is_period_dtype, is_interval_dtype)\n"}, "lines_added": {"601": "        is_excluded_checks = (is_period_dtype, is_interval_dtype, is_categorical_dtype)\n"}}
{"project": "pandas", "bug": 4, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/base.py", "buggy_commit_id": "cca710b", "fixed_commit_id": "2250ddfaff92abaff20a5bcd78315f5d4bd44981", "lines_deleted": {"3530": "            return multi_join_idx, lidx, ridx\n"}, "lines_added": {"3530": "            if return_indexers:\n", "3531": "                return multi_join_idx, lidx, ridx\n", "3532": "            else:\n", "3533": "                return multi_join_idx\n"}}
{"project": "pandas", "bug": 6, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/grouper.py", "buggy_commit_id": "21a10d1", "fixed_commit_id": "8cd8ed3657e52ad9f67e17b7f5c20f7340ab6a2c", "lines_deleted": {"756": "        except (KeyError, IndexError):\n"}, "lines_added": {"756": "        except (KeyError, IndexError, ValueError):\n", "757": "            # TODO: ValueError: Given date string not likely a datetime.\n", "758": "            # should be KeyError?\n"}}
{"project": "pandas", "bug": 7, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/base.py", "buggy_commit_id": "27f365d", "fixed_commit_id": "64336ff8414f8977ff94adb9a5bc000a3a4ef454", "lines_deleted": {"3075": "        target = np.asarray(target)\n", "3076": "        left_distances = abs(self.values[left_indexer] - target)\n", "3077": "        right_distances = abs(self.values[right_indexer] - target)\n"}, "lines_added": {"3075": "        left_distances = np.abs(self[left_indexer] - target)\n", "3076": "        right_distances = np.abs(self[right_indexer] - target)\n"}}
{"project": "pandas", "bug": 8, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/internals/blocks.py", "buggy_commit_id": "ddbeca6", "fixed_commit_id": "d09f20e29bdfa82f5efc071986e2633001d552f6", "lines_deleted": {"730": "        if not mask.any():\n", "731": "            if inplace:\n", "732": "                return [self]\n", "733": "            return [self.copy()]\n", "734": "\n"}, "lines_added": {}}
{"project": "pandas", "bug": 10, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/internals/blocks.py", "buggy_commit_id": "de8ca78", "fixed_commit_id": "e1ee2b0679e5999c993a787606d30e75faaba7a2", "lines_deleted": {"1601": "        if isinstance(new, np.ndarray) and len(new) == len(mask):\n"}, "lines_added": {"1601": "        if isinstance(new, (np.ndarray, ExtensionArray)) and len(new) == len(mask):\n"}}
{"project": "pandas", "bug": 11, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/reshape/concat.py", "buggy_commit_id": "1c88e6a", "fixed_commit_id": "b7f061c3d24df943e16918ad3932e767f5639a38", "lines_deleted": {"621": "                try:\n", "622": "                    i = level.get_loc(key)\n", "623": "                except KeyError as err:\n", "624": "                    raise ValueError(f\"Key {key} not in level {level}\") from err\n"}, "lines_added": {"621": "                mask = level == key\n", "622": "                if not mask.any():\n", "623": "                    raise ValueError(f\"Key {key} not in level {level}\")\n", "624": "                i = np.nonzero(level == key)[0][0]\n"}}
{"project": "pandas", "bug": 19, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexing.py", "buggy_commit_id": "17dc6b0", "fixed_commit_id": "c6a1638bcd99df677a8f76f036c0b30027eb243c", "lines_deleted": {"1084": "            # convert various list-like indexers\n", "1085": "            # to a list of keys\n", "1086": "            # we will use the *values* of the object\n", "1087": "            # and NOT the index if its a PandasObject\n", "1088": "            if isinstance(labels, ABCMultiIndex):\n", "1089": "\n", "1090": "                if isinstance(key, (ABCSeries, np.ndarray)) and key.ndim <= 1:\n", "1091": "                    # Series, or 0,1 ndim ndarray\n", "1092": "                    # GH 14730\n", "1093": "                    key = list(key)\n", "1094": "                elif isinstance(key, ABCDataFrame):\n", "1095": "                    # GH 15438\n", "1096": "                    raise NotImplementedError(\n", "1097": "                        \"Indexing a MultiIndex with a \"\n", "1098": "                        \"DataFrame key is not \"\n", "1099": "                        \"implemented\"\n", "1100": "                    )\n", "1101": "                elif hasattr(key, \"ndim\") and key.ndim > 1:\n", "1102": "                    raise NotImplementedError(\n", "1103": "                        \"Indexing a MultiIndex with a \"\n", "1104": "                        \"multidimensional key is not \"\n", "1105": "                        \"implemented\"\n", "1106": "                    )\n", "1107": "\n", "1108": "                if (\n", "1109": "                    not isinstance(key, tuple)\n", "1110": "                    and len(key)\n", "1111": "                    and not isinstance(key[0], tuple)\n", "1112": "                ):\n", "1113": "                    key = tuple([key])\n", "1114": "\n"}, "lines_added": {}}
{"project": "pandas", "bug": 21, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/series.py", "buggy_commit_id": "4071c3b", "fixed_commit_id": "56d0934092b8296c90f940c56fce3b731e0de81b", "lines_deleted": {"951": "        if isinstance(key, list):\n", "952": "            # handle the dup indexing case GH#4246\n", "953": "            return self.loc[key]\n", "954": "\n", "955": "        return self.reindex(key)\n"}, "lines_added": {"951": "        # handle the dup indexing case GH#4246\n", "952": "        return self.loc[key]\n"}}
{"project": "pandas", "bug": 25, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/arrays/datetimes.py", "buggy_commit_id": "ecc3b2e", "fixed_commit_id": "73d614403759831814ef7ab83ef1e4aaa645b33a", "lines_deleted": {"1279": "        sarray = fields.build_isocalendar_sarray(self.asi8)\n"}, "lines_added": {"1279": "        if self.tz is not None and not timezones.is_utc(self.tz):\n", "1280": "            values = self._local_timestamps()\n", "1281": "        else:\n", "1282": "            values = self.asi8\n", "1283": "        sarray = fields.build_isocalendar_sarray(values)\n"}}
{"project": "pandas", "bug": 28, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/strings.py", "buggy_commit_id": "40fd73a", "fixed_commit_id": "ef9b9387c88cf12b20dd8656dfedfc236e0f3352", "lines_deleted": {"2299": "            return [Series(others._values, index=others)]\n"}, "lines_added": {"2299": "            return [Series(others._values, index=idx)]\n"}}
{"project": "pandas", "bug": 29, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/arrays/interval.py", "buggy_commit_id": "6e3537d", "fixed_commit_id": "4334482c348c3adc69683c8332295e22092c1b57", "lines_deleted": {"548": "        if needs_float_conversion:\n", "549": "            left = left.astype(\"float\")\n", "550": "        left.values[key] = value_left\n", "554": "        if needs_float_conversion:\n", "555": "            right = right.astype(\"float\")\n", "556": "        right.values[key] = value_right\n"}, "lines_added": {"544": "        if needs_float_conversion:\n", "545": "            raise ValueError(\"Cannot set float NaN to integer-backed IntervalArray\")\n", "546": "\n", "548": "\n", "552": "        left._values[key] = value_left\n", "556": "        right._values[key] = value_right\n"}}
{"project": "pandas", "bug": 30, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/io/json/_json.py", "buggy_commit_id": "60d6f28", "fixed_commit_id": "d857cd12b3ae11be788ba96015383a5b7464ecc9", "lines_deleted": {"984": "            except (ValueError, OverflowError):\n"}, "lines_added": {"984": "            except (ValueError, OverflowError, TypeError):\n"}}
{"project": "pandas", "bug": 33, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/arrays/integer.py", "buggy_commit_id": "03dacc1", "fixed_commit_id": "89d8aba76a2bb930e520590d145e3d67b2046e39", "lines_deleted": {"501": "        data[self._mask] = data.min() - 1\n"}, "lines_added": {"501": "        if self._mask.any():\n", "502": "            data[self._mask] = data.min() - 1\n"}}
{"project": "pandas", "bug": 34, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/resample.py", "buggy_commit_id": "02a134b", "fixed_commit_id": "cf9ec7854ecb80709804178e769425f02ddf8c64", "lines_deleted": {"1430": "            ambiguous=\"infer\",\n"}, "lines_added": {"1424": "        # GH 25758: If DST lands at midnight (e.g. 'America/Havana'), user feedback\n", "1425": "        # has noted that ambiguous=True provides the most sensible result\n", "1432": "            ambiguous=True,\n"}}
{"project": "pandas", "bug": 35, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/period.py", "buggy_commit_id": "a7dd3ea", "fixed_commit_id": "f10ec595eccaf86a9f52fe9683e1181a51ba675b", "lines_deleted": {"326": "        # To avoid a reference cycle, pass a weakref of self to _engine_type.\n", "327": "        period = weakref.ref(self)\n"}, "lines_added": {"326": "        # To avoid a reference cycle, pass a weakref of self._values to _engine_type.\n", "327": "        period = weakref.ref(self._values)\n"}}
{"project": "pandas", "bug": 39, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/ops/methods.py", "buggy_commit_id": "8a5f291", "fixed_commit_id": "a3097b5bd172e76dd3524eb5dbe18b6b4c22df50", "lines_deleted": {"95": "\n"}, "lines_added": {"95": "            # Delete cacher\n", "96": "            self._reset_cacher()\n"}}
{"project": "pandas", "bug": 48, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/generic.py", "buggy_commit_id": "9bc3ee0", "fixed_commit_id": "9e7cb7c102655d0ba92d2561c178da9254d5cef5", "lines_deleted": {"1085": "                    except ValueError:\n"}, "lines_added": {"1085": "                    except (ValueError, TypeError):\n"}}
{"project": "pandas", "bug": 49, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/strings.py", "buggy_commit_id": "113c255", "fixed_commit_id": "37659d47a685ecc5f5117aa56526ece0106c6d0f", "lines_deleted": {}, "lines_added": {"777": "            if x is libmissing.NA:\n", "778": "                return x\n"}}
{"project": "pandas", "bug": 50, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/arrays/categorical.py", "buggy_commit_id": "ebf9668", "fixed_commit_id": "821aa25c9039e72da9a7b236cf2f9e7d549cbb7b", "lines_deleted": {"105": "                ret[mask] = False\n"}, "lines_added": {"105": "                if opname == \"__ne__\":\n", "106": "                    ret[(self._codes == -1) & (other_codes == -1)] = True\n", "107": "                else:\n", "108": "                    ret[mask] = False\n"}}
{"project": "pandas", "bug": 52, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/generic.py", "buggy_commit_id": "20a84a5", "fixed_commit_id": "7017599821e02ba95282848c12f7d3b5f2ce670a", "lines_deleted": {"593": "        # GH 27951\n", "594": "        # temporary fix while we wait for NumPy bug 12629 to be fixed\n", "595": "        val[isna(val)] = np.datetime64(\"NaT\")\n", "596": "\n", "597": "        try:\n", "598": "            sorter = np.lexsort((val, ids))\n", "599": "        except TypeError:  # catches object dtypes\n", "600": "            msg = f\"val.dtype must be object, got {val.dtype}\"\n", "601": "            assert val.dtype == object, msg\n", "602": "            val, _ = algorithms.factorize(val, sort=False)\n", "603": "            sorter = np.lexsort((val, ids))\n", "604": "            _isna = lambda a: a == -1\n", "605": "        else:\n", "606": "            _isna = isna\n", "607": "\n", "608": "        ids, val = ids[sorter], val[sorter]\n", "613": "        inc = np.r_[1, val[1:] != val[:-1]]\n", "616": "        mask = _isna(val)\n"}, "lines_added": {"593": "        codes, _ = algorithms.factorize(val, sort=False)\n", "594": "        sorter = np.lexsort((codes, ids))\n", "595": "        codes = codes[sorter]\n", "596": "        ids = ids[sorter]\n", "601": "        inc = np.r_[1, codes[1:] != codes[:-1]]\n", "604": "        mask = codes == -1\n"}}
{"project": "pandas", "bug": 56, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/frame.py", "buggy_commit_id": "9e69040", "fixed_commit_id": "dafec63f2e138d0451dae5b37edea2e83f9adc8a", "lines_deleted": {"2624": "            series = self._iget_item_cache(col)\n", "2625": "            return com.maybe_box_datetimelike(series._values[index])\n"}, "lines_added": {"2624": "            series = self._ixs(col, axis=1)\n", "2625": "            return series._values[index]\n"}}
{"project": "pandas", "bug": 58, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/arrays/categorical.py", "buggy_commit_id": "634a41f", "fixed_commit_id": "16684f2affaf901b42a12e50f9c29e7c034ad7ea", "lines_deleted": {"646": "        codes = np.asarray(codes)  # #21767\n"}, "lines_added": {"646": "        if is_extension_array_dtype(codes) and is_integer_dtype(codes):\n", "647": "            # Avoid the implicit conversion of Int to object\n", "648": "            if isna(codes).any():\n", "649": "                raise ValueError(\"codes cannot contain NA values\")\n", "650": "            codes = codes.to_numpy(dtype=np.int64)\n", "651": "        else:\n", "652": "            codes = np.asarray(codes)\n"}}
{"project": "pandas", "bug": 59, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/window/rolling.py", "buggy_commit_id": "292a993", "fixed_commit_id": "8dd9fabd2ad9104e747084437b9ad436d5be087a", "lines_deleted": {"1784": "        window = self._get_window(other)\n"}, "lines_added": {"1784": "        window = self._get_window(other) if not self.is_freq_type else self.win_freq\n"}}
{"project": "pandas", "bug": 60, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/window/rolling.py", "buggy_commit_id": "6bc2dca", "fixed_commit_id": "fcf7258c19b0a6a712f33fb0bcefdae426be7e7f", "lines_deleted": {"1298": "        # name=func for WindowGroupByMixin._apply\n"}, "lines_added": {"1298": "        # name=func & raw=raw for WindowGroupByMixin._apply\n", "1305": "            raw=raw,\n"}}
{"project": "pandas", "bug": 61, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/series.py", "buggy_commit_id": "74dad82", "fixed_commit_id": "f7e2b74f1bcc1d1cbebbc42481e33f0abb2843dc", "lines_deleted": {"921": "                return self._get_values(key)\n"}, "lines_added": {"921": "                return self.iloc[key]\n"}}
{"project": "pandas", "bug": 63, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexing.py", "buggy_commit_id": "e5c65bf", "fixed_commit_id": "e1ca66bae38b8026079dfcbe0edad5f278546608", "lines_deleted": {"2089": "        for ax, i in zip(self.obj.axes, key):\n", "2090": "            if ax.is_integer():\n", "2091": "                if not is_integer(i):\n", "2092": "                    raise ValueError(\n", "2093": "                        \"At based indexing on an integer index \"\n", "2094": "                        \"can only have integer indexers\"\n", "2095": "                    )\n", "2096": "            else:\n", "2097": "                if is_integer(i) and not (ax.holds_integer() or ax.is_floating()):\n", "2098": "                    raise ValueError(\n", "2099": "                        \"At based indexing on an non-integer \"\n", "2100": "                        \"index can only have non-integer \"\n", "2101": "                        \"indexers\"\n", "2102": "                    )\n", "2103": "        return key\n"}, "lines_added": {"2089": "        lkey = list(key)\n", "2090": "        for n, (ax, i) in enumerate(zip(self.obj.axes, key)):\n", "2091": "            lkey[n] = ax._convert_scalar_indexer(i, kind=\"loc\")\n", "2092": "\n", "2093": "        return tuple(lkey)\n"}}
{"project": "pandas", "bug": 64, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/io/formats/excel.py", "buggy_commit_id": "31c1856", "fixed_commit_id": "d0c84ce57d23a409169daf7232ec7681e42363fe", "lines_deleted": {"405": "            self.df = df\n"}, "lines_added": {"405": "            self.df = df.reindex(columns=cols)\n"}}
{"project": "pandas", "bug": 69, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexing.py", "buggy_commit_id": "426d445", "fixed_commit_id": "948f95756c79543bb089a94a85e73011a3730b2d", "lines_deleted": {"2126": "                if is_integer(i) and not ax.holds_integer():\n"}, "lines_added": {"2126": "                if is_integer(i) and not (ax.holds_integer() or ax.is_floating()):\n"}}
{"project": "pandas", "bug": 74, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/timedeltas.py", "buggy_commit_id": "9a211aa", "fixed_commit_id": "839e7f1416148caff518a5b75327a2480a2bbbb4", "lines_deleted": {"165": "        if isinstance(data, TimedeltaArray):\n"}, "lines_added": {"165": "        if isinstance(data, TimedeltaArray) and freq is None:\n"}}
{"project": "pandas", "bug": 76, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/io/json/_json.py", "buggy_commit_id": "4da554f", "fixed_commit_id": "47922d3b00edfc264f73b1484589734bbd077c11", "lines_deleted": {"944": "            except (TypeError, ValueError):\n"}, "lines_added": {"944": "            except (TypeError, ValueError, OverflowError):\n"}}
{"project": "pandas", "bug": 78, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/frame.py", "buggy_commit_id": "f5aa542", "fixed_commit_id": "bd6b395a1e8fb7d099fa17a0e24f8fe3b628822c", "lines_deleted": {"8015": "            result = Series(result, index=labels)\n"}, "lines_added": {"8015": "            result = self._constructor_sliced(result, index=labels)\n"}}
{"project": "pandas", "bug": 82, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/internals/concat.py", "buggy_commit_id": "6f395ad", "fixed_commit_id": "e83a6bddac8c89b144dfe0783594dd332c5b3030", "lines_deleted": {"352": "        return np.dtype(\"M8[ns]\"), tslibs.iNaT\n"}, "lines_added": {"352": "        return np.dtype(\"M8[ns]\"), np.datetime64(\"NaT\", \"ns\")\n"}}
{"project": "pandas", "bug": 85, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/multi.py", "buggy_commit_id": "f1aaf62", "fixed_commit_id": "29edd119d31a9ee7d4f89e8c1dc8af96f0c19dce", "lines_deleted": {}, "lines_added": {"1258": "        else:\n", "1259": "            # break references back to us so that setting the name\n", "1260": "            # on the output of a groupby doesn't reflect back here.\n", "1261": "            level_index = level_index.copy()\n"}}
{"project": "pandas", "bug": 86, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/reshape/pivot.py", "buggy_commit_id": "55cfabb", "fixed_commit_id": "f792d8c50ee456aa8aa2ae406d8e6b8843f45614", "lines_deleted": {}, "lines_added": {"431": "    if columns is None:\n", "432": "        raise TypeError(\"pivot() missing 1 required argument: 'columns'\")\n", "433": "\n"}}
{"project": "pandas", "bug": 88, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/reshape/pivot.py", "buggy_commit_id": "698920f", "fixed_commit_id": "586bcb16023ae870b0ad7769f6d9077903705486", "lines_deleted": {"119": "    if table.index.nlevels > 1:\n"}, "lines_added": {"117": "\n", "120": "    # GH17038, this check should only happen if index is defined (not None)\n", "121": "    if table.index.nlevels > 1 and index:\n"}}
{"project": "pandas", "bug": 89, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/reshape/reshape.py", "buggy_commit_id": "0dc317f", "fixed_commit_id": "feaa5033b7810f7775fd4806c27b2f9f1e9b5051", "lines_deleted": {"360": "                result = result.unstack(val)\n"}, "lines_added": {"360": "                result = result.unstack(val, fill_value=fill_value)\n"}}
{"project": "pandas", "bug": 91, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/timedeltas.py", "buggy_commit_id": "5c12d4f", "fixed_commit_id": "cb9a1c7d0319c34a97247973ca96af53ead8033a", "lines_deleted": {"359": "            value = np.array(value, dtype=_TD_DTYPE, copy=False)\n", "360": "        else:\n", "361": "            value = Timedelta(value).asm8.view(_TD_DTYPE)\n", "363": "        return self.values.searchsorted(value, side=side, sorter=sorter)\n"}, "lines_added": {"359": "            if not type(self._data)._is_recognized_dtype(value):\n", "360": "                raise TypeError(\n", "361": "                    \"searchsorted requires compatible dtype or scalar, \"\n", "362": "                    f\"not {type(value).__name__}\"\n", "363": "                )\n", "364": "            value = type(self._data)(value)\n", "365": "            self._data._check_compatible_with(value)\n", "366": "\n", "367": "        elif isinstance(value, self._data._recognized_scalars):\n", "368": "            self._data._check_compatible_with(value)\n", "369": "            value = self._data._scalar_type(value)\n", "370": "\n", "371": "        elif not isinstance(value, TimedeltaArray):\n", "372": "            raise TypeError(\n", "373": "                \"searchsorted requires compatible dtype or scalar, \"\n", "374": "                f\"not {type(value).__name__}\"\n", "375": "            )\n", "377": "        return self._data.searchsorted(value, side=side, sorter=sorter)\n"}}
{"project": "pandas", "bug": 96, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/tseries/offsets.py", "buggy_commit_id": "5e488a0", "fixed_commit_id": "6d67cf9f02dd22cc870fd407f569197512700203", "lines_deleted": {"898": "                skip_bd = BusinessDay(n=bd)\n"}, "lines_added": {"898": "                if isinstance(self, _CustomMixin):  # GH 30593\n", "899": "                    skip_bd = CustomBusinessDay(\n", "900": "                        n=bd,\n", "901": "                        weekmask=self.weekmask,\n", "902": "                        holidays=self.holidays,\n", "903": "                        calendar=self.calendar,\n", "904": "                    )\n", "905": "                else:\n", "906": "                    skip_bd = BusinessDay(n=bd)\n"}}
{"project": "pandas", "bug": 100, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/generic.py", "buggy_commit_id": "8806ed7", "fixed_commit_id": "2b1b3da4c68fdaf9637d12706c5ba3de1a9b20de", "lines_deleted": {"9859": "        rs = rs.loc[~rs.index.duplicated()]\n", "9860": "        rs = rs.reindex_like(data)\n", "9861": "        if freq is None:\n", "9862": "            mask = isna(com.values_from_object(data))\n", "9863": "            np.putmask(rs.values, mask, np.nan)\n"}, "lines_added": {"9859": "        if freq is not None:\n", "9860": "            # Shift method is implemented differently when freq is not None\n", "9861": "            # We want to restore the original index\n", "9862": "            rs = rs.loc[~rs.index.duplicated()]\n", "9863": "            rs = rs.reindex_like(data)\n"}}
{"project": "pandas", "bug": 102, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/internals/construction.py", "buggy_commit_id": "efaadd5", "fixed_commit_id": "765d8db7eef1befef33f4c99d3e206d26e8444c8", "lines_deleted": {"155": "            columns = [0]\n", "156": "        return arrays_to_mgr([values], columns, index, columns, dtype=dtype)\n"}, "lines_added": {"154": "\n", "155": "        if isinstance(values, np.ndarray) and values.ndim > 1:\n", "156": "            # GH#12513 a EA dtype passed with a 2D array, split into\n", "157": "            #  multiple EAs that view the values\n", "158": "            values = [values[:, n] for n in range(values.shape[1])]\n", "159": "        else:\n", "160": "            values = [values]\n", "161": "\n", "163": "            columns = list(range(len(values)))\n", "164": "        return arrays_to_mgr(values, columns, index, columns, dtype=dtype)\n"}}
{"project": "pandas", "bug": 104, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/groupby.py", "buggy_commit_id": "f738581", "fixed_commit_id": "8e9b3eee812b70197341c26c40200d8a1a77ed9c", "lines_deleted": {"1939": "            order = np.roll(list(range(result.index.nlevels)), -1)\n", "1940": "            result = result.reorder_levels(order)\n", "1941": "            result = result.reindex(q, level=-1)\n", "1943": "            # fix order.\n", "1944": "            hi = len(q) * self.ngroups\n", "1945": "            arr = np.arange(0, hi, self.ngroups)\n", "1946": "            arrays = []\n", "1948": "            for i in range(self.ngroups):\n", "1949": "                arr2 = arr + i\n", "1950": "                arrays.append(arr2)\n", "1952": "            indices = np.concatenate(arrays)\n", "1953": "            assert len(indices) == len(result)\n"}, "lines_added": {"1939": "            order = list(range(1, result.index.nlevels)) + [0]\n", "1940": "\n", "1941": "            # temporarily saves the index names\n", "1942": "            index_names = np.array(result.index.names)\n", "1944": "            # set index names to positions to avoid confusion\n", "1945": "            result.index.names = np.arange(len(index_names))\n", "1946": "\n", "1947": "            # place quantiles on the inside\n", "1948": "            result = result.reorder_levels(order)\n", "1950": "            # restore the index names in order\n", "1951": "            result.index.names = index_names[order]\n", "1953": "            # reorder rows to keep things sorted\n", "1954": "            indices = np.arange(len(result)).reshape([len(q), self.ngroups]).T.flatten()\n"}}
{"project": "pandas", "bug": 106, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/base.py", "buggy_commit_id": "114d552", "fixed_commit_id": "e46026ff4669a30192b91e362ce8cdcbc9693870", "lines_deleted": {"4553": "        elif self.is_all_dates:\n"}, "lines_added": {"4553": "        elif self.is_all_dates and target.is_all_dates:  # GH 30399\n"}}
{"project": "pandas", "bug": 107, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/frame.py", "buggy_commit_id": "47ac4b3", "fixed_commit_id": "fa4949f27ccfbc255bb8dbcd5ec5464b8663f1d2", "lines_deleted": {"6759": "            if other.name is None:\n", "6760": "                index = None\n", "6761": "            else:\n", "6762": "                # other must have the same index name as self, otherwise\n", "6763": "                # index name will be reset\n", "6764": "                index = Index([other.name], name=self.index.name)\n", "6765": "\n", "6771": "            other = other.reindex(combined_columns, copy=False)\n", "6772": "            other = DataFrame(\n", "6773": "                other.values.reshape((1, len(other))),\n", "6774": "                index=index,\n", "6775": "                columns=combined_columns,\n", "6777": "            other = other._convert(datetime=True, timedelta=True)\n"}, "lines_added": {"6759": "            index = Index([other.name], name=self.index.name)\n", "6765": "            other = (\n", "6766": "                other.reindex(combined_columns, copy=False)\n", "6767": "                .to_frame()\n", "6768": "                .T.infer_objects()\n", "6769": "                .rename_axis(index.names, copy=False)\n"}}
{"project": "pandas", "bug": 115, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/missing.py", "buggy_commit_id": "ed20822", "fixed_commit_id": "386494d0dc851be9e86b1576f30fa8705df4d47b", "lines_deleted": {"279": "        result[invalid] = np.interp(inds[invalid], inds[valid], yvalues[valid])\n"}, "lines_added": {"279": "        # np.interp requires sorted X values, #21037\n", "280": "        indexer = np.argsort(inds[valid])\n", "281": "        result[invalid] = np.interp(\n", "282": "            inds[invalid], inds[valid][indexer], yvalues[valid][indexer]\n", "283": "        )\n"}}
{"project": "pandas", "bug": 116, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/reshape/merge.py", "buggy_commit_id": "9333e3d", "fixed_commit_id": "c4fa6a52f7737aecda08f6b0f2d6c27476298ae1", "lines_deleted": {"1029": "                left_keys = [self.left.index.values]\n"}, "lines_added": {"1029": "                left_keys = [self.left.index._values]\n"}}
{"project": "pandas", "bug": 117, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/dtypes/missing.py", "buggy_commit_id": "fc100fe", "fixed_commit_id": "f98d2b6587b74c9a640b062d94911b199d962119", "lines_deleted": {"178": "    elif isinstance(obj, (ABCSeries, np.ndarray, ABCIndexClass)):\n"}, "lines_added": {"178": "    elif isinstance(obj, (ABCSeries, np.ndarray, ABCIndexClass, ABCExtensionArray)):\n"}}
{"project": "pandas", "bug": 119, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/reshape/pivot.py", "buggy_commit_id": "3f69d62", "fixed_commit_id": "e0bd4d5dd07cc481cb52de3cf3c7bf199cb2df07", "lines_deleted": {"265": "            margin_dummy[cols] = margin_dummy[cols].astype(dtype)\n"}, "lines_added": {"263": "        # check the result column and leave floats\n", "266": "            margin_dummy[cols] = margin_dummy[cols].apply(\n", "267": "                maybe_downcast_to_dtype, args=(dtype,)\n", "268": "            )\n"}}
{"project": "pandas", "bug": 122, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/internals/managers.py", "buggy_commit_id": "07e6b9d", "fixed_commit_id": "30059081e946a2020d08d49bf4fa7b771d10089a", "lines_deleted": {"1396": "        # canonicalize block order, using a tuple combining the type\n", "1397": "        # name and then mgr_locs because there might be unconsolidated\n", "1401": "            return (block.dtype.name, block.mgr_locs.as_array.tolist())\n"}, "lines_added": {"1396": "        # canonicalize block order, using a tuple combining the mgr_locs\n", "1397": "        # then type name because there might be unconsolidated\n", "1401": "            return (block.mgr_locs.as_array.tolist(), block.dtype.name)\n"}}
{"project": "pandas", "bug": 124, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/strings.py", "buggy_commit_id": "deceebe", "fixed_commit_id": "5a0f7e9e03976020ba52a7473f90cb1c8a4354c0", "lines_deleted": {}, "lines_added": {"3403": "    # force _noarg_wrapper return type with dtype=bool (GH 29624)\n", "3409": "        dtype=bool,\n", "3416": "        dtype=bool,\n", "3423": "        dtype=bool,\n", "3430": "        dtype=bool,\n", "3437": "        dtype=bool,\n", "3444": "        dtype=bool,\n", "3451": "        dtype=bool,\n", "3458": "        dtype=bool,\n", "3465": "        dtype=bool,\n"}}
{"project": "pandas", "bug": 126, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/frame.py", "buggy_commit_id": "29be383", "fixed_commit_id": "e639af2afd18b90ab9063df9c1927ae1f357a418", "lines_deleted": {"6945": "        elif isinstance(other, list) and not isinstance(other[0], DataFrame):\n", "6946": "            other = DataFrame(other)\n", "6947": "            if (self.columns.get_indexer(other.columns) >= 0).all():\n", "6948": "                other = other.reindex(columns=self.columns)\n"}, "lines_added": {"6945": "        elif isinstance(other, list):\n", "6946": "            if not other:\n", "6947": "                pass\n", "6948": "            elif not isinstance(other[0], DataFrame):\n", "6949": "                other = DataFrame(other)\n", "6950": "                if (self.columns.get_indexer(other.columns) >= 0).all():\n", "6951": "                    other = other.reindex(columns=self.columns)\n"}}
{"project": "pandas", "bug": 127, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/generic.py", "buggy_commit_id": "f7d6b58", "fixed_commit_id": "710d82c0d393c9031e469ec0371660d8187b7dc3", "lines_deleted": {}, "lines_added": {"10445": "        rs = rs.loc[~rs.index.duplicated()]\n"}}
{"project": "pandas", "bug": 128, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/io/json/_json.py", "buggy_commit_id": "794a1c2", "fixed_commit_id": "112e6b8d054f9adc1303138533ed6506975f94db", "lines_deleted": {}, "lines_added": {"579": "    if encoding is None:\n", "580": "        encoding = \"utf-8\"\n"}}
{"project": "pandas", "bug": 129, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/arrays/datetimelike.py", "buggy_commit_id": "5b580fb", "fixed_commit_id": "82c9547ddcaf2fd70e00f1368731f14a03bbac88", "lines_deleted": {}, "lines_added": {"1305": "            if lib.is_scalar(other):\n", "1306": "                # i.e. np.datetime64 object\n", "1307": "                return Timestamp(other) - self\n"}}
{"project": "pandas", "bug": 130, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/ops.py", "buggy_commit_id": "7adc14a", "fixed_commit_id": "8efc717e4652e1e4bfbc4455da1d40eb676eed91", "lines_deleted": {}, "lines_added": {"769": "    @cache_readonly\n", "770": "    def recons_codes(self):\n", "771": "        # get unique result indices, and prepend 0 as groupby starts from the first\n", "772": "        return [np.r_[0, np.flatnonzero(self.bins[1:] != self.bins[:-1]) + 1]]\n", "773": "\n"}}
{"project": "pandas", "bug": 133, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/generic.py", "buggy_commit_id": "343544d", "fixed_commit_id": "c983d52e3a3a8a191359814417f375b1dc8b04c1", "lines_deleted": {"7056": "        else:\n", "7057": "            _maybe_transposed_self = self\n"}, "lines_added": {"7050": "        axis = self._get_axis_number(axis)\n", "7051": "\n", "7058": "\n"}}
{"project": "pandas", "bug": 135, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/ops.py", "buggy_commit_id": "0df22b6", "fixed_commit_id": "f41219179de69fed5c2a4b7df821394af1aa6559", "lines_deleted": {"674": "            return self._aggregate_series_pure_python(obj, func)\n"}, "lines_added": {"674": "        except TypeError as err:\n", "675": "            if \"ndarray\" in str(err):\n", "676": "                # raised in libreduction if obj's values is no ndarray\n", "677": "                pass\n", "678": "            else:\n", "679": "                raise\n", "680": "        return self._aggregate_series_pure_python(obj, func)\n"}}
{"project": "pandas", "bug": 139, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/grouper.py", "buggy_commit_id": "7705cd2", "fixed_commit_id": "0ffdbe36f0df732f2700cda4a84be758084ff901", "lines_deleted": {"332": "                    )\n"}, "lines_added": {"332": "                    ),\n", "333": "                    name=self.name,\n"}}
{"project": "pandas", "bug": 140, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/generic.py", "buggy_commit_id": "3b19e1d", "fixed_commit_id": "4375daffeed16531bae3fdaf85324b590d1dcb59", "lines_deleted": {"1915": "        idx for idx in range(len(result.columns)) if is_object_dtype(result.dtypes[idx])\n"}, "lines_added": {"1915": "        idx\n", "1916": "        for idx in range(len(result.columns))\n", "1917": "        if is_object_dtype(result.dtypes.iloc[idx])\n"}}
{"project": "pandas", "bug": 141, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/range.py", "buggy_commit_id": "b298696", "fixed_commit_id": "411dd249e755d7e281603fe3e0ab9e0e48383df9", "lines_deleted": {"390": "            # Work on reversed range for simplicity:\n", "391": "            start, stop, step = (self.stop - self.step, self.start + 1, -self.step)\n"}, "lines_added": {"390": "            # GH 28678: work on reversed range for simplicity\n", "391": "            reverse = self._range[::-1]\n", "392": "            start, stop, step = reverse.start, reverse.stop, reverse.step\n"}}
{"project": "pandas", "bug": 143, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/range.py", "buggy_commit_id": "c13c13b", "fixed_commit_id": "df918becf698741861da0e9b7e810d477b0eb194", "lines_deleted": {"382": "        if not (method is None and tolerance is None and is_list_like(target)):\n", "383": "            return super().get_indexer(target, method=method, tolerance=tolerance)\n"}, "lines_added": {"382": "        if com.any_not_none(method, tolerance, limit) or not is_list_like(target):\n", "383": "            return super().get_indexer(\n", "384": "                target, method=method, tolerance=tolerance, limit=limit\n", "385": "            )\n"}}
{"project": "pandas", "bug": 144, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/plotting/_matplotlib/core.py", "buggy_commit_id": "b106108", "fixed_commit_id": "ffe6cfdbf82d663c3f77567bde11f1666de1df38", "lines_deleted": {"1437": "        ax.set_xticks(self.tick_pos)\n", "1438": "        ax.set_xticklabels(ticklabels)\n"}, "lines_added": {"1437": "\n", "1438": "        if self.xticks is not None:\n", "1439": "            ax.set_xticks(np.array(self.xticks))\n", "1440": "        else:\n", "1441": "            ax.set_xticks(self.tick_pos)\n", "1442": "            ax.set_xticklabels(ticklabels)\n", "1443": "\n"}}
{"project": "pandas", "bug": 145, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/ops/__init__.py", "buggy_commit_id": "3bd222d", "fixed_commit_id": "f08a1e62e31fc11e7e5bd7bec72b7e6d86473423", "lines_deleted": {"500": "        def column_op(a, b):\n", "501": "            return {i: func(a.iloc[:, i], b.iloc[i]) for i in range(len(a.columns))}\n"}, "lines_added": {"500": "        if right.dtype == \"timedelta64[ns]\":\n", "501": "            # ensure we treat NaT values as the correct dtype\n", "502": "            # Note: we do not do this unconditionally as it may be lossy or\n", "503": "            #  expensive for EA dtypes.\n", "504": "            right = np.asarray(right)\n", "505": "\n", "506": "            def column_op(a, b):\n", "507": "                return {i: func(a.iloc[:, i], b[i]) for i in range(len(a.columns))}\n", "508": "\n", "509": "        else:\n", "510": "\n", "511": "            def column_op(a, b):\n", "512": "                return {i: func(a.iloc[:, i], b.iloc[i]) for i in range(len(a.columns))}\n"}}
{"project": "pandas", "bug": 148, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/apply.py", "buggy_commit_id": "4ac7f9d", "fixed_commit_id": "95edcf1cbee630e42daca0404c44d8128ea156fb", "lines_deleted": {"204": "\n", "207": "            EMPTY_SERIES = Series([])\n", "209": "                r = self.f(EMPTY_SERIES, *self.args, **self.kwds)\n", "216": "            return self.obj._constructor_sliced(np.nan, index=self.agg_axis)\n"}, "lines_added": {"207": "                r = self.f(Series([]))\n", "214": "            if len(self.agg_axis):\n", "215": "                r = self.f(Series([]))\n", "216": "            else:\n", "217": "                r = np.nan\n", "218": "\n", "219": "            return self.obj._constructor_sliced(r, index=self.agg_axis)\n"}}
{"project": "pandas", "bug": 150, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/dtypes/missing.py", "buggy_commit_id": "54e9b75", "fixed_commit_id": "d38627b5889db3f663cad339fe8f995af823b76b", "lines_deleted": {"447": "                if left_value != right_value:\n"}, "lines_added": {"447": "                if np.any(left_value != right_value):\n"}}
{"project": "pandas", "bug": 151, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/arrays/numpy_.py", "buggy_commit_id": "6110608", "fixed_commit_id": "5a227a410c520ceec2d94369a44e2ab774a40dc3", "lines_deleted": {"237": "        values = self._ndarray\n", "238": "        t = np.result_type(value, values)\n", "239": "        if t != self._ndarray.dtype:\n", "240": "            values = values.astype(t, casting=\"safe\")\n", "241": "            values[key] = value\n", "242": "            self._dtype = PandasDtype(t)\n", "243": "            self._ndarray = values\n", "244": "        else:\n", "245": "            self._ndarray[key] = value\n"}, "lines_added": {"237": "        value = np.asarray(value, dtype=self._ndarray.dtype)\n", "238": "        self._ndarray[key] = value\n"}}
{"project": "pandas", "bug": 152, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/series.py", "buggy_commit_id": "eb8cce0", "fixed_commit_id": "f61deb962ac0853595a43ad024c482b018d1792b", "lines_deleted": {"2732": "            to_concat = [self] + to_append\n"}, "lines_added": {"2732": "            to_concat = [self]\n", "2733": "            to_concat.extend(to_append)\n"}}
{"project": "pandas", "bug": 155, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/window/rolling.py", "buggy_commit_id": "4252ab7", "fixed_commit_id": "0bde7cedf46209a9fd4fa8c7f9fbce8b49aa78cd", "lines_deleted": {"1655": "            return self.obj.index\n"}, "lines_added": {"1655": "            if self.axis == 0:\n", "1656": "                return self.obj.index\n", "1657": "            elif self.axis == 1:\n", "1658": "                return self.obj.columns\n"}}
{"project": "pandas", "bug": 158, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/series.py", "buggy_commit_id": "a76df79", "fixed_commit_id": "b1c871ce4b5e76b3cffe1ebd4216d36379872352", "lines_deleted": {"4167": "        non_mapping = is_scalar(index) or (\n", "4168": "            is_list_like(index) and not is_dict_like(index)\n", "4169": "        )\n", "4170": "        if non_mapping:\n", "4172": "        return super().rename(index=index, **kwargs)\n"}, "lines_added": {"4167": "        if callable(index) or is_dict_like(index):\n", "4168": "            return super().rename(index=index, **kwargs)\n", "4169": "        else:\n"}}
{"project": "pandas", "bug": 160, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/computation/expressions.py", "buggy_commit_id": "489d1ff", "fixed_commit_id": "fb62fcf91c874e9c24fa83693c4e6e613f35f864", "lines_deleted": {"78": "\n", "82": "                if hasattr(o, \"dtypes\"):\n", "87": "                elif isinstance(o, np.ndarray):\n"}, "lines_added": {"81": "                # Series implements dtypes, check for dimension count as well\n", "82": "                if hasattr(o, \"dtypes\") and o.ndim > 1:\n", "87": "                # ndarray and Series Case\n", "88": "                elif hasattr(o, \"dtype\"):\n"}}
{"project": "pandas", "bug": 161, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/arrays/categorical.py", "buggy_commit_id": "a818281", "fixed_commit_id": "ca5198a6daa7757e398112a17ccadc9e7d078d96", "lines_deleted": {"1842": "                indexer = np.where(values_codes != -1)\n", "1843": "                codes[indexer] = values_codes[values_codes != -1]\n"}, "lines_added": {"1842": "                indexer = np.where(codes == -1)\n", "1843": "                codes[indexer] = values_codes[indexer]\n"}}
{"project": "pandas", "bug": 163, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/window.py", "buggy_commit_id": "61819ab", "fixed_commit_id": "f669f94a186ea444cc771985a915e90eecf218a9", "lines_deleted": {"248": "        # Always convert inf to nan\n", "249": "        values[np.isinf(values)] = np.NaN\n"}, "lines_added": {"248": "        # Convert inf to nan for C funcs\n", "249": "        inf = np.isinf(values)\n", "250": "        if inf.any():\n", "251": "            values = np.where(inf, np.nan, values)\n"}}
{"project": "pandas", "bug": 164, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/tools/datetimes.py", "buggy_commit_id": "ac69333", "fixed_commit_id": "61819aba14dd7b3996336aaed84d07cd936d92b5", "lines_deleted": {}, "lines_added": {"336": "        elif tz:\n", "337": "            # DatetimeArray, DatetimeIndex\n", "338": "            return arg.tz_localize(tz)\n"}}
{"project": "pandas", "bug": 166, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/frame.py", "buggy_commit_id": "4056ded", "fixed_commit_id": "d44fb07063e9a8bd8a209ddce35b40d8a56c8d02", "lines_deleted": {"7212": "                    res = concat(frames, axis=1, join=\"outer\", verify_integrity=True)\n", "7215": "                    return concat(frames, axis=1, join=how, verify_integrity=True)\n"}, "lines_added": {"7212": "                    res = concat(\n", "7213": "                        frames, axis=1, join=\"outer\", verify_integrity=True, sort=sort\n", "7214": "                    )\n", "7217": "                    return concat(\n", "7218": "                        frames, axis=1, join=how, verify_integrity=True, sort=sort\n", "7219": "                    )\n"}}
{"project": "pandas", "bug": 168, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/grouper.py", "buggy_commit_id": "2de4fbb", "fixed_commit_id": "1fa1ad91b29c5474cbb86cbcbcdcd50537cad0ae", "lines_deleted": {"608": "                    obj._check_label_or_level_ambiguity(gpr)\n", "611": "            elif obj._is_level_reference(gpr):\n"}, "lines_added": {"608": "                    obj._check_label_or_level_ambiguity(gpr, axis=axis)\n", "611": "            elif obj._is_level_reference(gpr, axis=axis):\n"}}
{"project": "pandas", "bug": 169, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/frame.py", "buggy_commit_id": "4d9016e", "fixed_commit_id": "01babb590cb15ef5c6e9ad890ea580a5112e6999", "lines_deleted": {}, "lines_added": {"8217": "        if len(data.columns) == 0:\n", "8218": "            # GH#23925 _get_numeric_data may have dropped all columns\n", "8219": "            cols = Index([], name=self.columns.name)\n", "8220": "            if is_list_like(q):\n", "8221": "                return self._constructor([], index=q, columns=cols)\n", "8222": "            return self._constructor_sliced([], index=cols, name=q)\n", "8223": "\n"}}
{"project": "pandas", "bug": 1, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/dtypes/common.py", "buggy_commit_id": "3fd150c", "fixed_commit_id": "e41ee47a90bb1d8a1fa28fcefcd45ed8ef5cb946", "lines_deleted": {"601": "        is_excluded_checks = (is_period_dtype, is_interval_dtype)\n"}, "lines_added": {"601": "        is_excluded_checks = (is_period_dtype, is_interval_dtype, is_categorical_dtype)\n"}}
{"project": "pandas", "bug": 4, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/base.py", "buggy_commit_id": "cca710b", "fixed_commit_id": "2250ddfaff92abaff20a5bcd78315f5d4bd44981", "lines_deleted": {"3530": "            return multi_join_idx, lidx, ridx\n"}, "lines_added": {"3530": "            if return_indexers:\n", "3531": "                return multi_join_idx, lidx, ridx\n", "3532": "            else:\n", "3533": "                return multi_join_idx\n"}}
{"project": "pandas", "bug": 6, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/grouper.py", "buggy_commit_id": "21a10d1", "fixed_commit_id": "8cd8ed3657e52ad9f67e17b7f5c20f7340ab6a2c", "lines_deleted": {"756": "        except (KeyError, IndexError):\n"}, "lines_added": {"756": "        except (KeyError, IndexError, ValueError):\n", "757": "            # TODO: ValueError: Given date string not likely a datetime.\n", "758": "            # should be KeyError?\n"}}
{"project": "pandas", "bug": 7, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/base.py", "buggy_commit_id": "27f365d", "fixed_commit_id": "64336ff8414f8977ff94adb9a5bc000a3a4ef454", "lines_deleted": {"3075": "        target = np.asarray(target)\n", "3076": "        left_distances = abs(self.values[left_indexer] - target)\n", "3077": "        right_distances = abs(self.values[right_indexer] - target)\n"}, "lines_added": {"3075": "        left_distances = np.abs(self[left_indexer] - target)\n", "3076": "        right_distances = np.abs(self[right_indexer] - target)\n"}}
{"project": "pandas", "bug": 8, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/internals/blocks.py", "buggy_commit_id": "ddbeca6", "fixed_commit_id": "d09f20e29bdfa82f5efc071986e2633001d552f6", "lines_deleted": {"730": "        if not mask.any():\n", "731": "            if inplace:\n", "732": "                return [self]\n", "733": "            return [self.copy()]\n", "734": "\n"}, "lines_added": {}}
{"project": "pandas", "bug": 10, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/internals/blocks.py", "buggy_commit_id": "de8ca78", "fixed_commit_id": "e1ee2b0679e5999c993a787606d30e75faaba7a2", "lines_deleted": {"1601": "        if isinstance(new, np.ndarray) and len(new) == len(mask):\n"}, "lines_added": {"1601": "        if isinstance(new, (np.ndarray, ExtensionArray)) and len(new) == len(mask):\n"}}
{"project": "pandas", "bug": 11, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/reshape/concat.py", "buggy_commit_id": "1c88e6a", "fixed_commit_id": "b7f061c3d24df943e16918ad3932e767f5639a38", "lines_deleted": {"621": "                try:\n", "622": "                    i = level.get_loc(key)\n", "623": "                except KeyError as err:\n", "624": "                    raise ValueError(f\"Key {key} not in level {level}\") from err\n"}, "lines_added": {"621": "                mask = level == key\n", "622": "                if not mask.any():\n", "623": "                    raise ValueError(f\"Key {key} not in level {level}\")\n", "624": "                i = np.nonzero(level == key)[0][0]\n"}}
{"project": "pandas", "bug": 19, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexing.py", "buggy_commit_id": "17dc6b0", "fixed_commit_id": "c6a1638bcd99df677a8f76f036c0b30027eb243c", "lines_deleted": {"1084": "            # convert various list-like indexers\n", "1085": "            # to a list of keys\n", "1086": "            # we will use the *values* of the object\n", "1087": "            # and NOT the index if its a PandasObject\n", "1088": "            if isinstance(labels, ABCMultiIndex):\n", "1089": "\n", "1090": "                if isinstance(key, (ABCSeries, np.ndarray)) and key.ndim <= 1:\n", "1091": "                    # Series, or 0,1 ndim ndarray\n", "1092": "                    # GH 14730\n", "1093": "                    key = list(key)\n", "1094": "                elif isinstance(key, ABCDataFrame):\n", "1095": "                    # GH 15438\n", "1096": "                    raise NotImplementedError(\n", "1097": "                        \"Indexing a MultiIndex with a \"\n", "1098": "                        \"DataFrame key is not \"\n", "1099": "                        \"implemented\"\n", "1100": "                    )\n", "1101": "                elif hasattr(key, \"ndim\") and key.ndim > 1:\n", "1102": "                    raise NotImplementedError(\n", "1103": "                        \"Indexing a MultiIndex with a \"\n", "1104": "                        \"multidimensional key is not \"\n", "1105": "                        \"implemented\"\n", "1106": "                    )\n", "1107": "\n", "1108": "                if (\n", "1109": "                    not isinstance(key, tuple)\n", "1110": "                    and len(key)\n", "1111": "                    and not isinstance(key[0], tuple)\n", "1112": "                ):\n", "1113": "                    key = tuple([key])\n", "1114": "\n"}, "lines_added": {}}
{"project": "pandas", "bug": 21, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/series.py", "buggy_commit_id": "4071c3b", "fixed_commit_id": "56d0934092b8296c90f940c56fce3b731e0de81b", "lines_deleted": {"951": "        if isinstance(key, list):\n", "952": "            # handle the dup indexing case GH#4246\n", "953": "            return self.loc[key]\n", "954": "\n", "955": "        return self.reindex(key)\n"}, "lines_added": {"951": "        # handle the dup indexing case GH#4246\n", "952": "        return self.loc[key]\n"}}
{"project": "pandas", "bug": 25, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/arrays/datetimes.py", "buggy_commit_id": "ecc3b2e", "fixed_commit_id": "73d614403759831814ef7ab83ef1e4aaa645b33a", "lines_deleted": {"1279": "        sarray = fields.build_isocalendar_sarray(self.asi8)\n"}, "lines_added": {"1279": "        if self.tz is not None and not timezones.is_utc(self.tz):\n", "1280": "            values = self._local_timestamps()\n", "1281": "        else:\n", "1282": "            values = self.asi8\n", "1283": "        sarray = fields.build_isocalendar_sarray(values)\n"}}
{"project": "pandas", "bug": 28, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/strings.py", "buggy_commit_id": "40fd73a", "fixed_commit_id": "ef9b9387c88cf12b20dd8656dfedfc236e0f3352", "lines_deleted": {"2299": "            return [Series(others._values, index=others)]\n"}, "lines_added": {"2299": "            return [Series(others._values, index=idx)]\n"}}
{"project": "pandas", "bug": 29, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/arrays/interval.py", "buggy_commit_id": "6e3537d", "fixed_commit_id": "4334482c348c3adc69683c8332295e22092c1b57", "lines_deleted": {"548": "        if needs_float_conversion:\n", "549": "            left = left.astype(\"float\")\n", "550": "        left.values[key] = value_left\n", "554": "        if needs_float_conversion:\n", "555": "            right = right.astype(\"float\")\n", "556": "        right.values[key] = value_right\n"}, "lines_added": {"544": "        if needs_float_conversion:\n", "545": "            raise ValueError(\"Cannot set float NaN to integer-backed IntervalArray\")\n", "546": "\n", "548": "\n", "552": "        left._values[key] = value_left\n", "556": "        right._values[key] = value_right\n"}}
{"project": "pandas", "bug": 30, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/io/json/_json.py", "buggy_commit_id": "60d6f28", "fixed_commit_id": "d857cd12b3ae11be788ba96015383a5b7464ecc9", "lines_deleted": {"984": "            except (ValueError, OverflowError):\n"}, "lines_added": {"984": "            except (ValueError, OverflowError, TypeError):\n"}}
{"project": "pandas", "bug": 33, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/arrays/integer.py", "buggy_commit_id": "03dacc1", "fixed_commit_id": "89d8aba76a2bb930e520590d145e3d67b2046e39", "lines_deleted": {"501": "        data[self._mask] = data.min() - 1\n"}, "lines_added": {"501": "        if self._mask.any():\n", "502": "            data[self._mask] = data.min() - 1\n"}}
{"project": "pandas", "bug": 34, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/resample.py", "buggy_commit_id": "02a134b", "fixed_commit_id": "cf9ec7854ecb80709804178e769425f02ddf8c64", "lines_deleted": {"1430": "            ambiguous=\"infer\",\n"}, "lines_added": {"1424": "        # GH 25758: If DST lands at midnight (e.g. 'America/Havana'), user feedback\n", "1425": "        # has noted that ambiguous=True provides the most sensible result\n", "1432": "            ambiguous=True,\n"}}
{"project": "pandas", "bug": 35, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/period.py", "buggy_commit_id": "a7dd3ea", "fixed_commit_id": "f10ec595eccaf86a9f52fe9683e1181a51ba675b", "lines_deleted": {"326": "        # To avoid a reference cycle, pass a weakref of self to _engine_type.\n", "327": "        period = weakref.ref(self)\n"}, "lines_added": {"326": "        # To avoid a reference cycle, pass a weakref of self._values to _engine_type.\n", "327": "        period = weakref.ref(self._values)\n"}}
{"project": "pandas", "bug": 39, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/ops/methods.py", "buggy_commit_id": "8a5f291", "fixed_commit_id": "a3097b5bd172e76dd3524eb5dbe18b6b4c22df50", "lines_deleted": {"95": "\n"}, "lines_added": {"95": "            # Delete cacher\n", "96": "            self._reset_cacher()\n"}}
{"project": "pandas", "bug": 48, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/generic.py", "buggy_commit_id": "9bc3ee0", "fixed_commit_id": "9e7cb7c102655d0ba92d2561c178da9254d5cef5", "lines_deleted": {"1085": "                    except ValueError:\n"}, "lines_added": {"1085": "                    except (ValueError, TypeError):\n"}}
{"project": "pandas", "bug": 49, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/strings.py", "buggy_commit_id": "113c255", "fixed_commit_id": "37659d47a685ecc5f5117aa56526ece0106c6d0f", "lines_deleted": {}, "lines_added": {"777": "            if x is libmissing.NA:\n", "778": "                return x\n"}}
{"project": "pandas", "bug": 50, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/arrays/categorical.py", "buggy_commit_id": "ebf9668", "fixed_commit_id": "821aa25c9039e72da9a7b236cf2f9e7d549cbb7b", "lines_deleted": {"105": "                ret[mask] = False\n"}, "lines_added": {"105": "                if opname == \"__ne__\":\n", "106": "                    ret[(self._codes == -1) & (other_codes == -1)] = True\n", "107": "                else:\n", "108": "                    ret[mask] = False\n"}}
{"project": "pandas", "bug": 52, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/generic.py", "buggy_commit_id": "20a84a5", "fixed_commit_id": "7017599821e02ba95282848c12f7d3b5f2ce670a", "lines_deleted": {"593": "        # GH 27951\n", "594": "        # temporary fix while we wait for NumPy bug 12629 to be fixed\n", "595": "        val[isna(val)] = np.datetime64(\"NaT\")\n", "596": "\n", "597": "        try:\n", "598": "            sorter = np.lexsort((val, ids))\n", "599": "        except TypeError:  # catches object dtypes\n", "600": "            msg = f\"val.dtype must be object, got {val.dtype}\"\n", "601": "            assert val.dtype == object, msg\n", "602": "            val, _ = algorithms.factorize(val, sort=False)\n", "603": "            sorter = np.lexsort((val, ids))\n", "604": "            _isna = lambda a: a == -1\n", "605": "        else:\n", "606": "            _isna = isna\n", "607": "\n", "608": "        ids, val = ids[sorter], val[sorter]\n", "613": "        inc = np.r_[1, val[1:] != val[:-1]]\n", "616": "        mask = _isna(val)\n"}, "lines_added": {"593": "        codes, _ = algorithms.factorize(val, sort=False)\n", "594": "        sorter = np.lexsort((codes, ids))\n", "595": "        codes = codes[sorter]\n", "596": "        ids = ids[sorter]\n", "601": "        inc = np.r_[1, codes[1:] != codes[:-1]]\n", "604": "        mask = codes == -1\n"}}
{"project": "pandas", "bug": 56, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/frame.py", "buggy_commit_id": "9e69040", "fixed_commit_id": "dafec63f2e138d0451dae5b37edea2e83f9adc8a", "lines_deleted": {"2624": "            series = self._iget_item_cache(col)\n", "2625": "            return com.maybe_box_datetimelike(series._values[index])\n"}, "lines_added": {"2624": "            series = self._ixs(col, axis=1)\n", "2625": "            return series._values[index]\n"}}
{"project": "pandas", "bug": 58, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/arrays/categorical.py", "buggy_commit_id": "634a41f", "fixed_commit_id": "16684f2affaf901b42a12e50f9c29e7c034ad7ea", "lines_deleted": {"646": "        codes = np.asarray(codes)  # #21767\n"}, "lines_added": {"646": "        if is_extension_array_dtype(codes) and is_integer_dtype(codes):\n", "647": "            # Avoid the implicit conversion of Int to object\n", "648": "            if isna(codes).any():\n", "649": "                raise ValueError(\"codes cannot contain NA values\")\n", "650": "            codes = codes.to_numpy(dtype=np.int64)\n", "651": "        else:\n", "652": "            codes = np.asarray(codes)\n"}}
{"project": "pandas", "bug": 59, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/window/rolling.py", "buggy_commit_id": "292a993", "fixed_commit_id": "8dd9fabd2ad9104e747084437b9ad436d5be087a", "lines_deleted": {"1784": "        window = self._get_window(other)\n"}, "lines_added": {"1784": "        window = self._get_window(other) if not self.is_freq_type else self.win_freq\n"}}
{"project": "pandas", "bug": 60, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/window/rolling.py", "buggy_commit_id": "6bc2dca", "fixed_commit_id": "fcf7258c19b0a6a712f33fb0bcefdae426be7e7f", "lines_deleted": {"1298": "        # name=func for WindowGroupByMixin._apply\n"}, "lines_added": {"1298": "        # name=func & raw=raw for WindowGroupByMixin._apply\n", "1305": "            raw=raw,\n"}}
{"project": "pandas", "bug": 61, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/series.py", "buggy_commit_id": "74dad82", "fixed_commit_id": "f7e2b74f1bcc1d1cbebbc42481e33f0abb2843dc", "lines_deleted": {"921": "                return self._get_values(key)\n"}, "lines_added": {"921": "                return self.iloc[key]\n"}}
{"project": "pandas", "bug": 63, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexing.py", "buggy_commit_id": "e5c65bf", "fixed_commit_id": "e1ca66bae38b8026079dfcbe0edad5f278546608", "lines_deleted": {"2089": "        for ax, i in zip(self.obj.axes, key):\n", "2090": "            if ax.is_integer():\n", "2091": "                if not is_integer(i):\n", "2092": "                    raise ValueError(\n", "2093": "                        \"At based indexing on an integer index \"\n", "2094": "                        \"can only have integer indexers\"\n", "2095": "                    )\n", "2096": "            else:\n", "2097": "                if is_integer(i) and not (ax.holds_integer() or ax.is_floating()):\n", "2098": "                    raise ValueError(\n", "2099": "                        \"At based indexing on an non-integer \"\n", "2100": "                        \"index can only have non-integer \"\n", "2101": "                        \"indexers\"\n", "2102": "                    )\n", "2103": "        return key\n"}, "lines_added": {"2089": "        lkey = list(key)\n", "2090": "        for n, (ax, i) in enumerate(zip(self.obj.axes, key)):\n", "2091": "            lkey[n] = ax._convert_scalar_indexer(i, kind=\"loc\")\n", "2092": "\n", "2093": "        return tuple(lkey)\n"}}
{"project": "pandas", "bug": 64, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/io/formats/excel.py", "buggy_commit_id": "31c1856", "fixed_commit_id": "d0c84ce57d23a409169daf7232ec7681e42363fe", "lines_deleted": {"405": "            self.df = df\n"}, "lines_added": {"405": "            self.df = df.reindex(columns=cols)\n"}}
{"project": "pandas", "bug": 69, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexing.py", "buggy_commit_id": "426d445", "fixed_commit_id": "948f95756c79543bb089a94a85e73011a3730b2d", "lines_deleted": {"2126": "                if is_integer(i) and not ax.holds_integer():\n"}, "lines_added": {"2126": "                if is_integer(i) and not (ax.holds_integer() or ax.is_floating()):\n"}}
{"project": "pandas", "bug": 74, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/timedeltas.py", "buggy_commit_id": "9a211aa", "fixed_commit_id": "839e7f1416148caff518a5b75327a2480a2bbbb4", "lines_deleted": {"165": "        if isinstance(data, TimedeltaArray):\n"}, "lines_added": {"165": "        if isinstance(data, TimedeltaArray) and freq is None:\n"}}
{"project": "pandas", "bug": 76, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/io/json/_json.py", "buggy_commit_id": "4da554f", "fixed_commit_id": "47922d3b00edfc264f73b1484589734bbd077c11", "lines_deleted": {"944": "            except (TypeError, ValueError):\n"}, "lines_added": {"944": "            except (TypeError, ValueError, OverflowError):\n"}}
{"project": "pandas", "bug": 78, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/frame.py", "buggy_commit_id": "f5aa542", "fixed_commit_id": "bd6b395a1e8fb7d099fa17a0e24f8fe3b628822c", "lines_deleted": {"8015": "            result = Series(result, index=labels)\n"}, "lines_added": {"8015": "            result = self._constructor_sliced(result, index=labels)\n"}}
{"project": "pandas", "bug": 82, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/internals/concat.py", "buggy_commit_id": "6f395ad", "fixed_commit_id": "e83a6bddac8c89b144dfe0783594dd332c5b3030", "lines_deleted": {"352": "        return np.dtype(\"M8[ns]\"), tslibs.iNaT\n"}, "lines_added": {"352": "        return np.dtype(\"M8[ns]\"), np.datetime64(\"NaT\", \"ns\")\n"}}
{"project": "pandas", "bug": 85, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/multi.py", "buggy_commit_id": "f1aaf62", "fixed_commit_id": "29edd119d31a9ee7d4f89e8c1dc8af96f0c19dce", "lines_deleted": {}, "lines_added": {"1258": "        else:\n", "1259": "            # break references back to us so that setting the name\n", "1260": "            # on the output of a groupby doesn't reflect back here.\n", "1261": "            level_index = level_index.copy()\n"}}
{"project": "pandas", "bug": 86, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/reshape/pivot.py", "buggy_commit_id": "55cfabb", "fixed_commit_id": "f792d8c50ee456aa8aa2ae406d8e6b8843f45614", "lines_deleted": {}, "lines_added": {"431": "    if columns is None:\n", "432": "        raise TypeError(\"pivot() missing 1 required argument: 'columns'\")\n", "433": "\n"}}
{"project": "pandas", "bug": 88, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/reshape/pivot.py", "buggy_commit_id": "698920f", "fixed_commit_id": "586bcb16023ae870b0ad7769f6d9077903705486", "lines_deleted": {"119": "    if table.index.nlevels > 1:\n"}, "lines_added": {"117": "\n", "120": "    # GH17038, this check should only happen if index is defined (not None)\n", "121": "    if table.index.nlevels > 1 and index:\n"}}
{"project": "pandas", "bug": 89, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/reshape/reshape.py", "buggy_commit_id": "0dc317f", "fixed_commit_id": "feaa5033b7810f7775fd4806c27b2f9f1e9b5051", "lines_deleted": {"360": "                result = result.unstack(val)\n"}, "lines_added": {"360": "                result = result.unstack(val, fill_value=fill_value)\n"}}
{"project": "pandas", "bug": 91, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/timedeltas.py", "buggy_commit_id": "5c12d4f", "fixed_commit_id": "cb9a1c7d0319c34a97247973ca96af53ead8033a", "lines_deleted": {"359": "            value = np.array(value, dtype=_TD_DTYPE, copy=False)\n", "360": "        else:\n", "361": "            value = Timedelta(value).asm8.view(_TD_DTYPE)\n", "363": "        return self.values.searchsorted(value, side=side, sorter=sorter)\n"}, "lines_added": {"359": "            if not type(self._data)._is_recognized_dtype(value):\n", "360": "                raise TypeError(\n", "361": "                    \"searchsorted requires compatible dtype or scalar, \"\n", "362": "                    f\"not {type(value).__name__}\"\n", "363": "                )\n", "364": "            value = type(self._data)(value)\n", "365": "            self._data._check_compatible_with(value)\n", "366": "\n", "367": "        elif isinstance(value, self._data._recognized_scalars):\n", "368": "            self._data._check_compatible_with(value)\n", "369": "            value = self._data._scalar_type(value)\n", "370": "\n", "371": "        elif not isinstance(value, TimedeltaArray):\n", "372": "            raise TypeError(\n", "373": "                \"searchsorted requires compatible dtype or scalar, \"\n", "374": "                f\"not {type(value).__name__}\"\n", "375": "            )\n", "377": "        return self._data.searchsorted(value, side=side, sorter=sorter)\n"}}
{"project": "pandas", "bug": 96, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/tseries/offsets.py", "buggy_commit_id": "5e488a0", "fixed_commit_id": "6d67cf9f02dd22cc870fd407f569197512700203", "lines_deleted": {"898": "                skip_bd = BusinessDay(n=bd)\n"}, "lines_added": {"898": "                if isinstance(self, _CustomMixin):  # GH 30593\n", "899": "                    skip_bd = CustomBusinessDay(\n", "900": "                        n=bd,\n", "901": "                        weekmask=self.weekmask,\n", "902": "                        holidays=self.holidays,\n", "903": "                        calendar=self.calendar,\n", "904": "                    )\n", "905": "                else:\n", "906": "                    skip_bd = BusinessDay(n=bd)\n"}}
{"project": "pandas", "bug": 100, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/generic.py", "buggy_commit_id": "8806ed7", "fixed_commit_id": "2b1b3da4c68fdaf9637d12706c5ba3de1a9b20de", "lines_deleted": {"9859": "        rs = rs.loc[~rs.index.duplicated()]\n", "9860": "        rs = rs.reindex_like(data)\n", "9861": "        if freq is None:\n", "9862": "            mask = isna(com.values_from_object(data))\n", "9863": "            np.putmask(rs.values, mask, np.nan)\n"}, "lines_added": {"9859": "        if freq is not None:\n", "9860": "            # Shift method is implemented differently when freq is not None\n", "9861": "            # We want to restore the original index\n", "9862": "            rs = rs.loc[~rs.index.duplicated()]\n", "9863": "            rs = rs.reindex_like(data)\n"}}
{"project": "pandas", "bug": 102, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/internals/construction.py", "buggy_commit_id": "efaadd5", "fixed_commit_id": "765d8db7eef1befef33f4c99d3e206d26e8444c8", "lines_deleted": {"155": "            columns = [0]\n", "156": "        return arrays_to_mgr([values], columns, index, columns, dtype=dtype)\n"}, "lines_added": {"154": "\n", "155": "        if isinstance(values, np.ndarray) and values.ndim > 1:\n", "156": "            # GH#12513 a EA dtype passed with a 2D array, split into\n", "157": "            #  multiple EAs that view the values\n", "158": "            values = [values[:, n] for n in range(values.shape[1])]\n", "159": "        else:\n", "160": "            values = [values]\n", "161": "\n", "163": "            columns = list(range(len(values)))\n", "164": "        return arrays_to_mgr(values, columns, index, columns, dtype=dtype)\n"}}
{"project": "pandas", "bug": 104, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/groupby.py", "buggy_commit_id": "f738581", "fixed_commit_id": "8e9b3eee812b70197341c26c40200d8a1a77ed9c", "lines_deleted": {"1939": "            order = np.roll(list(range(result.index.nlevels)), -1)\n", "1940": "            result = result.reorder_levels(order)\n", "1941": "            result = result.reindex(q, level=-1)\n", "1943": "            # fix order.\n", "1944": "            hi = len(q) * self.ngroups\n", "1945": "            arr = np.arange(0, hi, self.ngroups)\n", "1946": "            arrays = []\n", "1948": "            for i in range(self.ngroups):\n", "1949": "                arr2 = arr + i\n", "1950": "                arrays.append(arr2)\n", "1952": "            indices = np.concatenate(arrays)\n", "1953": "            assert len(indices) == len(result)\n"}, "lines_added": {"1939": "            order = list(range(1, result.index.nlevels)) + [0]\n", "1940": "\n", "1941": "            # temporarily saves the index names\n", "1942": "            index_names = np.array(result.index.names)\n", "1944": "            # set index names to positions to avoid confusion\n", "1945": "            result.index.names = np.arange(len(index_names))\n", "1946": "\n", "1947": "            # place quantiles on the inside\n", "1948": "            result = result.reorder_levels(order)\n", "1950": "            # restore the index names in order\n", "1951": "            result.index.names = index_names[order]\n", "1953": "            # reorder rows to keep things sorted\n", "1954": "            indices = np.arange(len(result)).reshape([len(q), self.ngroups]).T.flatten()\n"}}
{"project": "pandas", "bug": 106, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/base.py", "buggy_commit_id": "114d552", "fixed_commit_id": "e46026ff4669a30192b91e362ce8cdcbc9693870", "lines_deleted": {"4553": "        elif self.is_all_dates:\n"}, "lines_added": {"4553": "        elif self.is_all_dates and target.is_all_dates:  # GH 30399\n"}}
{"project": "pandas", "bug": 107, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/frame.py", "buggy_commit_id": "47ac4b3", "fixed_commit_id": "fa4949f27ccfbc255bb8dbcd5ec5464b8663f1d2", "lines_deleted": {"6759": "            if other.name is None:\n", "6760": "                index = None\n", "6761": "            else:\n", "6762": "                # other must have the same index name as self, otherwise\n", "6763": "                # index name will be reset\n", "6764": "                index = Index([other.name], name=self.index.name)\n", "6765": "\n", "6771": "            other = other.reindex(combined_columns, copy=False)\n", "6772": "            other = DataFrame(\n", "6773": "                other.values.reshape((1, len(other))),\n", "6774": "                index=index,\n", "6775": "                columns=combined_columns,\n", "6777": "            other = other._convert(datetime=True, timedelta=True)\n"}, "lines_added": {"6759": "            index = Index([other.name], name=self.index.name)\n", "6765": "            other = (\n", "6766": "                other.reindex(combined_columns, copy=False)\n", "6767": "                .to_frame()\n", "6768": "                .T.infer_objects()\n", "6769": "                .rename_axis(index.names, copy=False)\n"}}
{"project": "pandas", "bug": 115, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/missing.py", "buggy_commit_id": "ed20822", "fixed_commit_id": "386494d0dc851be9e86b1576f30fa8705df4d47b", "lines_deleted": {"279": "        result[invalid] = np.interp(inds[invalid], inds[valid], yvalues[valid])\n"}, "lines_added": {"279": "        # np.interp requires sorted X values, #21037\n", "280": "        indexer = np.argsort(inds[valid])\n", "281": "        result[invalid] = np.interp(\n", "282": "            inds[invalid], inds[valid][indexer], yvalues[valid][indexer]\n", "283": "        )\n"}}
{"project": "pandas", "bug": 116, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/reshape/merge.py", "buggy_commit_id": "9333e3d", "fixed_commit_id": "c4fa6a52f7737aecda08f6b0f2d6c27476298ae1", "lines_deleted": {"1029": "                left_keys = [self.left.index.values]\n"}, "lines_added": {"1029": "                left_keys = [self.left.index._values]\n"}}
{"project": "pandas", "bug": 117, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/dtypes/missing.py", "buggy_commit_id": "fc100fe", "fixed_commit_id": "f98d2b6587b74c9a640b062d94911b199d962119", "lines_deleted": {"178": "    elif isinstance(obj, (ABCSeries, np.ndarray, ABCIndexClass)):\n"}, "lines_added": {"178": "    elif isinstance(obj, (ABCSeries, np.ndarray, ABCIndexClass, ABCExtensionArray)):\n"}}
{"project": "pandas", "bug": 119, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/reshape/pivot.py", "buggy_commit_id": "3f69d62", "fixed_commit_id": "e0bd4d5dd07cc481cb52de3cf3c7bf199cb2df07", "lines_deleted": {"265": "            margin_dummy[cols] = margin_dummy[cols].astype(dtype)\n"}, "lines_added": {"263": "        # check the result column and leave floats\n", "266": "            margin_dummy[cols] = margin_dummy[cols].apply(\n", "267": "                maybe_downcast_to_dtype, args=(dtype,)\n", "268": "            )\n"}}
{"project": "pandas", "bug": 122, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/internals/managers.py", "buggy_commit_id": "07e6b9d", "fixed_commit_id": "30059081e946a2020d08d49bf4fa7b771d10089a", "lines_deleted": {"1396": "        # canonicalize block order, using a tuple combining the type\n", "1397": "        # name and then mgr_locs because there might be unconsolidated\n", "1401": "            return (block.dtype.name, block.mgr_locs.as_array.tolist())\n"}, "lines_added": {"1396": "        # canonicalize block order, using a tuple combining the mgr_locs\n", "1397": "        # then type name because there might be unconsolidated\n", "1401": "            return (block.mgr_locs.as_array.tolist(), block.dtype.name)\n"}}
{"project": "pandas", "bug": 124, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/strings.py", "buggy_commit_id": "deceebe", "fixed_commit_id": "5a0f7e9e03976020ba52a7473f90cb1c8a4354c0", "lines_deleted": {}, "lines_added": {"3403": "    # force _noarg_wrapper return type with dtype=bool (GH 29624)\n", "3409": "        dtype=bool,\n", "3416": "        dtype=bool,\n", "3423": "        dtype=bool,\n", "3430": "        dtype=bool,\n", "3437": "        dtype=bool,\n", "3444": "        dtype=bool,\n", "3451": "        dtype=bool,\n", "3458": "        dtype=bool,\n", "3465": "        dtype=bool,\n"}}
{"project": "pandas", "bug": 126, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/frame.py", "buggy_commit_id": "29be383", "fixed_commit_id": "e639af2afd18b90ab9063df9c1927ae1f357a418", "lines_deleted": {"6945": "        elif isinstance(other, list) and not isinstance(other[0], DataFrame):\n", "6946": "            other = DataFrame(other)\n", "6947": "            if (self.columns.get_indexer(other.columns) >= 0).all():\n", "6948": "                other = other.reindex(columns=self.columns)\n"}, "lines_added": {"6945": "        elif isinstance(other, list):\n", "6946": "            if not other:\n", "6947": "                pass\n", "6948": "            elif not isinstance(other[0], DataFrame):\n", "6949": "                other = DataFrame(other)\n", "6950": "                if (self.columns.get_indexer(other.columns) >= 0).all():\n", "6951": "                    other = other.reindex(columns=self.columns)\n"}}
{"project": "pandas", "bug": 127, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/generic.py", "buggy_commit_id": "f7d6b58", "fixed_commit_id": "710d82c0d393c9031e469ec0371660d8187b7dc3", "lines_deleted": {}, "lines_added": {"10445": "        rs = rs.loc[~rs.index.duplicated()]\n"}}
{"project": "pandas", "bug": 128, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/io/json/_json.py", "buggy_commit_id": "794a1c2", "fixed_commit_id": "112e6b8d054f9adc1303138533ed6506975f94db", "lines_deleted": {}, "lines_added": {"579": "    if encoding is None:\n", "580": "        encoding = \"utf-8\"\n"}}
{"project": "pandas", "bug": 129, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/arrays/datetimelike.py", "buggy_commit_id": "5b580fb", "fixed_commit_id": "82c9547ddcaf2fd70e00f1368731f14a03bbac88", "lines_deleted": {}, "lines_added": {"1305": "            if lib.is_scalar(other):\n", "1306": "                # i.e. np.datetime64 object\n", "1307": "                return Timestamp(other) - self\n"}}
{"project": "pandas", "bug": 130, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/ops.py", "buggy_commit_id": "7adc14a", "fixed_commit_id": "8efc717e4652e1e4bfbc4455da1d40eb676eed91", "lines_deleted": {}, "lines_added": {"769": "    @cache_readonly\n", "770": "    def recons_codes(self):\n", "771": "        # get unique result indices, and prepend 0 as groupby starts from the first\n", "772": "        return [np.r_[0, np.flatnonzero(self.bins[1:] != self.bins[:-1]) + 1]]\n", "773": "\n"}}
{"project": "pandas", "bug": 133, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/generic.py", "buggy_commit_id": "343544d", "fixed_commit_id": "c983d52e3a3a8a191359814417f375b1dc8b04c1", "lines_deleted": {"7056": "        else:\n", "7057": "            _maybe_transposed_self = self\n"}, "lines_added": {"7050": "        axis = self._get_axis_number(axis)\n", "7051": "\n", "7058": "\n"}}
{"project": "pandas", "bug": 135, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/ops.py", "buggy_commit_id": "0df22b6", "fixed_commit_id": "f41219179de69fed5c2a4b7df821394af1aa6559", "lines_deleted": {"674": "            return self._aggregate_series_pure_python(obj, func)\n"}, "lines_added": {"674": "        except TypeError as err:\n", "675": "            if \"ndarray\" in str(err):\n", "676": "                # raised in libreduction if obj's values is no ndarray\n", "677": "                pass\n", "678": "            else:\n", "679": "                raise\n", "680": "        return self._aggregate_series_pure_python(obj, func)\n"}}
{"project": "pandas", "bug": 139, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/grouper.py", "buggy_commit_id": "7705cd2", "fixed_commit_id": "0ffdbe36f0df732f2700cda4a84be758084ff901", "lines_deleted": {"332": "                    )\n"}, "lines_added": {"332": "                    ),\n", "333": "                    name=self.name,\n"}}
{"project": "pandas", "bug": 140, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/generic.py", "buggy_commit_id": "3b19e1d", "fixed_commit_id": "4375daffeed16531bae3fdaf85324b590d1dcb59", "lines_deleted": {"1915": "        idx for idx in range(len(result.columns)) if is_object_dtype(result.dtypes[idx])\n"}, "lines_added": {"1915": "        idx\n", "1916": "        for idx in range(len(result.columns))\n", "1917": "        if is_object_dtype(result.dtypes.iloc[idx])\n"}}
{"project": "pandas", "bug": 141, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/range.py", "buggy_commit_id": "b298696", "fixed_commit_id": "411dd249e755d7e281603fe3e0ab9e0e48383df9", "lines_deleted": {"390": "            # Work on reversed range for simplicity:\n", "391": "            start, stop, step = (self.stop - self.step, self.start + 1, -self.step)\n"}, "lines_added": {"390": "            # GH 28678: work on reversed range for simplicity\n", "391": "            reverse = self._range[::-1]\n", "392": "            start, stop, step = reverse.start, reverse.stop, reverse.step\n"}}
{"project": "pandas", "bug": 143, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/indexes/range.py", "buggy_commit_id": "c13c13b", "fixed_commit_id": "df918becf698741861da0e9b7e810d477b0eb194", "lines_deleted": {"382": "        if not (method is None and tolerance is None and is_list_like(target)):\n", "383": "            return super().get_indexer(target, method=method, tolerance=tolerance)\n"}, "lines_added": {"382": "        if com.any_not_none(method, tolerance, limit) or not is_list_like(target):\n", "383": "            return super().get_indexer(\n", "384": "                target, method=method, tolerance=tolerance, limit=limit\n", "385": "            )\n"}}
{"project": "pandas", "bug": 144, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/plotting/_matplotlib/core.py", "buggy_commit_id": "b106108", "fixed_commit_id": "ffe6cfdbf82d663c3f77567bde11f1666de1df38", "lines_deleted": {"1437": "        ax.set_xticks(self.tick_pos)\n", "1438": "        ax.set_xticklabels(ticklabels)\n"}, "lines_added": {"1437": "\n", "1438": "        if self.xticks is not None:\n", "1439": "            ax.set_xticks(np.array(self.xticks))\n", "1440": "        else:\n", "1441": "            ax.set_xticks(self.tick_pos)\n", "1442": "            ax.set_xticklabels(ticklabels)\n", "1443": "\n"}}
{"project": "pandas", "bug": 145, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/ops/__init__.py", "buggy_commit_id": "3bd222d", "fixed_commit_id": "f08a1e62e31fc11e7e5bd7bec72b7e6d86473423", "lines_deleted": {"500": "        def column_op(a, b):\n", "501": "            return {i: func(a.iloc[:, i], b.iloc[i]) for i in range(len(a.columns))}\n"}, "lines_added": {"500": "        if right.dtype == \"timedelta64[ns]\":\n", "501": "            # ensure we treat NaT values as the correct dtype\n", "502": "            # Note: we do not do this unconditionally as it may be lossy or\n", "503": "            #  expensive for EA dtypes.\n", "504": "            right = np.asarray(right)\n", "505": "\n", "506": "            def column_op(a, b):\n", "507": "                return {i: func(a.iloc[:, i], b[i]) for i in range(len(a.columns))}\n", "508": "\n", "509": "        else:\n", "510": "\n", "511": "            def column_op(a, b):\n", "512": "                return {i: func(a.iloc[:, i], b.iloc[i]) for i in range(len(a.columns))}\n"}}
{"project": "pandas", "bug": 148, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/apply.py", "buggy_commit_id": "4ac7f9d", "fixed_commit_id": "95edcf1cbee630e42daca0404c44d8128ea156fb", "lines_deleted": {"204": "\n", "207": "            EMPTY_SERIES = Series([])\n", "209": "                r = self.f(EMPTY_SERIES, *self.args, **self.kwds)\n", "216": "            return self.obj._constructor_sliced(np.nan, index=self.agg_axis)\n"}, "lines_added": {"207": "                r = self.f(Series([]))\n", "214": "            if len(self.agg_axis):\n", "215": "                r = self.f(Series([]))\n", "216": "            else:\n", "217": "                r = np.nan\n", "218": "\n", "219": "            return self.obj._constructor_sliced(r, index=self.agg_axis)\n"}}
{"project": "pandas", "bug": 150, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/dtypes/missing.py", "buggy_commit_id": "54e9b75", "fixed_commit_id": "d38627b5889db3f663cad339fe8f995af823b76b", "lines_deleted": {"447": "                if left_value != right_value:\n"}, "lines_added": {"447": "                if np.any(left_value != right_value):\n"}}
{"project": "pandas", "bug": 151, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/arrays/numpy_.py", "buggy_commit_id": "6110608", "fixed_commit_id": "5a227a410c520ceec2d94369a44e2ab774a40dc3", "lines_deleted": {"237": "        values = self._ndarray\n", "238": "        t = np.result_type(value, values)\n", "239": "        if t != self._ndarray.dtype:\n", "240": "            values = values.astype(t, casting=\"safe\")\n", "241": "            values[key] = value\n", "242": "            self._dtype = PandasDtype(t)\n", "243": "            self._ndarray = values\n", "244": "        else:\n", "245": "            self._ndarray[key] = value\n"}, "lines_added": {"237": "        value = np.asarray(value, dtype=self._ndarray.dtype)\n", "238": "        self._ndarray[key] = value\n"}}
{"project": "pandas", "bug": 152, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/series.py", "buggy_commit_id": "eb8cce0", "fixed_commit_id": "f61deb962ac0853595a43ad024c482b018d1792b", "lines_deleted": {"2732": "            to_concat = [self] + to_append\n"}, "lines_added": {"2732": "            to_concat = [self]\n", "2733": "            to_concat.extend(to_append)\n"}}
{"project": "pandas", "bug": 155, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/window/rolling.py", "buggy_commit_id": "4252ab7", "fixed_commit_id": "0bde7cedf46209a9fd4fa8c7f9fbce8b49aa78cd", "lines_deleted": {"1655": "            return self.obj.index\n"}, "lines_added": {"1655": "            if self.axis == 0:\n", "1656": "                return self.obj.index\n", "1657": "            elif self.axis == 1:\n", "1658": "                return self.obj.columns\n"}}
{"project": "pandas", "bug": 158, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/series.py", "buggy_commit_id": "a76df79", "fixed_commit_id": "b1c871ce4b5e76b3cffe1ebd4216d36379872352", "lines_deleted": {"4167": "        non_mapping = is_scalar(index) or (\n", "4168": "            is_list_like(index) and not is_dict_like(index)\n", "4169": "        )\n", "4170": "        if non_mapping:\n", "4172": "        return super().rename(index=index, **kwargs)\n"}, "lines_added": {"4167": "        if callable(index) or is_dict_like(index):\n", "4168": "            return super().rename(index=index, **kwargs)\n", "4169": "        else:\n"}}
{"project": "pandas", "bug": 160, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/computation/expressions.py", "buggy_commit_id": "489d1ff", "fixed_commit_id": "fb62fcf91c874e9c24fa83693c4e6e613f35f864", "lines_deleted": {"78": "\n", "82": "                if hasattr(o, \"dtypes\"):\n", "87": "                elif isinstance(o, np.ndarray):\n"}, "lines_added": {"81": "                # Series implements dtypes, check for dimension count as well\n", "82": "                if hasattr(o, \"dtypes\") and o.ndim > 1:\n", "87": "                # ndarray and Series Case\n", "88": "                elif hasattr(o, \"dtype\"):\n"}}
{"project": "pandas", "bug": 161, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/arrays/categorical.py", "buggy_commit_id": "a818281", "fixed_commit_id": "ca5198a6daa7757e398112a17ccadc9e7d078d96", "lines_deleted": {"1842": "                indexer = np.where(values_codes != -1)\n", "1843": "                codes[indexer] = values_codes[values_codes != -1]\n"}, "lines_added": {"1842": "                indexer = np.where(codes == -1)\n", "1843": "                codes[indexer] = values_codes[indexer]\n"}}
{"project": "pandas", "bug": 163, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/window.py", "buggy_commit_id": "61819ab", "fixed_commit_id": "f669f94a186ea444cc771985a915e90eecf218a9", "lines_deleted": {"248": "        # Always convert inf to nan\n", "249": "        values[np.isinf(values)] = np.NaN\n"}, "lines_added": {"248": "        # Convert inf to nan for C funcs\n", "249": "        inf = np.isinf(values)\n", "250": "        if inf.any():\n", "251": "            values = np.where(inf, np.nan, values)\n"}}
{"project": "pandas", "bug": 164, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/tools/datetimes.py", "buggy_commit_id": "ac69333", "fixed_commit_id": "61819aba14dd7b3996336aaed84d07cd936d92b5", "lines_deleted": {}, "lines_added": {"336": "        elif tz:\n", "337": "            # DatetimeArray, DatetimeIndex\n", "338": "            return arg.tz_localize(tz)\n"}}
{"project": "pandas", "bug": 166, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/frame.py", "buggy_commit_id": "4056ded", "fixed_commit_id": "d44fb07063e9a8bd8a209ddce35b40d8a56c8d02", "lines_deleted": {"7212": "                    res = concat(frames, axis=1, join=\"outer\", verify_integrity=True)\n", "7215": "                    return concat(frames, axis=1, join=how, verify_integrity=True)\n"}, "lines_added": {"7212": "                    res = concat(\n", "7213": "                        frames, axis=1, join=\"outer\", verify_integrity=True, sort=sort\n", "7214": "                    )\n", "7217": "                    return concat(\n", "7218": "                        frames, axis=1, join=how, verify_integrity=True, sort=sort\n", "7219": "                    )\n"}}
{"project": "pandas", "bug": 168, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/groupby/grouper.py", "buggy_commit_id": "2de4fbb", "fixed_commit_id": "1fa1ad91b29c5474cbb86cbcbcdcd50537cad0ae", "lines_deleted": {"608": "                    obj._check_label_or_level_ambiguity(gpr)\n", "611": "            elif obj._is_level_reference(gpr):\n"}, "lines_added": {"608": "                    obj._check_label_or_level_ambiguity(gpr, axis=axis)\n", "611": "            elif obj._is_level_reference(gpr, axis=axis):\n"}}
{"project": "pandas", "bug": 169, "project_url": "https://github.com/pandas-dev/pandas", "file_changed": "pandas/core/frame.py", "buggy_commit_id": "4d9016e", "fixed_commit_id": "01babb590cb15ef5c6e9ad890ea580a5112e6999", "lines_deleted": {}, "lines_added": {"8217": "        if len(data.columns) == 0:\n", "8218": "            # GH#23925 _get_numeric_data may have dropped all columns\n", "8219": "            cols = Index([], name=self.columns.name)\n", "8220": "            if is_list_like(q):\n", "8221": "                return self._constructor([], index=q, columns=cols)\n", "8222": "            return self._constructor_sliced([], index=cols, name=q)\n", "8223": "\n"}}
