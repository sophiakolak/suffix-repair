{"rank": 1, "bleu_score": 0.7905694150420949, "candidate": "        grads = self.optimizer.compute_gradients(loss, params)\n"}
{"rank": 2, "bleu_score": 0.7905694150420949, "candidate": "        grads = self.optimizer.compute_gradients(loss, params)\n"}
{"rank": 3, "bleu_score": 0.7905694150420949, "candidate": "        grads = self.optimizer.compute_gradients(loss, params)\n"}
{"rank": 4, "bleu_score": 0.7905694150420949, "candidate": "        grads = self.optimizer.compute_gradients(loss, params)\n"}
{"rank": 5, "bleu_score": 0.7905694150420949, "candidate": "        grads = self.optimizer.compute_gradients(loss, params)\n"}
{"rank": 6, "bleu_score": 0.7905694150420949, "candidate": "        grads = self.optimizer.compute_gradients(loss, params)\n"}
{"rank": 7, "bleu_score": 0.7905694150420949, "candidate": "        grads = self.optimizer.compute_gradients(loss, params)\n"}
{"rank": 8, "bleu_score": 0.7905694150420949, "candidate": "        grads = self.optimizer.compute_gradients(loss, params)\n"}
{"rank": 9, "bleu_score": 0.7905694150420949, "candidate": "        grads = self.optimizer.compute_gradients(loss, params)\n"}
{"rank": 10, "bleu_score": 0.7905694150420949, "candidate": "        grads = self.optimizer.compute_gradients(loss, params)\n"}
{"rank": 11, "bleu_score": 0.7905694150420949, "candidate": "        grads = self.optimizer.compute_gradients(loss, params)\n"}
{"rank": 12, "bleu_score": 0.7905694150420949, "candidate": "        grads = self.optimizer.compute_gradients(loss, params)\n"}
{"rank": 13, "bleu_score": 0.7905694150420949, "candidate": "        grads = self.optimizer.compute_gradients(loss, params)\n"}
{"rank": 14, "bleu_score": 0.5850453652111616, "candidate": "        self.optimizer.minimize(loss, var_list=params)\n"}
{"rank": 15, "bleu_score": 0.7905694150420949, "candidate": "        grads = self.optimizer.compute_gradients(loss, params)\n"}
{"rank": 16, "bleu_score": 0.7905694150420949, "candidate": "        grads = self.optimizer.compute_gradients(loss, params)\n"}
{"rank": 17, "bleu_score": 0.6546536707079771, "candidate": "        grads_and_vars = self.optimizer.compute_gradients(loss, params)\n"}
{"rank": 18, "bleu_score": 0.7905694150420949, "candidate": "        grads = self.optimizer.compute_gradients(loss, params)\n"}
{"rank": 19, "bleu_score": 0.7905694150420949, "candidate": "        grads = self.optimizer.compute_gradients(loss, params)\n"}
{"rank": 20, "bleu_score": 0.7905694150420949, "candidate": "        grads = self.optimizer.compute_gradients(loss, params)\n"}
