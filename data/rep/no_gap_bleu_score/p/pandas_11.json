{"rank": 1, "bleu_score": 0.3377728405786783, "candidate": "                i = np.where(level == key)[0][0]\n                to_concat.append(i * np.ones(len(index), dtype=np.intp))\n            codes = np.concatenate(to_concat)\n            codes_list.append(codes)\n"}
{"rank": 2, "bleu_score": 0.14526563849195676, "candidate": "                i = ensure_index(level).get_indexer(key)\n                to_concat.append(index.codes[:, i])\n            codes = np.concatenate(to_concat)\n            codes_list.append(codes)\n"}
{"rank": 3, "bleu_score": 0.056232462405783196, "candidate": "                labels = level.get_indexer(key)\n                to_concat.append(labels)\n            level_codes = concat(to_concat, ignore_index=True)\n            codes_list.append(level_codes)\n"}
{"rank": 4, "bleu_score": 0.07088237360060792, "candidate": "                codes = com.values_from_object(index)\n                to_concat.append(level.get_indexer(codes, method=\"pad\"))\n            codes_list.append(np.concatenate(to_concat))\n        concat_index = MultiIndex(\n"}
{"rank": 5, "bleu_score": 0.10608704502265012, "candidate": "                i = level.get_loc(key)\n                codes = [i] * len(index)\n                to_concat.append(codes)\n            codes_list.append(np.concatenate(to_concat))\n"}
{"rank": 6, "bleu_score": 0.14728117019943235, "candidate": "                if isinstance(key, tuple):\n                    if key in level:\n                        loc = level.get_loc(key)\n                        to_concat.append(np.full_like(index, loc, dtype=np.intp))\n"}
{"rank": 7, "bleu_score": 0.32114095655558034, "candidate": "                codes = level.get_indexer(key)\n                if len(level) != len(codes):\n                    raise ValueError(\n                        f\"Key length ({len(level)}) and codes length \"\n"}
{"rank": 8, "bleu_score": 0.15426247290177728, "candidate": "                i = index.get_level_values(key)\n                lev = level.get_loc(key)\n                codes = np.array(i.codes, dtype=np.intp)\n                codes[codes == -1] = len(level)\n"}
{"rank": 9, "bleu_score": 0.31216026274117886, "candidate": "                labels = np.where(level == key)[0]\n                if len(labels) == 0:\n                    raise Exception(\"Level %s not found\" % key)\n                elif len(labels) > 1:\n"}
{"rank": 10, "bleu_score": 0.055667049878610736, "candidate": "                # if the levels are equal, then we can use the codes\n                # directly, otherwise do a map\n                if level.equals(index):\n                    to_concat.append(index.codes)\n"}
{"rank": 11, "bleu_score": 0.05838227167180942, "candidate": "                labels = index.get_indexer_for(level)\n                to_concat.append(labels)\n            level_codes = ensure_int64(concat_compat(to_concat))\n            codes_list.append(level_codes)\n"}
{"rank": 12, "bleu_score": 0.1546471140483401, "candidate": "                level_index = ensure_index(level)\n                if not isinstance(key, str):\n                    key = level_index[key]\n                tup = (key,)\n"}
{"rank": 13, "bleu_score": 0.05911306047889631, "candidate": "                i = level.get_loc(key)\n                try:\n                    codes = ensure_platform_int(index.codes)\n                except AttributeError:\n"}
{"rank": 14, "bleu_score": 0.12831715400106128, "candidate": "                if key not in index.levels[0]:\n                    # GH 18295\n                    # if the key is not in the index, we need to\n                    #  add it in with all missing values\n"}
{"rank": 15, "bleu_score": 0.09855153450335288, "candidate": "                i = level.get_loc(key)\n                to_concat.append(np.repeat(i, len(index)))\n            codes_list.append(np.concatenate(to_concat))\n        # for compatibility with older numpy versions\n"}
{"rank": 16, "bleu_score": 0.2622104930234907, "candidate": "                i = levels[0].get_loc(key)\n                codes = ensure_platform_int(index.values)\n                if codes.dtype.kind == \"i\":\n                    to_concat.append(codes + len(levels[0]) * i)\n"}
{"rank": 17, "bleu_score": 0.1504539566064527, "candidate": "                i = index.get_level_values(key)\n                s = i.size\n                if isinstance(level, MultiIndex):\n                    assert len(level.levels) == 1\n"}
{"rank": 18, "bleu_score": 0.11549590058678179, "candidate": "                label = level == key\n                to_concat.append(com.get_level_codes(index.values, label))\n            level_codes = np.concatenate(to_concat)\n            codes_list.append(level_codes)\n"}
{"rank": 19, "bleu_score": 0.10157061268645234, "candidate": "                code = level.get_loc(key)\n                if isinstance(code, slice):\n                    # GH 16834\n                    code = np.arange(code.start, code.stop, code.step)\n"}
{"rank": 20, "bleu_score": 0.10546073677592414, "candidate": "                take_index = level.get_indexer([key])\n                if take_index.ndim > 1 or (take_index == -1).any():\n                    # handle the \n"}
