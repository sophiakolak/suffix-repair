{"rank": 1, "bleu_score": 1.0547686614863434e-154, "candidate": "        xmin_d, xmax_d = x_trf.transform([dL.xmin, dL.xmax])\n        ymin_d, ymax_d = y_trf.transform([dL.ymin, dL.ymax])\n"}
{"rank": 2, "bleu_score": 0.11935247900657213, "candidate": "        corners = (x_trf.transform(array([dL.xmin, dL.xmax])),\n                   y_trf.transform(array([dL.ymin, dL.ymax])))\n"}
{"rank": 3, "bleu_score": 8.274286134223026e-155, "candidate": "        corners = (dL.x0, dL.y0), (dL.x1, dL.y0), (dL.x1, dL.y1), (dL.x0, dL.y1)\n        corners = np.array([x_trf.transform(pt) + y_trf.transform(pt)\n"}
{"rank": 4, "bleu_score": 7.70649047396433e-155, "candidate": "        x_mid = 0.5 * (dL.xmin + dL.xmax)\n        y_mid = 0.5 * (dL.ymin + dL.ymax)\n"}
{"rank": 5, "bleu_score": 1.0547686614863434e-154, "candidate": "        xmin_, xmax_ = x_trf.transform([dL.x0, dL.x1])\n        ymin_, ymax_ = y_trf.transform([dL.y0, dL.y1])\n"}
{"rank": 6, "bleu_score": 8.914422220094638e-155, "candidate": "        x_points = np.array([dL.xmin, dL.xmax, dL.xmax, dL.xmin])\n        y_points = np.array([dL.ymin, dL.ymin, dL.ymax, dL.ymax])\n"}
{"rank": 7, "bleu_score": 0.07992447073373311, "candidate": "        corners = (dL.x0, dL.y0), (dL.x1, dL.y0), (dL.x0, dL.y1), (dL.x1, dL.y1)\n        x_corners, y_corners = zip(*map(lambda c: self.transData.transform(c),\n"}
{"rank": 8, "bleu_score": 0.42135048580019224, "candidate": "        x0, x1 = x_trf.transform_point((dL.x0, dL.x1))\n        y0, y1 = y_trf.transform_point((dL.y0, dL.y1))\n"}
{"rank": 9, "bleu_score": 6.17087516772532e-155, "candidate": "        self.set_ylim(np.interp(y_expander * .5,\n                                [0., 1.],\n"}
{"rank": 10, "bleu_score": 5.807202809492351e-155, "candidate": "        xmin, ymin, xmax, ymax = dL.extents\n        y_exp = y_expander / 2\n"}
{"rank": 11, "bleu_score": 8.214546595247418e-155, "candidate": "        xmax = min(xmax, dL.xmax)\n        xmin = max(xmin, dL.xmin)\n"}
{"rank": 12, "bleu_score": 0.11364762059365426, "candidate": "        self.set_ylim(((1 + y_expander) *\n                       (y_trf.transform(self.get_ylim()) -\n"}
{"rank": 13, "bleu_score": 6.808502433396784e-155, "candidate": "        self.set_ylim((dL.y0*(1-y_expander) + dL.y1*y_expander,\n                       dL.y1*(1-y_expander) + dL.y0*y_expander))\n"}
{"rank": 14, "bleu_score": 7.70649047396433e-155, "candidate": "        x_centre = 0.5 * (dL.xmin + dL.xmax)\n        y_centre = 0.5 * (dL.ymin + dL.ymax)\n"}
{"rank": 15, "bleu_score": 2.454102690856474e-155, "candidate": "        xr = xmax - xmin\n        yr = ymax - ymin\n"}
{"rank": 16, "bleu_score": 0.16727410794110129, "candidate": "        x0 = dL.x0; x1 = dL.x1\n        y0 = dL.y0; y1 = dL.y1\n"}
{"rank": 17, "bleu_score": 8.274286134223026e-155, "candidate": "        xrange = max(abs(dL.x1 - dL.x0), 1e-30)\n        yrange = max(abs(dL.y1 - dL.y0), 1e-30)\n"}
{"rank": 18, "bleu_score": 6.493334959446866e-155, "candidate": "        x_center, y_center = dL.x0 + 0.5 * dL.width, dL.y0 + 0.5 * dL.height\n        y_expander *= 0.5\n"}
{"rank": 19, "bleu_score": 0.45044261646145084, "candidate": "        x0, x1 = x_trf.transform([dL.x0, dL.x1])\n        y0, y1 = y_trf.transform([dL.y0, dL.y1])\n"}
{"rank": 20, "bleu_score": 8.351371386418859e-156, "candidate": "        dx = dL.width\n        dy = dL.height\n"}
