{"project": "black", "bug": 2, "project_url": "https://github.com/psf/black", "file_changed": "black.py", "buggy_commit_id": "c8ca6b2b9ff3510bee12129824cebfc2fc51e5b2", "fixed_commit_id": "892eddacd215d685e136686b7f629ade70adca83", "lines_deleted": {"3118": "        is_fmt_on = False\n", "3119": "        for comment in list_comments(container.prefix, is_endmarker=False):\n", "3120": "            if comment.value in FMT_ON:\n", "3121": "                is_fmt_on = True\n", "3122": "            elif comment.value in FMT_OFF:\n", "3123": "                is_fmt_on = False\n", "3124": "        if is_fmt_on:\n", "3127": "        yield container\n", "3129": "        container = container.next_sibling\n"}, "lines_added": {"3118": "        if fmt_on(container):\n", "3121": "        # fix for fmt: on in children\n", "3122": "        if contains_fmt_on_at_column(container, leaf.column):\n", "3123": "            for child in container.children:\n", "3124": "                if contains_fmt_on_at_column(child, leaf.column):\n", "3125": "                    return\n", "3126": "                yield child\n", "3127": "        else:\n", "3128": "            yield container\n", "3129": "            container = container.next_sibling\n", "3130": "\n", "3132": "def fmt_on(container: LN) -> bool:\n", "3133": "    is_fmt_on = False\n", "3134": "    for comment in list_comments(container.prefix, is_endmarker=False):\n", "3135": "        if comment.value in FMT_ON:\n", "3136": "            is_fmt_on = True\n", "3137": "        elif comment.value in FMT_OFF:\n", "3138": "            is_fmt_on = False\n", "3139": "    return is_fmt_on\n", "3140": "\n", "3141": "\n", "3142": "def contains_fmt_on_at_column(container: LN, column: int) -> bool:\n", "3143": "    for child in container.children:\n", "3144": "        if (\n", "3145": "            isinstance(child, Node)\n", "3146": "            and first_leaf_column(child) == column\n", "3147": "            or isinstance(child, Leaf)\n", "3148": "            and child.column == column\n", "3149": "        ):\n", "3150": "            if fmt_on(child):\n", "3151": "                return True\n", "3152": "\n", "3153": "    return False\n", "3154": "\n", "3155": "\n", "3156": "def first_leaf_column(node: Node) -> Optional[int]:\n", "3157": "    for child in node.children:\n", "3158": "        if isinstance(child, Leaf):\n", "3159": "            return child.column\n", "3160": "    return None\n"}}