{"project": "tornado", "bug": 5, "project_url": "https://github.com/tornadoweb/tornado", "file_changed": "tornado/ioloop.py", "buggy_commit_id": "2d4053daa56c609d642b214399e046671d4a593e", "fixed_commit_id": "886643965b5cb782503d8d7b374b7a794ec2077b", "lines_deleted": {"1220": "            callback_time_sec = self.callback_time / 1000.0\n"}, "lines_added": {"1219": "        callback_time_sec = self.callback_time / 1000.0\n", "1221": "            # The period should be measured from the start of one call\n", "1222": "            # to the start of the next. If one call takes too long,\n", "1223": "            # skip cycles to get back to a multiple of the original\n", "1224": "            # schedule.\n", "1227": "        else:\n", "1228": "            # If the clock moved backwards, ensure we advance the next\n", "1229": "            # timeout instead of recomputing the same value again.\n", "1230": "            # This may result in long gaps between callbacks if the\n", "1231": "            # clock jumps backwards by a lot, but the far more common\n", "1232": "            # scenario is a small NTP adjustment that should just be\n", "1233": "            # ignored.\n", "1234": "            #\n", "1235": "            # Note that on some systems if time.time() runs slower\n", "1236": "            # than time.monotonic() (most common on windows), we\n", "1237": "            # effectively experience a small backwards time jump on\n", "1238": "            # every iteration because PeriodicCallback uses\n", "1239": "            # time.time() while asyncio schedules callbacks using\n", "1240": "            # time.monotonic().\n", "1241": "            # https://github.com/tornadoweb/tornado/issues/2333\n", "1242": "            self._next_timeout += callback_time_sec\n"}}